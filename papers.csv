ID;Authors;Title;Year;Source Title;Source Title Abbreviation;Page Start;Page End;Cited by;Abstract;Author Keyword;Index Keyword;Language;Document Type;Type of Study;Research Type of Primary Studies;Research Type of Secondary Study;SWEBOK;Contributions;Challenges;Contributions Category;Challenges Category
ACM0007;Murillo, Juan M. and Garcia-Alonso, Jose and Moguel, Enrique and Barzen, Johanna and Leymann, Frank and Ali, Shaukat and Yue, Tao and Arcaini, Paolo and Pérez-Castillo, Ricardo and García Rodríguez de Guzmán, Ignacio and Piattini, Mario and Ruiz-Cortés, Antonio and Brogi, Antonio and Zhao, Jianjun and Miranskyy, Andriy and Wimmer, Manuel;Quantum Software Engineering: Roadmap and Challenges Ahead;2025;Transactions on Software Engineering and Methodology;TOSEM;1;50;2;As quantum computers advance, the complexity of the software they can execute increases as well. To ensure this software is efficient, maintainable, reusable, and cost-effective —key qualities of any industry-grade software— mature software engineering practices must be applied throughout its design, development, and operation. However, the significant differences between classical and quantum software make it challenging to directly apply classical software engineering methods to quantum systems. This challenge has led to the emergence of Quantum Software Engineering as a distinct field within the broader software engineering landscape. In this work, a group of active researchers analyse in depth the current state of quantum software engineering research. From this analysis, the key areas of quantum software engineering are identified and explored in order to determine the most relevant open challenges that should be addressed in the next years. These challenges help identify necessary breakthroughs and future research directions for advancing Quantum Software Engineering.;Quantum Software Engineering, Open challenges, Quantum Computing, QSE;0;English;Article;Primary Study;Philosophical papers;0;The Software Engineering in General;O artigo contribui com um framework conceitual organizado em um roadmap contendo 7 áreas principais da Engenharia de Software Quântico (QSE), explorando oportunidades e desafios técnicos, além de indicar temas prioritários para pesquisa e desenvolvimento futuro.;Os principais desafios envolvem a imaturidade da tecnologia quântica, a ausência de padronizações, a carência de abstrações adequadas e a necessidade urgente de novas práticas e ferramentas de engenharia de software adaptadas ao paradigma quântico.;"Conceptual framework; Research agenda";Tool immaturity
SCP0001;"Ahmad A.; Khan A.A.; Waseem M.; Fahmideh M.; Mikkonen T.";Towards Process Centered Architecting for Quantum Software Systems;2022;International Conference on Quantum Software;QSW;26;31;17;Quantum Software Engineering (QSE) is a recent trend-focused on unifying the principles of quantum mechanics and practices of software engineering-to design, develop, validate, and evolve quantum age software systems and applications. Software architecture for quantum computing (a.k. a. quantum software architectures (QSA)) supports the design, development, and maintenance etc. phases of quantum software systems using architectural components and connectors. QSA can enable quantum software designers and developers to map the operations of Qubits to architectural components and connectors for implementing quantum software. This research aims to explore the role of QSAs by investigating (i) architectural process having architecting activities, and (ii) human roles that can exploit available tools to automate and customise architecture-centric implementation of quantum software. Results of this research can facilitate knowledge transfer, enabling researchers and practitioners, to address challenges of architecture-centric implementation of quantum software systems.  © 2022 IEEE.;"Architecture Process; Quantum Software Architecture; Quantum Software Engineering; Reference Architecture";"Application programs; Knowledge management; Quantum computers; Quantum theory; Software design; Architectural components; Architectural connectors; Architecture process; Architecture-centric; Quantum software architecture; Quantum software engineering; Recent trends; Reference architecture; Software applications; Software-systems; Software architecture";English;Conference Paper;Primary Study;Evaluation research;0;Software Engineering Process;O artigo propõe um processo centrado na arquitetura para o desenvolvimento de software quântico, identificando cinco atividades essenciais para a modelagem e implementação de arquiteturas quânticas. Além disso, mapeia quatro papéis de profissionais fundamentais na Engenharia de Software Quântico (QSE) e destaca 11 ferramentas que podem apoiar diferentes fases do processo arquitetural. A pesquisa também fornece um exemplo demonstrativo aplicado à distribuição de chaves quânticas (QKD), ilustrando como o modelo pode estruturar o design e a implementação de software quântico.;Os principais desafios na arquitetura de software para computação quântica incluem a falta de um processo bem definido para projetar e implementar software quântico, a escassez de ferramentas padronizadas que automatizem o desenvolvimento arquitetural e a necessidade de capacitação profissional para lidar com os conceitos e peculiaridades da computação quântica. O artigo propõe uma agenda de pesquisa voltada para o desenvolvimento de novas metodologias de modelagem, integração de ferramentas para suporte automatizado e a criação de frameworks arquiteturais que possam ser amplamente adotados pela comunidade de desenvolvedores quânticos.;"Process model; Reference architecture";"Integration challenges; Modeling difficulty; Skill gap; Lack of community consolidation"
SCP0002;"Hevia J.L.; Peterssen G.; Piattini M.";QUANTUM SOFTWARE DEVELOPMENT RISKS;2024;Quantum Information and Computation;Quantum Inf. Comput.;455;467;0;In the last five years we have witnessed the emergence of numerous quantum computers, as well as dozens of quantum programming languages, platforms, etc… But it must be borne in mind that quantum computing is still in a state of technological flux, so it is essential to carry out a good risk assessment. Furthermore, it is necessary to try to mitigate the risks to safeguard the investments that organisations are starting to make in quantum software development. We identify some of the major risks associated with quantum computing, and specially quantum software and we also show a real case of risk mitigation based on technology. © 2024, Rinton Press Inc. All rights reserved.;"Quantum computing; quantum risks; quantum software development; quantum software engineering; quantum software platforms";"Quantum theory; Risk assessment; Software design; Development risk; Quanta computers; Quantum Computing; Quantum programming languages; Quantum risk; Quantum software development; Quantum software engineering; Quantum software platform; Risks assessments; Software platforms; Quantum computers";English;Article;Primary Study;Opinion papers;0;Software Security;O artigo apresenta uma análise abrangente dos principais riscos no desenvolvimento de software quântico, classificando-os em diferentes categorias, como segurança, privacidade, infraestrutura, padronização e sustentabilidade. Além disso, ele propõe estratégias de mitigação desses riscos, destacando a importância de abordagens agnósticas para o desenvolvimento de software quântico. O estudo também contribui ao fornecer um caso real de mitigação de riscos usando uma plataforma de software quântico, demonstrando como a adoção de arquiteturas flexíveis pode reduzir impactos decorrentes da rápida evolução do hardware e software quântico.;Os principais desafios incluem a falta de maturidade das ferramentas de desenvolvimento, a integração de software quântico com sistemas clássicos, a escassez de profissionais qualificados, e a necessidade de novos métodos de engenharia de software específicos para computação quântica. Além disso, o artigo destaca a importância de garantir a segurança e confiabilidade do software quântico em um cenário onde os riscos tecnológicos e organizacionais ainda não estão completamente compreendidos. Como agenda de pesquisa, o estudo sugere o desenvolvimento de novas métricas para qualidade de software quântico, a criação de técnicas de teste específicas para software quântico e a definição de padrões para integração e interoperabilidade entre sistemas quânticos e clássicos.;"Tool support; Reference architecture";"Integration challenges; Quality assurance"
SCP0003;"Juárez-Ramírez R.; Navarro C.X.; Jiménez S.; Ramírez A.; Tapia-Ibarra V.; Guerra-García C.; Perez-Gonzalez H.G.; Fernández-y-Fernández C.";A Taxonomic View of the Fundamental Concepts of Quantum Computing - A Software Engineering Perspective;2023;Programming and Computer Software  ;Program. Comput. Softw.;682;704;3;Abstract: Quantum computing is based on the principles of quantum mechanics, such as superposition, entanglement, measurement, and decoherence. The basic units of computation are qubits, which are abstract objects with a mathematical expression to implement the quantum mechanics principles. Alongside quantum hardware, software is a principal element for conducting quantum computing. The software consists of logic gates and quantum circuits that implement algorithms for the execution of quantum programs. Due to those characteristics, quantum computing is a paradigm that non-physics experts cannot understand. Under this new scheme for developing software, it is important to integrate a conceptual framework of the fundamentals on which quantum computing is based. In this paper, we present a kind of taxonomical view of the fundamental concepts of quantum computing and the derived concepts that integrate the emerging discipline of quantum software engineering. We performed a quasi-systematic mapping for conducting the systematic review because the objective of the review only intends to detect the fundamental concepts of quantum computing and quantum software. The results can help computer science students and professors as a starting point to address the study of this discipline. © 2023, Pleiades Publishing, Ltd.;;"Computation theory; Quantum optics; Qubits; Software engineering; Abstract object; Basic units; Decoherence; Engineering perspective; Entanglement measurement; Fundamental concepts; Hardware/software; Logic gate circuits; Mathematical expressions; Quantum Computing; Quantum entanglement";English;Article;Secondary Study;0;Quasi-systematic mapping;The Software Engineering in General;O artigo fornece uma visão taxonômica estruturada dos conceitos fundamentais da computação quântica sob a perspectiva da engenharia de software. Ele realiza um mapeamento quase-sistemático da literatura para identificar os principais conceitos matemáticos, físicos e computacionais que sustentam a computação quântica e sua implementação em software. Além disso, propõe um corpo de conhecimento (BoK) inicial para a engenharia de software quântico, facilitando a sistematização da área e servindo como referência para futuras pesquisas e diretrizes educacionais. O estudo também destaca a necessidade de integração entre a computação quântica e a engenharia de software, contribuindo para o desenvolvimento de modelos que auxiliem na formação de profissionais na área.;Os principais desafios para a Engenharia de Software Quântico incluem a ausência de um corpo de conhecimento consolidado, dificultando a sistematização e o avanço da área. Além disso, há uma dificuldade na integração de conceitos quânticos com a engenharia de software, exigindo novas abordagens e metodologias para modelagem e desenvolvimento. A escassez de profissionais qualificados também representa um obstáculo significativo, tornando essencial o investimento em capacitação e no desenvolvimento de frameworks acessíveis para engenheiros de software. Outro desafio é a necessidade de ferramentas e metodologias adequadas, que permitam a especificação, validação e manutenção eficazes de software quântico. Por fim, a educação e disseminação do conhecimento ainda são limitadas, uma vez que a computação quântica permanece pouco acessível a profissionais da computação sem formação em física e matemática avançada. Como agenda de pesquisa, o estudo sugere a formalização de um corpo de conhecime;"Conceptual framework; Research agenda";"Integration challenges; Modeling difficulty; Skill gap; Quality assurance"
SCP0004;"Ahmad A.; Altamimi A.B.; Aqib J.";A reference architecture for quantum computing as a service;2024;Journal of King Saud University; J. King Saud Univ. - Comput. Inform. Sci.;0;0;2;Quantum computers (QCs) aim to disrupt the status-quo of computing – replacing traditional systems and platforms that are driven by digital circuits and modular software – with hardware and software that operate on the principle of quantum mechanics. QCs that rely on quantum mechanics can exploit quantum circuits (i.e., quantum bits for manipulating quantum gates) to achieve ‘quantum computational supremacy’ over traditional, i.e., digital computing systems. Currently, the issues that impede mass-scale adoption of quantum systems are rooted in the fact that building, maintaining, and/or programming QCs is a complex and radically distinct engineering paradigm when compared to the challenges of classical computing and software engineering. Quantum service orientation is seen as a solution that synergises the research on service computing and quantum software engineering (QSE) to allow developers and users to build and utilise quantum software services based on pay-per-shot utility computing model. The pay-per-shot model represents a single execution of instruction on quantum processing unit and it allows vendors (e.g., Amazon Braket) to offer their QC platforms, simulators, and software services to end-users. This research contributes by (i) developing a reference architecture for enabling Quantum Computing as a Service (QCaaS), (ii) implementing microservices with the quantum-classic split pattern as an architectural use-case, and (iii) evaluating the architecture based on practitioners’ feedback. The proposed reference architecture follows a layered software pattern to support the three phases of service lifecycle namely development, deployment, and split of quantum software services. In the QSE context, the research focuses on unifying architectural methods and service-orientation patterns to promote reuse knowledge and best practices to tackle emerging and futuristic challenges of architecting QCaaS. © 2024 The Author(s);"Quantum service computing; Quantum software; Service computing; Software architecture; Software engineering";;English;Article;Secondary Study;0;Mapping Study;Software Architecture;"O trabalho apresenta uma arquitetura de referência baseada em camadas para apoiar o ciclo de vida de serviços quânticos, desde a concepção até a execução, com um protótipo baseado em microserviços e padrão quantum-classic split, avaliado por 22 profissionais distribuídos globalmente; fornece também uma metodologia empírica para desenvolvimento de serviços e diretrizes para implementação de QCaaS em plataformas como o Azure.";Os principais desafios abordados incluem a escassez de arquiteturas padronizadas para sistemas quânticos, a complexidade de dividir corretamente o processamento entre partes clássicas e quânticas, a falta de ferramentas de modelagem específicas para o paradigma híbrido, e a necessidade de mais pesquisas empíricas que validem a reusabilidade e aplicabilidade de padrões clássicos adaptados ao contexto quântico.;"Reference architecture; Tool support; Research agenda";"Lack of modeling standards; Integration challenges; Tool support gap; System complexity"
SCP0005;"Stirbu V.; Haghparast M.; Waseem M.; Dayama N.; Mikkonen T.";Full-Stack Quantum Software in Practice: Ecosystem, Stakeholders and Challenges;2023;International Conference on Quantum Computing and Engineering;QCE;177;180;5;The emergence of quantum computing has introduced a revolutionary paradigm capable of transforming numerous scientific and industrial sectors. Nevertheless, realizing the practical utilization of quantum software in real-world applications presents significant challenges. Factors such as variations in hardware implementations, the intricacy of quantum algorithms, the integration of quantum and traditional software, and the absence of standardized software and communication interfaces hinder the development of a skilled workforce in this domain. This paper explores tangible approaches to establishing quantum computing software development process and addresses the concerns of various stakeholders. By addressing these challenges, we aim to pave the way for the effective utilization of quantum computing in diverse fields.  © 2023 IEEE.;"operations; quantum computing; quantum software engineering; software development process";"Application programs; Quantum computers; Quantum theory; Hardware implementations; Industrial sector; Operation; Quantum algorithms; Quantum Computing; Quantum software engineering; Real-world; Scientific sectors; Software development process; Software interfaces; Software design";English;Conference Paper;Primary Study;Opinion papers;0;The Software Engineering in General;O estudo propõe uma visão abrangente sobre o desenvolvimento de software quântico, abordando desde a concepção até a operação, destacando a necessidade de integração entre componentes clássicos e quânticos e a importância da padronização e evolução das ferramentas de desenvolvimento.;A implementação de software quântico enfrenta desafios como a integração entre software clássico e quântico, a limitação de hardware disponível, a necessidade de técnicas avançadas de depuração e verificação, e a falta de padronização de interfaces e ferramentas de desenvolvimento.;Tool support;"Lack of standardization; Integration challenges; Quality assurance; Hardware limitations"
SCP0011;"Yue T.; Ali S.; Arcaini P.";Towards Quantum Software Requirements Engineering;2023;International Conference on Quantum Computing and Engineering;QCE;161;164;4;Quantum software engineering (QSE) is receiving increasing attention, as evidenced by increasing publications on topics, e.g., quantum software modeling, testing, and debugging. However, in the literature, quantum software requirements engineering (QSRE) is still a software engineering area that is relatively less investigated. To this end, in this paper, we provide an initial set of thoughts about how requirements engineering for quantum software might differ from that for classical software after making an effort to map classical requirements classifications (e.g., functional and extra-functional requirements) into the context of quantum software. Moreover, we provide discussions on various aspects of QSRE that deserve attention from the Quantum software engineering community.  © 2023 IEEE.;"quantum software engineering; requirements; requirements engineering";"Program debugging; Software testing; Model testing; Quantum software engineering; Requirement; Requirement engineering; Requirements classifications; Software debugging; Software modeling; Software requirements; Software testings; Testing and debugging; Requirements engineering";English;Conference Paper;Primary Study;Opinion papers;0;Software Requirements;O estudo apresenta uma estrutura inicial para Engenharia de Requisitos de Software Quântico, abordando classificações específicas, requisitos híbridos (clássico-quântico) e desafios relacionados a portabilidade, desempenho, confiabilidade e escalabilidade de sistemas quânticos.;A falta de padronização para elicitação e especificação de requisitos quânticos, a necessidade de distinguir claramente requisitos clássicos e quânticos, e a adaptação de técnicas de validação e verificação para software quântico, dado seu caráter probabilístico e a limitação de observabilidade.;Empirical study;"Lack of standardization; Quality assurance; Classical-quantum separation"
SCP0012;"Liimatta P.; Taipale P.; Halunen K.; Heinosaari T.; Mikkonen T.; Stirbu V.";Research Versus Practice in Quantum Software Engineering: Experiences From Credit Scoring Use Case;2024;Software;IEEE Software;9;16;0;The emergence of quantum computing proposes a revolutionary paradigm that can radically transform numerous scientific and industrial application domains. However, realizing this promise in industrial applications is far from being practical today. In this paper, we discuss industry experiences with respect to quantum computing, and the gap between quantum software engineering research and state-of-the-practice in industry-scale quantum computing.  © 2024 IEEE.;;"Application programs; Computer aided software engineering; Engineering research; Industrial research; Quantum efficiency; Quantum electronics; Quantum optics; Applications domains; Credit scoring; Industry experience; Quantum Computing; Software engineering research; State of the practice; Quantum computers";English;Article;Primary Study;Personal experience papers;0;The Software Engineering in General;"O artigo fornece uma análise crítica da lacuna entre a pesquisa acadêmica e a prática industrial na engenharia de software quântico, demonstrando, por meio de um estudo de caso com quantum annealing aplicado ao credit scoring, como decisões de particionamento de problema, escolha de algoritmo e limitações de hardware impactam diretamente a obtenção de vantagem quântica; além disso, apresenta lições aprendidas sobre formulação de QUBO, uso de WoE, e necessidade de ferramentas de observabilidade como o dwave-inspector.";O estudo evidencia desafios como a baixa conectividade entre qubits, que limita o tamanho dos problemas processáveis, a dificuldade de embutir QUBO em topologias de hardware real, a necessidade de ferramentas eficazes de depuração e verificação, e a complexidade de adaptar algoritmos clássicos a contextos quânticos sem perder desempenho ou precisão em ambientes NISQ.;Empirical study;"Quality assurance; Hardware limitations"
SCP0016;"Paltenghi M.; Pradel M.";MorphQ: Metamorphic Testing of the Qiskit Quantum Computing Platform;2023;International Conference on Software Engineering;ICSE;2413;2424;15;As quantum computing is becoming increasingly popular, the underlying quantum computing platforms are growing both in ability and complexity. Unfortunately, testing these platforms is challenging due to the relatively small number of existing quantum programs and because of the oracle problem, i.e., a lack of specifications of the expected behavior of programs. This paper presents MorphQ, the first metamorphic testing approach for quantum computing platforms. Our two key contributions are (i) a program generator that creates a large and diverse set of valid (i.e., non-crashing) quantum programs, and (ii) a set of program transformations that exploit quantum-specific metamorphic relationships to alleviate the oracle problem. Evaluating the approach by testing the popular Qiskit platform shows that the approach creates over 8k program pairs within two days, many of which expose crashes. Inspecting the crashes, we find 13 bugs, nine of which have already been confirmed. MorphQ widens the slim portfolio of testing techniques of quantum computing platforms, helping to create a reliable software stack for this increasingly important field. © 2023 IEEE.;"compiler testing; differential testing; fuzz testing; metamorphic testing; MorphQ; Qiskit; quality assurance; quantum bugs; quantum computing; quantum computing platforms; quantum program generator; quantum software reliability; software engineering";"Program compilers; Program debugging; Quantum computers; Software testing; Compiler testing; Computing platform; Differential testing; Fuzz Testing; Metamorphic testing; Morphq; Qiskit; Quantum bug; Quantum Computing; Quantum computing platform; Quantum program generator; Quantum software reliability; Software-Reliability; Software reliability";English;Conference Paper;Primary Study;Evaluation research;0;Software Testing;O artigo propõe uma estrutura completa de testes que inclui um gerador automático de programas quânticos válidos, um conjunto de dez transformações metamórficas específicas para computação quântica (como troca de ordem de qubits, injeção de operações nulas e transformação via QASM), e um mecanismo de comparação comportamental para detectar falhas. Avaliado sobre a plataforma Qiskit, o MorphQ revelou 13 bugs reais, nove deles confirmados, alcançando maior cobertura de código e diversidade de programas do que abordagens anteriores como o QDiff.;Os principais desafios abordados incluem a ausência de especificações formais (problema do oráculo), a geração de programas não triviais que respeitem as restrições quânticas, a identificação e validação de falhas em um ambiente probabilístico, a necessidade de integrar múltiplas transformações metamórficas para revelar erros complexos, e a limitação do desempenho de execução em simuladores clássicos.;Tool support;Quality assurance
SCP0019;"Openja M.; Morovati M.M.; An L.; Khomh F.; Abidi M.";Technical debts and faults in open-source quantum software systems: An empirical study;2022;Journal of Systems and Software;JSS;0;0;7;Quantum computing is a rapidly growing field attracting the interest of both researchers and software developers. Supported by its numerous open-source tools, developers can now build, test, or run their quantum algorithms. Although the maintenance practices for traditional software systems have been extensively studied, the maintenance of quantum software is still a new field of study but a critical part to ensure the quality of a whole quantum computing system. In this work, we set out to investigate the distribution and evolution of technical debts in quantum software and their relationship with fault occurrences. Understanding these problems could guide future quantum development and provide maintenance recommendations for the key areas where quantum software developers and researchers should pay more attention. In this paper, we empirically studied 118 open-source quantum projects, which were selected from GitHub. The projects are categorized into 10 categories. We found that the studied quantum software suffers from the issues of code convention violation, error-handling, and code design. We also observed a statistically significant correlation between code design, redundant code or code convention, and the occurrences of faults in quantum software. © 2022 Elsevier Inc.;"Quantum computing; Software bugs; Software maintenance; Software reliability; Technical debts";"Open source software; Open systems; Program debugging; Quantum computers; Software reliability; Code conventions; Code designs; Open-source; Quantum Computing; Software bug; Software developer; Software-Reliability; Software-systems; Technical debts; Technical fault; Computer software maintenance";English;Article;Primary Study;Evaluation research;0;Software Maintenance;O artigo contribui ao demonstrar, por meio de um estudo de caso baseado em dados históricos de repositórios, que há uma correlação relevante entre a presença de dívidas técnicas e a ocorrência de falhas em softwares quânticos, propondo insights valiosos para práticas de engenharia de software preventivas neste domínio emergente.;O trabalho evidencia como principal desafio a escassez de abordagens sistemáticas para identificação e mitigação de dívidas técnicas em softwares quânticos, que são particularmente suscetíveis a erros devido à sua complexidade e à rápida evolução tecnológica da computação quântica.;Empirical study;System complexity
SCP0021;"Akbar M.A.; Khan A.A.; Mahmood S.; Rafi S.";Quantum Software Engineering: A New Genre of Computing;2024;International Workshop on Quantum Software Engineering: The Next Evolution;QSE-NE;1;6;2;The quantum computing (QC) field is rapidly moving beyond the realm of pure science to become a commercially viable technology that may be able to overcome the drawbacks of traditional computing. Major technology tycoons have spent in building coding frameworks and hardware to create applications specifically designed for quantum computing over the last few years. The development of QC hardware is accelerating, however, the requirement for software-intensive methodology, approaches, procedures, instruments, roles and responsibilities for creating industrial-focused quantum software applications arises from operationalizing the QC. This paper outlines the concept of quantum software engineering (QSE) life cycle, which entails the engineering of quantum requirements, design, implementation, testing and maintenance of quantum software. This paper notably advocates for collaborative efforts between the industrial community and software engineering research to propose practical solutions to support the complete activities for the development of quantum software. The proposed vision makes it easier for researchers and practitioners to suggest new procedures, reference designs, cutting-edge equipment, and methods for utilizing quantum computers and creating the newest and most advanced quantum software. © 2024 Copyright held by the owner/author(s).;"Quantum computing (QC); Quantum software development life cycle; Quantum software engineering (QSE)";"Computer software maintenance; Cutting equipment; Photons; Quantum electronics; Software testing; Coding framework; Computing hardware; In-buildings; Methodology approaches; Quantum Computing; Quantum software development life cycle; Quantum software engineering; Software development life-cycle; Traditional computing; Quantum computers";English;Conference Paper;Primary Study;Philosophical papers;0;The Software Engineering in General;O artigo contribui ao apresentar uma análise fundamentada de obstáculos técnicos, metodológicos e organizacionais encontrados na prática da engenharia de software quântica, com destaque para questões de modelagem, abstração, interoperabilidade, testes, e qualidade. São discutidos também aspectos como evolução de requisitos, padronização e papel da colaboração interdisciplinar. A experiência relatada serve como base para propor direções futuras e práticas recomendadas para o desenvolvimento sistemático de software quântico.;Os principais desafios identificados incluem a imaturidade das ferramentas de desenvolvimento, a ausência de padrões e métricas consolidadas para avaliação de qualidade, e a dificuldade de adaptação de práticas clássicas de engenharia de software às peculiaridades do paradigma quântico. Há também limitações na capacidade de modelagem de sistemas híbridos clássico-quânticos e na disponibilidade de profissionais capacitados para atuar em equipes multidisciplinares.;Empirical study;Tool immaturity
SCP0022;"Pérez-Castillo R.; Jiménez-Navajas L.; Piattini M.";Modelling Quantum Circuits with UML;2021;International Workshop on Quantum Software Engineering;QSE;7;12;22;None of the quantum computing applications imagined will ever become a reality without quantum software. Quantum programmes have, to date, been coded with ad hoc techniques. Researchers in the field of quantum software engineering are, therefore, now demanding more systematic techniques and methods with which to produce software with sufficient quality. One of the challenges and lessons learned from classic software engineering is the need for high-level, abstract and technology-independent representations with which to design software before it is coded. This paper specifically addresses this challenge for quantum software design. Since UML is a well-proven modelling language that has been widely employed by industry for some time, we propose a UML extension for the representation of quantum algorithms. Our proposal comprises the definition of a UML profile based on various stereotypes that can be applied to the existing UML activity diagrams in order to represent quantum circuits. The advantage of this representation is that UML quantum circuits can be interrelated with other UML elements and diagrams, which will make it possible to represent various concerns and viewpoints of the so-called hybrid information systems. This will consequently enable classical and quantum aspects to be modelled together in integrated designs in a technological-agnostic manner that is already supported by a considerable number of existing software design tools.  © 2021 IEEE.;"Activity diagrams; Quantum algorithms; Quantum Computing; Quantum Software Engineering; UML";"Application programs; Modeling languages; Quantum computers; Quantum theory; Timing circuits; Ad-hoc techniques; Design softwares; Hybrid information system; Integrated designs; Quantum algorithms; Quantum Computing; Technology independent; UML activity diagrams; Software design";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O estudo propõe uma adaptação da UML para software quântico, permitindo a modelagem de circuitos quânticos com suporte a conceitos específicos da computação quântica, e valida essa abordagem por meio da representação do algoritmo de teletransporte quântico.;A ausência de padrões formais para modelagem de software quântico, a necessidade de ferramentas compatíveis para suportar essa modelagem e a dificuldade de mapear conceitos quânticos dentro de abordagens tradicionais de engenharia de software.;Tool support;"Lack of modeling standards; Tool support gap"
SCP0023;"Aparicio-Morales Á.M.; Moguel E.; Bibbo L.M.; Fernandez A.; Garcia-Alonso J.; Murillo J.M.";An overview of quantum software engineering in Latin America;2024;Quantum Information Processing;Quantum Inf. Process.;0;0;0;Quantum computing represents a revolutionary computational paradigm with the potential to address challenges beyond classical computers’ capabilities. The development of robust quantum software is indispensable to unlock the full potential of quantum computing. Like classical software, quantum software is expected to be complex and extensive, needing the establishment of a specialized field known as Quantum Software Engineering. Recognizing the regional focus on Latin America within this special issue, we have boarded on an in-depth inquiry encompassing a systematic mapping study of existing literature and a comprehensive survey of experts in the field. This rigorous research effort aims to illuminate the current landscape of Quantum Software Engineering initiatives undertaken by universities, research institutes, and companies across Latin America. This exhaustive study aims to provide information on the progress, challenges, and opportunities in Quantum Software Engineering in the Latin American context. By promoting a more in-depth understanding of cutting-edge developments in this burgeoning field, our research aims to serve as a potential stimulus to initiate pioneering initiatives and encourage collaborative efforts among Latin American researchers. © The Author(s) 2024.;"Mapping study; Quantum computing; Quantum Software Engineering; Software engineering; Survey";"Computer aided software engineering; Engineering research; Mapping; Quantum electronics; Quantum optics; 'current; Computational paradigm; Latin America; Latin americans; Mapping studies; Quantum Computing; Quantum software engineering; Research efforts; Rigorous research; Systematic mapping studies; Quantum computers";English;Article;Secondary Study;0;Systematic Mapping;The Software Engineering in General;O estudo destaca a atuação crescente de grupos de pesquisa da América Latina na área de QSE, apontando áreas prioritárias como linguagens quânticas, testes, educação e simulação. Também apresenta um levantamento de colaborações internacionais, eventos e publicações, fornecendo subsídios para o fortalecimento de políticas públicas, redes de colaboração e investimento em formação de recursos humanos especializados.;Os desafios incluem infraestrutura computacional limitada, financiamento restrito, barreiras linguísticas e a ausência de uma comunidade consolidada e articulada para pesquisa em QSE. O artigo aponta a necessidade de esforços coordenados para fortalecer o papel da América Latina como produtora de conhecimento em computação quântica, e não apenas como consumidora de tecnologia.;Empirical study;"Funding constraints; Lack of community consolidation"
SCP0024;"Khan A.A.; Akbar M.A.; Ahmad A.; Fahmideh M.; Shameem M.; Lahtinen V.; Waseem M.; Mikkonen T.";Agile Practices for Quantum Software Development: Practitioners' Perspectives;2023;International Conference on Quantum Software;QSW;9;20;12;Quantum software engineering is an emerging genre of software engineering that exploit principles of quantum bits (Qubit) and quantum gates (Qgates) to solve complex computing problems effeciently than their classical counterparts. According to its proponents, agile software development practices have the potential to address many of the problems endemic to the development of quantum software. However, there is a dearth of evidence investigating whether agile practices are suitable for, and can be adopted by, software teams in the context of quantum software development. To address this lack, we conducted an empirical study to investigate the needs and challenges of using agile practices to develop quantum software. While our semi-structured interviews with 26 practitioners across 10 countries highlighted the applicability of agile practices in this domain, the interview findings also revealed new challenges impeding the effective incorporation of these practices. Our research findings provide a springboard for further contextualization and seamless integration of agile practices in quantum software engineering (QSE) to develop emerging and next generation of quantum software systems and application. © 2023 IEEE.;"Agile Practices; Empirical Software Engineering; Quantum Software Engineering";"Application programs; Quantum theory; Agile practices; Agile software development; Classical counterpart; Complex computing; Empirical Software Engineering; Empirical studies; Quantum gates; Quantum software engineering; Software development practices; Software teams; Software design";English;Conference Paper;Primary Study;Evaluation research;0;Software Engineering Process;O estudo fornece evidências empíricas inéditas sobre a percepção de profissionais quanto à aplicação de práticas ágeis no contexto da engenharia de software quântico, destacando sua adequação ao desenvolvimento iterativo e incremental de sistemas híbridos, além de mapear quatro categorias centrais de desafios: lacunas de conhecimento, escalabilidade sustentável, carência de ferramentas específicas e ausência de padrões e documentação adaptados ao paradigma quântico.;Os principais desafios incluem a falta de preparo dos times em conceitos fundamentais da mecânica quântica, a ausência de um ecossistema ágil-quântico bem estruturado, ferramentas inadequadas para suportar o ciclo de vida do software quântico, e a necessidade urgente de padrões, documentação e modelos que orientem práticas ágeis compatíveis com o desenvolvimento de software neste novo paradigma.;Empirical study;Modeling difficulty
SCP0026;"Hevia J.L.; Peterssen G.; Piattini M.";QuantumPath: A quantum software development platform;2022;Journal of Software: Practice and Experience;Software Pract Exper;1517;1530;22;Quantum computing has experienced a breakthrough. Several companies are taking up the challenge of designing and manufacturing quantum computers, and the supply of tools for quantum software development is growing all the time. This article addresses quantum software development toolkits and introduces the ‘QuantumPath’ platform. In developing QuantumPath, our aim is to fulfil certain principles such as: agnosticism, extensibility, integration, independency, optimisation, scalability, security, usability and software engineering support. This article presents both the architecture itself as well as the main tools that compose QuantumPath, in order to illustrate the support which platform provides to the development and execution of quantum software. © 2021 The Authors. Software: Practice and Experience published by John Wiley & Sons Ltd.;"quantum computing; quantum toolkits; QuantumPath";"Computer software; Qubits; Optimisations; Practice and experience; Quanta computers; Quantum Computing; Quantum toolkit; Quantumpath; Security software; Security usabilities; Software development toolkit; Software practices; Software design";English;Article;Primary Study;Proposal of solution;0;Software Construction;O artigo introduz a plataforma QuantumPath, uma solução agnóstica para desenvolvimento de software quântico com suporte a diferentes tecnologias (gate-based e annealing), fornecendo editores visuais, mecanismos de integração com sistemas clássicos via Connection Points, sistema de telemetria, suporte à engenharia de software e execução em múltiplos backends, além de demonstrar a plataforma em casos reais nas áreas financeira e da saúde.;Os principais desafios incluem a ausência de padronização nas ferramentas de desenvolvimento quântico, a curva de aprendizado acentuada, as dificuldades de reimplementação e integração em sistemas híbridos, bem como a necessidade de garantir usabilidade, portabilidade entre plataformas e mecanismos de correção de erros e otimização em ambientes com hardware quântico ruidoso.;Tool support;"Lack of standardization; Integration challenges; Hardware limitations"
SCP0027;"El Aoun M.R.; Li H.; Khomh F.; Openja M.";Understanding Quantum Software Engineering Challenges An Empirical Study on Stack Exchange Forums and GitHub Issues;2021;IEEE International Conference on Software Maintenance and Evolution  ;Proc. - IEEE Int. Conf. Softw. Maint. Evol., ICSME;343;354;24;With the advance of quantum computing, quantum software becomes critical for exploring the full potential of quantum computing systems. Recently, quantum software engineering (QSE) becomes an emerging area attracting more and more attention. However, it is not clear what are the challenges and opportunities of quantum computing facing the software engineering community. This work aims to understand the QSE-related challenges perceived by developers. We perform an empirical study on Stack Exchange forums where developers post-QSE-related questions answers and Github issue reports where developers raise QSE-related issues in practical quantum computing projects. Based on an existing taxonomy of question types on Stack Overflow, we first perform a qualitative analysis of the types of QSE-related questions asked on Stack Exchange forums. We then use automated topic modeling to uncover the topics in QSE-related Stack Exchange posts and GitHub issue reports. Our study highlights some particularly challenging areas of QSE that are different from that of traditional software engineering, such as explaining the theory behind quantum computing code, interpreting quantum program outputs, and bridging the knowledge gap between quantum computing and classical computing, as well as their associated opportunities.  © 2021 IEEE.;"Issue reports; Quantum computing; Quantum software engineering; Stack Exchange; Topic modeling";"Computation theory; Quantum computers; Quantum optics; Empirical studies; Engineering challenges; Engineering community; Issue report; Post quantum; Quantum Computing; Quantum computing systems; Quantum software engineering; Stack exchange; Topic Modeling; Software engineering";English;Conference Paper;Primary Study;Evaluation research;0;Software Architecture;O trabalho fornece uma visão empírica rica sobre os principais obstáculos enfrentados no desenvolvimento de software quântico, categorizando os desafios em áreas como ferramentas, abstrações, testes, colaboração interdisciplinar e conhecimento técnico. O estudo também identifica expectativas e sugestões de melhorias a partir da vivência dos profissionais, contribuindo para a construção de uma agenda de pesquisa aplicada à QSE.;Os desafios apontados incluem a escassez de ferramentas maduras, a dificuldade de abstrair operações quânticas para desenvolvedores sem background em física, a ausência de métodos sistemáticos de teste e depuração, e a barreira de comunicação entre físicos e engenheiros de software. Também se destaca a complexidade de acompanhar a rápida evolução das plataformas e linguagens quânticas.;"Tool support; Reference architecture";"Tool immaturity; Quality assurance"
SCP0031;"Garcia-Alonso J.; Rojo J.; Valencia D.; Moguel E.; Berrocal J.; Murillo J.M.";Quantum Software as a Service Through a Quantum API Gateway;2022;Internet Computing;IEEE Internet Comput;34;41;42;As quantum computers mature, the complexity of quantum software increases. As we move from the initial standalone quantum algorithms toward complex solutions combining quantum algorithms with traditional software, new software engineering methods and abstractions are needed. Nowadays, quantum computers are usually offered in the cloud, under a pay-per-use model, leading to the adoption of the service-oriented good practices that dominate the cloud today. However, specific adaptations are needed to reap the benefits of service-oriented computing while dealing with quantum hardware limitations. In this article, we propose the Quantum API Gateway-an adaptation of the API Gateway pattern that takes into account the fact that quantum services cannot be deployed as traditional services. Instead, the Quantum API Gateway recommends the best quantum computer to run a specific quantum service at run time. As proof of concept, we provide an implementation of the Quantum API Gateway for the Amazon Braket platform. © 1997-2012 IEEE.;;"Computer software; Logic gates; Quantum computers; Software as a service (SaaS); Web services; Cloud-computing; Complex solution; Computational modelling; Hardware; Pay-per-use model; Quanta computers; Quantum algorithms; Quantum Computing; Software; Software engineering methods; Computer hardware";English;Article;Primary Study;Evaluation research;0;Software Architecture;"O trabalho apresenta a arquitetura e implementação do Quantum API Gateway, que adapta o padrão de gateway de microserviços para o contexto da computação quântica, permitindo determinar em tempo de execução qual computador quântico é mais adequado para executar um serviço com base em critérios como número de qubits, custo, tempo estimado e disponibilidade; sua implementação para a Amazon Braket é validada por meio de experimentos com diferentes cargas simultâneas.";Os principais desafios incluem a impossibilidade de manter serviços quânticos persistentemente implantados, a variação na disponibilidade e desempenho dos computadores quânticos, a falta de APIs em tempo real para monitoramento de hardware e a necessidade de previsão precisa do tempo de execução para otimizar a escolha do backend, exigindo modelos preditivos sofisticados baseados em aprendizado de máquina.;Reference architecture;"Modeling difficulty; Hardware limitations"
SCP0032;"Moguel E.; Garcia-Alonso J.; Terres-Escudero E.B.; Arias D.; Bringas P.G.; Muñoz A.D.; Monje M.R.; Lama J.R.O.; Murillo J.M.";Quantum Services Engineering: development, quality, testing, and security (Q-SERV Project);2024;Ibero-American Conference on Software Engineering;CIbSE;421;424;0;The new and revolutionary quantum computation aims to advance in important fields such as AI, cybersecurity, and medicine. The development of this technology has encouraged several research centers and companies such as Amazon, IBM, Google or Microsoft to devote considerable efforts to the development of new technologies that bring quantum computing to the market. Currently, access to this technology is provided through the Infrastructure as a Service paradigm and with hybrid systems that combine classical and quantum computing. In order to create these systems, significant advances in service-oriented quantum computing are required to enable developers to create and operate quantum services with the same level of quality and security as their classical counterparts. Therefore, the project presented in this paper is primarily aimed at providing techniques and methodologies for quantum software development by applying the lessons learned from classical software engineering. © 2024 27th Ibero-American Conference on Software Engineering, CIbSE 2024. All rights reserved.;;"Infrastructure as a service (IaaS); Quantum electronics; Software design; Software quality; Software testing; Classical computing; Cyber security; Engineering development; Google+; MicroSoft; Quality testing; Quantum Computing; Research center; Service paradigm; Services engineering; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;0;Software Security;O estudo propõe metodologias para o desenvolvimento de serviços quânticos, incluindo técnicas de orquestração e gerenciamento, métricas de qualidade e testabilidade, e abordagens para segurança e mitigação de erros em sistemas híbridos quântico-clássicos.;A falta de padronização e ferramentas maduras para desenvolvimento de serviços quânticos, dificuldades em garantir qualidade e testabilidade de software quântico devido à natureza probabilística dos qubits, e desafios de segurança e confiabilidade em arquiteturas híbridas.;Tool support;"Tool immaturity; Lack of standardization"
SCP0033;"O'Meara C.; Fernández-Campoamor M.; Cortiana G.; Bernabé-Moreno J.";Quantum Software Architecture Blueprints for the Cloud: Overview and Application to Peer-2-Peer Energy Trading;2023;Conference on Technologies for Sustainability;IEEE Conf. Technol. Sustain., SusTech;191;198;6;Applied quantum computing research has often focused on determining business-driven use-cases and applications of quantum algorithms which may provide advantage, either runtime or solution quality, over their classical counterparts. Often missed, yet equally important, is the discussion on how to actually run quantum software applications or models in a production environment where they run in an event-based or scheduled manner thereby providing the results to the enterprise which has spent time upskilling their development team and developing the quantum software solution.In this paper, we introduce a hybrid classical-quantum cloud architecture blueprint which starts from the code-level software development level, and extends to the production-ready quantum software application level. We then, for the first time, introduce a novel sample optimization application used in the energy industry for Peer-2-Peer energy trading and deploy it using the proposed cloud architecture blueprint. We demonstrate sample output of the live-running application where trading optimizations occurs on an hourly basis via remote connection to a quantum computing cloud backend.  © 2023 IEEE.;"cloud environment; Hyrbid quantum-classical application; quantum algorithm; QUBO; software architecture";"Application programs; Cloud computing architecture; Commerce; Quantum computers; Quantum theory; Software architecture; Software design; Cloud architectures; Cloud environments; Energy trading; Hyrbid quantum-classical application; Peer 2 peer; Quantum algorithms; Quantum Computing; Quantum-classical; QUBO; Software applications; Blueprints";English;Conference Paper;Primary Study;Evaluation research;0;Software Architecture;O estudo apresenta um blueprint para arquiteturas híbridas quântico-clássicas na nuvem, detalhando boas práticas de DevOps para software quântico e validando a proposta em um caso real de otimização de comércio de energia P2P usando computação quântica.;A integração eficiente de software quântico e clássico em ambientes de nuvem, a escalabilidade e automação de processos DevOps para software quântico, e a dificuldade de garantir execução confiável em backends quânticos devido a limitações de hardware e tempo de resposta.;"Empirical study; Reference architecture";"Integration challenges; Hardware limitations"
SCP0035;"Chen Q.; Camara R.; Campos J.; Souto A.; Ahmed I.";The Smelly Eight: An Empirical Study on the Prevalence of Code Smells in Quantum Computing;2023;International Conference on Software Engineering;ICSE;358;370;9;Quantum Computing (QC) is a fast-growing field that has enhanced the emergence of new programming languages and frameworks. Furthermore, the increased availability of computational resources has also contributed to an influx in the development of quantum programs. Given that classical and QC are significantly different due to the intrinsic nature of quantum programs, several aspects of QC (e.g., performance, bugs) have been investigated, and novel approaches have been proposed. However, from a purely quantum perspective, maintenance, one of the major steps in a software development life-cycle, has not been considered by researchers yet. In this paper, we fill this gap and investigate the prevalence of code smells in quantum programs as an indicator of maintenance issues. We defined eight quantum-specific smells and validated them through a survey with 35 quantum developers. Since no tool specifically aims to detect quantum smells, we developed a tool called QSmell that supports the proposed quantum-specific smells. Finally, we conducted an empirical investigation to analyze the prevalence of quantum-specific smells in 15 open-source quantum programs. Our results showed that 11 programs (73.33%) contain at least one smell and, on average, a program has three smells. Furthermore, the long circuit is the most prevalent smell present in 53.33% of the programs. © 2023 IEEE.;"Empirical study; Quantum computing; Quantum software engineering; Quantum-specific code smell";"Life cycle; Odors; Open source software; Program debugging; Quantum computers; Classical computing; Code smell; Computational resources; Empirical studies; Intrinsic nature; Performance bugs; Quantum Computing; Quantum software engineering; Quantum-specific code smell; Software development life-cycle; Software design";English;Conference Paper;Primary Study;Evaluation research;0;Software Quality;O artigo contribui ao propor um catálogo inédito de oito smells específicos para software quântico (CG, ROC, NC, LC, IM, IdQ, IQ, LPQ), validados via survey com 35 desenvolvedores da área, e implementa a ferramenta QSMELL para detecção automática desses smells em códigos escritos com Qiskit, avaliando 15 programas reais com resultados que evidenciam a prevalência e severidade de alguns smells como LC, NC e IdQ.;Os principais desafios envolvem a necessidade de conscientização e treinamento dos desenvolvedores sobre práticas de design para minimizar smells, a falta de ferramentas de apoio para observabilidade e refatoração em circuitos quânticos, e a carência de estudos aprofundados que relacionem a presença de smells com problemas reais de manutenção e qualidade em sistemas quânticos.;"Tool support; Empirical study";Tool support gap
SCP0038;Barbosa L.S.;Software engineering for 'quantum advantage';2020;International Conference on Software Engineering Workshops  ;ICSE;427;429;20;Software is a critical factor in the reliability of computer systems. While the development of hardware is assisted by mature science and engineering disciplines, software science is still in its infancy. This situation is likely to worsen in the future with quantum computer systems. Actually, if quantum computing is quickly coming of age, with potential groundbreaking impacts on many different fields, such benefits come at a price: quantum programming is hard and finding new quantum algorithms is far from straightforward. Thus, the need for suitable formal techniques in quantum software development is even bigger than in classical computation. A lack of reliable approaches to quantum computer programming will put at risk the expected quantum advantage of the new hardware. This position paper argues for the need for a proper quantum software engineering discipline benefiting from precise foundations and calculi, capable of supporting algorithm development and analysis.  © 2020 ACM.;"formal methods; quantum computing; software engineering";"Biomineralization; Computer hardware; Computer programming; Quantum theory; Qubits; Software design; Software reliability; Technical presentations; Algorithm development; Engineering disciplines; Formal techniques; Quantum algorithms; Quantum Computing; Quantum programming; Science and engineering; Software science; Formal methods";English;Conference Paper;Primary Study;Opinion papers;0;The Software Engineering in General;O estudo propõe uma agenda de pesquisa para Engenharia de Software Quântico, enfatizando a importância de modelos formais, cálculo algorítmico, lógicas dinâmicas e arquiteturas para sistemas distribuídos híbridos (quântico-clássico).;A falta de formalismo e metodologias padronizadas para desenvolvimento de software quântico, a necessidade de abstrações adequadas para modelagem de sistemas híbridos e os desafios de garantir verificação, testes e qualidade de software quântico.;Research agenda;"Modeling difficulty; Quality assurance"
SCP0039;"Moguel E.; Berrocal J.; García-Alonso J.; Murillo J.M.";A roadmap for quantum software engineering: Applying the lessons learned from the classics;2020;International Workshop on Quantum Software Engineering and Technology;QSET;5;13;21;Quantum Computing is one of the emerging areas of computing that currently generates more expectations. However, there are many doubts about its actual future projection. On the one hand, the industry shows reluctance to invest in it. The main reasons are the high costs of the hardware, together with the fact that current commercial quantum computers offer a potential that goes little beyond experimentation. On the other hand, there is controversy in the research community about the feasibility of creating and programming powerful and reliable quantum computers. The possibility of having reliable hardware with a reasonable number of Qubits seems still distant. Finally, current quantum programming tools are still at almost logic gate level, which limits the possibility of creating real complex quantum software systems. If we look back in time, this situation is reminiscent of the Software Crisis experienced by classical computing in the 60’s. This talk starts from this analogy and, analyzing the advances and the lessons learned in the field of Software Engineering in the last 60 years, raises the directions that could help to develop the future Quantum Software Engineering. © 2020 Copyright for this paper by its authors.;"Future quantum software engineering; Quantum computing; Quantum software crisis";"Computation theory; Computer hardware; Computer programming; Qubits; Classical computing; Future projections; High costs; Quantum Computing; Quantum programming; Research communities; Software crisis; Software systems; Computer software";English;Conference Paper;Primary Study;Opinion papers;0;The Software Engineering in General;O estudo traça um plano estratégico para o desenvolvimento da Engenharia de Software Quântico, abordando temas como processos e metodologias para software quântico, a necessidade de novas abstrações, e a criação de estruturas de programação adequadas para sistemas quânticos.;A falta de metodologias e processos adequados para o desenvolvimento de software quântico, a necessidade de abstrações específicas para modelagem e design de software quântico, e a adaptação das melhores práticas da engenharia de software clássica para o novo paradigma quântico.;Research agenda;"Modeling difficulty; Hardware limitations"
SCP0043;"Haghparast M.; Moguel E.; Garcia-Alonso J.; Mikkonen T.; Murillo J.M.";Innovative Approaches to Teaching Quantum Computer Programming and Quantum Software Engineering;2024;International Conference on Quantum Computing and Engineering;QCE;251;255;0;Quantum computing is an emerging field that promises to revolutionize various domains, such as simulation optimization, data processing, and more, by leveraging the principles of quantum mechanics. This paper outlines innovative pedagogical strategies developed by university lecturers in Fin-land and Spain for teaching quantum computer programming and quantum software engineering. Our curriculum integrates essential tools and methodologies such as containerization with Docker, Qiskit, PennyLane, and Ocean SDK to provide a comprehensive learning experience. The approach consists of several steps, from introducing the fundamentals of quantum mechanics to hands-on labs focusing on practical use cases. We believe quantum computer programming is an important topic and one that is hard to teach, so having a teaching agenda and guidelines for teaching can be of great help. © 2024 IEEE.;"Containerization; Docker; Ocean SDK; Pennylane; Qiskit; Quantum computer programming; quantum computing; quantum information; quantum programming education; Quantum Serverless; quantum software engineering";"Computer aided software engineering; Computer software; Curricula; Engineering education; Error correction; Ocean engineering; Plastic bottles; Quantum electronics; Quantum optics; Teaching; Containerization; Docker; Ocean SDK; Pennylane; Programming education; Qiskit; Quanta computers; Quantum computer programming; Quantum Computing; Quantum Information; Quantum programming; Quantum programming education; Quantum serverless; Quantum software engineering; Quantum computers";English;Conference Paper;Primary Study;Personal experience papers;0;Software Construction;O artigo apresenta uma proposta de arquitetura orientada a serviços para facilitar o desenvolvimento de sistemas de computação quântica, com foco em interoperabilidade, gerenciamento de qubits e flexibilidade para diferentes plataformas. A abordagem inclui módulos bem definidos, como interface de usuário, compilador, gerenciador de tarefas e backend de execução.;Os principais desafios incluem o gerenciamento da complexidade entre camadas clássicas e quânticas, a falta de padronização nas APIs e linguagens, e a escassez de ferramentas que permitam desenvolvimento modular com suporte a simulação, depuração e execução em hardwares reais.;"Education and training; Tool support; Reference architecture";"Lack of standardization; Hardware limitations"
SCP0044;"Jin T.; Zhao J.";ScaffML: A Quantum Behavioral Interface Specification Language for Scaffold;2023;International Conference on Quantum Software;QSW;128;137;1;Ensuring the correctness of quantum programs is crucial for quantum software quality assurance. Although various effective verification methods exist for classical programs, they cannot be applied to quantum programs due to the fundamental differences in their execution logic, such as quantum superposition and entanglement. This calls for new methods to verify the correctness of quantum programs. In this paper, we present a behavioral interface specification language (BISL) called ScaffML for the quantum programming language Scaffold. ScaffML allows the specification of pre- and post-conditions for Scaffold modules and enables the mixing of assertions with Scaffold code, thereby facilitating debugging and verification of quantum programs. This paper discusses the goals and overall approach of ScaffML and describes the basic features of the language through examples. ScaffML provides an easy-to-use specification language for quantum programmers, supporting static analysis, run-time checking, and formal verification of Scaffold programs. Finally, we present several instances to illustrate the workflow and functionalities of ScaffML. © 2023 IEEE.;"quantum computing; ScaffML; Scaffold; Specification languages; testing; verification";"Computation theory; Computer software selection and evaluation; Formal specification; Program debugging; Quality assurance; Quantum entanglement; Specification languages; Static analysis; Behavioral interfaces; Condition; Execution logic; Interface specification languages; Quantum Computing; Quantum programming languages; Quantum superpositions; Scaffml; Software quality assurance; Verification method; Scaffolds";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;"O artigo introduz a ScaffML como uma extensão da linguagem ACSL para Scaffold, permitindo a especificação formal de comportamentos esperados em módulos quânticos com suporte a verificação estática, análise dinâmica e transformação para linguagem intermediária processável por teoremas como Coq ou CVC3; além disso, apresenta exemplos de especificações para portas Hadamard, CNOT, SWAP, gates de fase e QFT, demonstrando como expressar superposição, entrelaçamento e contratos modulares em programas Scaffold.";Os principais desafios envolvem a inexistência de linguagens formais adaptadas às propriedades únicas da computação quântica, como superposição e entrelaçamento, a ausência de ferramentas de verificação automática para linguagens como Scaffold, e a necessidade de especificação modular precisa e interoperável para apoiar depuração, testes e verificação formal de software quântico em ambientes complexos e heterogêneos.;Tool support;Modeling difficulty
SCP0046;"Haghparast M.; Mikkonen T.; Nurminen J.K.; Stirbu V.";Quantum Software Engineering Challenges from Developers' Perspective: Mapping Research Challenges to the Proposed Workflow Model;2023;International Conference on Quantum Computing and Engineering;QCE;173;176;5;Despite the increasing interest in quantum computing, the aspect of development to achieve cost-effective and reliable quantum software applications has been slow. One barrier is the software engineering of quantum programs, which can be approached from two directions. On the one hand, many software engineering practices, debugging in particular, are bound to classical computing. On the other hand, quantum programming is closely associated with the phenomena of quantum physics, and consequently, the way we express programs resembles the early days of programming. Moreover, much of the software engineering research today focuses on agile development, where computing cycles are cheap and new software can be rapidly deployed and tested, whereas in the quantum context, executions may consume lots of energy, and test runs may require lots of work to interpret. In this paper, we aim at bridging this gap by starting with the quantum computing workflow and by mapping existing software engineering research to this workflow. Based on the mapping, we then identify directions for software engineering research for quantum computing.  © 2023 IEEE.;"quantum computing; Quantum software engineering; software development";"Application programs; Cost effectiveness; Engineering research; Program debugging; Quantum computers; Software design; Software testing; Cost effective; Engineering challenges; Perspective mapping; Quantum Computing; Quantum software engineering; Research challenges; Software applications; Software engineering research; Work-flows; Workflow models; Mapping";English;Conference Paper;Primary Study;Opinion papers;0;Software Engineering Process;O artigo fornece uma análise dos desafios enfrentados pelos desenvolvedores na Engenharia de Software Quântico (QSE), mapeando-os a um modelo de fluxo de trabalho para identificar lacunas na pesquisa. Ele destaca as dificuldades na adaptação de práticas clássicas da engenharia de software ao contexto quântico, especialmente em depuração, modelagem e execução. Além disso, propõe uma estrutura conceitual para entender melhor os desafios e sugere a necessidade de novas abordagens para desenvolvimento, validação e interpretação de software quântico.;Os principais desafios da QSE incluem a falta de metodologias bem estabelecidas, a dificuldade de depuração devido à natureza estocástica das execuções quânticas, a necessidade de novas abstrações para modelagem e a escassez de ferramentas padronizadas para desenvolvimento e validação. O artigo propõe uma agenda de pesquisa que envolve: (1) desenvolvimento de taxonomias para mapear problemas adequados à computação quântica, (2) aprimoramento de ferramentas para compilação e verificação de circuitos quânticos, (3) integração de técnicas formais para garantir a corretude do software quântico, e (4) exploração de machine learning para aprimorar a interpretação dos resultados quânticos e detecção de erros.;"Process model; Research agenda";"Integration challenges; Modeling difficulty"
SCP0047;"Jiménez-Navajas L.; Pérez-Castillo R.; Piattini M.";Reverse Engineering of Classical-Quantum Programs;2024;International Conference on Evaluation of Novel Approaches to Software Engineering  ;ENASE;275;282;0;Quantum computing has emerged as a crucial technology, which is expected to be progressively integrated into current, traditional information systems. Society could be benefited from several potential, promising applications based on quantum computing. To achieve such advantages, this new paradigm will require integrating the quantum software into the new hybrid (classical-quantum) information systems. Thus, it is necessary to adapt well-known and validated software engineering methods and techniques, such as software evolution methods based on Model-Driven Engineering principles. In particular, the proposal of this paper is framed in the Quantum Software Modernization process, and, in particular, it addresses the reverse engineering phase. The main contribution is a reverse engineering technique that analyses quantum (Qiskit) and classical (Python) code and builds a common, abstract model that combines both classical and quantum elements. The models are built in a technology-agnostic manner through the Knowledge Discovery Metamodel. Within this technique, relationships have been established between classical and quantum elements which can help to preserve knowledge and provide meaningful insights during the evolution toward hybrid information systems. The functioning of this technique is demonstrated through a running example with a program from the Qiskit Github repository. © 2024 by SCITEPRESS – Science and Technology Publications, Lda.;"Knowledge Discovery Metamodel; Qiskit; Quantum Computing; Reverse Engineering; Software Modernization";"Data mining; Information systems; Information use; Quantum computers; Software design; 'current; Classical-quantum; Crucial technology; Knowledge discovery metamodel; Meta model; Qiskit; Quantum Computing; Quantum-information systems; Software modernization; Validated softwares; Reverse engineering";English;Conference Paper;Primary Study;Proposal of solution;0;Software Maintenance;O estudo apresenta uma abordagem para engenharia reversa de software híbrido clássico-quântico, permitindo extrair modelos abstratos de programas escritos em Python com Qiskit, associando elementos clássicos e quânticos para facilitar sua modernização e evolução.;A integração de sistemas clássicos com software quântico, a necessidade de abstração e modelagem eficiente de código híbrido, e os desafios relacionados à migração e evolução de sistemas para um paradigma híbrido clássico-quântico.;Modeling language adaptation;"Integration challenges; Modeling difficulty"
SCP0051;"Verduro J.; Rodríguez M.; Piattini M.";Software quality issues in quantum information systems;2021;International Workshop on Quantum Software Engineering and Technology;QSET;54;59;3;Quantum computing is the technology of the 21st century. Quantum computers and environments are already offering great advantages when building advanced applications in finance, health, or logistics. However, if industry is to boost the large-scale production of quantum software, an adequate quality level must be achieved and assured. In this sense, it is very important to consider quantum software quality platforms and products, and to create an effective quality environment for quantum software. In this paper we will summarise some of these issues. © 2021 Copyright for this paper by its authors.;"Quantum computing; Quantum quality environment; Quantum software quality";"Quantum computers; Quantum optics; Advanced applications; Large scale productions; Quality levels; Quanta computers; Quantum Computing; Quantum quality environment; Quantum software quality; Quantum-information systems; Computer software selection and evaluation";English;Conference Paper;Primary Study;Philosophical papers;0;Software Quality;O estudo propõe um ambiente de qualidade para software quântico, incluindo um modelo de qualidade, métricas específicas para software quântico e a necessidade de ferramentas automatizadas para avaliação e melhoria da qualidade de software.;A falta de métricas adequadas para avaliar a qualidade de software quântico, a influência da imprecisão do hardware na confiabilidade do software, e a necessidade de modelos e ferramentas de verificação e validação específicos para software quântico.;Empirical study;Quality assurance
SCP0052;"Baczyk M.; Pérez-Castillo R.; Piattini M.";Towards a Framework of Architectural Patterns for Quantum Software Engineering;2024;International Conference on Quantum Computing and Engineering;QCE;228;233;0;Quantum software engineering (QSE) has emerged as a discipline to address the challenges associated with developing software systems in the context of advancing quantum computing technology. This paper explores architectural design patterns specific to QSE. Building on previous work highlighting the need for high-level patterns, we analyze emerging architectural approaches in quantum computing. We identify key challenges unique to hybrid quantum-classical systems and propose a preliminary taxonomy of QSE architectural patterns. These patterns address recurring design problems in areas such as quantum resource management and classical-quantum integration. We describe several potential patterns and discuss their theoretical applications in hybrid software systems. This work aims to provide a foundation for further research into standardizing QSE architectural practices, with the goal of enhancing various quality characteristics of hybrid software (e.g., modularity or maintainability) in the NISQ era and beyond. © 2024 IEEE.;"architectural patterns; maintainability; quantum software engineering; software patterns";"Architectural design; Computer software selection and evaluation; Maintainability; Quantum electronics; Resource allocation; Software architecture; Software quality; Architectural approach; Architectural pattern; Computing technology; Design Patterns; Design problems; Quantum Computing; Quantum software engineering; Quantum-classical systems; Software patterns; Software-systems; Application programs";English;Conference Paper;Primary Study;Philosophical papers;0;Software Architecture;O artigo introduz um framework teórico composto por cinco dimensões — nível de abstração, colaboração quântico-clássica, escalabilidade, dinâmica temporal e estratégia de gerenciamento de recursos — para estruturar e analisar padrões arquiteturais aplicáveis à engenharia de software quântico, além de apresentar cinco padrões iniciais que buscam orientar o desenvolvimento de sistemas híbridos modulares, escaláveis e sustentáveis.;O estudo evidencia a complexidade crescente no projeto de arquiteturas híbridas quântico-clássicas, a escassez de padrões consolidados, a dificuldade em lidar com a alocação de recursos quânticos limitados e a necessidade de validações empíricas para comprovar a efetividade dos conceitos propostos em cenários reais de desenvolvimento.;"Conceptual framework; Reference architecture";System complexity
SCP0053;"Saraiva L.; Haeusler E.H.; Costa V.; Kalinowski M.";Non-functional requirements for quantum programs;2021;International Workshop on Quantum Software Engineering and Technology;QSET;89;100;4;Quantum computing is moving from a purely theoretical area to an area with practical applications, allowing considerable performance efficiency improvements. The goal of this paper is to discuss nonfunctional requirements for quantum programs. Based on experiences developing quantum software for real quantum hardware we analyze hardware-related constraints and derive a set of generic nonfunctional requirements for this type of program. We identified a set of five performance efficiency and reliability related non-functional requirements that should considered when implementing a quantum program for a quantum device. We also discuss available solution options to address the requirements. There are high level solutions to deal with the hardware-related constraints described in our identified requirements. While many of the them are specific to quantum programming languages and technologies, the scientific community is engaging to integrate these kind of solutions into the quantum software engineering life cycle in an agnostic way regarding quantum programming languages and technologies. © 2021 Copyright for this paper by its authors.;"Non-functional requirements; Quantum software engineering";"Efficiency; Life cycle; Software engineering; Efficiency and reliability; Efficiency improvement; Non-functional requirements; Performance efficiency; Performance reliability; Programming technology; Quantum Computing; Quantum device; Quantum programming languages; Quantum software engineering; Quantum computers";English;Conference Paper;Primary Study;Opinion papers;0;Software Requirements;O estudo identifica cinco requisitos não funcionais críticos para programas quânticos, relacionados à limitação de qubits, profundidade do circuito, número de portas T, conectividade dos qubits e compatibilidade com hardware específico, além de discutir soluções para mitigar essas restrições.;A falta de metodologias formais para elicitação e especificação de requisitos não funcionais em software quântico, a necessidade de adaptar abordagens tradicionais de engenharia de requisitos para considerar restrições quânticas e os desafios de garantir qualidade e confiabilidade em um ambiente de hardware ainda em evolução.;Requirements engineering;"Modeling difficulty; Hardware limitations"
SCP0054;"Usaola M.P.; De Guzmán I.G.-R.; Serrano M.Á.; Piattini M.";Generating Quantum Software from Truth Tables;2024;International Conference on Quantum Computing and Engineering;QCE;223;227;0;Quantum computing promises significant advancements over classical computing by enabling exponential speedups for specific problems. Despite its potential, quantum software development remains challenging due to its complexity, cost, and susceptibility to errors. Aligned with the novel paradigm of Quantum Software Engineering (QSE), this paper introduces a tool designed to automate the generation of quantum software components from truth tables. The tool simplifies the development process by allowing users to specify expected output values for given inputs, which the tool then translates into the corresponding quantum code. This approach reduces the manual effort required and helps ensure accuracy in quantum program development. Our method not only streamlines quantum software generation but also optimizes the resulting quantum circuits by minimizing unnecessary computations. The paper provides a detailed overview of the algorithm, tool implementation, and potential applications, highlighting the tool's efficacy in facilitating more efficient quantum software development. © 2024 IEEE.;"Automatic Software Generation; Quantum Computing; Quantum Software Engineering; Quantum Software Generation; Truth Tables";"Application programs; Computer aided software engineering; Cost engineering; Quantum efficiency; Quantum electronics; Quantum optics; Software design; Automatic software generation; Classical computing; Exponentials; Quantum Computing; Quantum software engineering; Quantum software generation; Software generation; Specific problems; Truth tables; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;0;Software Construction;O estudo apresenta uma abordagem para automatizar a geração de circuitos quânticos com base em tabelas-verdade, permitindo que desenvolvedores especifiquem entradas e saídas esperadas e gerem código quântico correspondente, além de implementar um algoritmo de otimização para reduzir a complexidade dos circuitos gerados.;A falta de ferramentas de automação para desenvolvimento de software quântico, a necessidade de minimizar o uso de operações desnecessárias nos circuitos gerados, e os desafios de garantir a escalabilidade e eficiência da geração automática de código quântico para diferentes aplicações.;Process model;Tool support gap
SCP0056;"Fortunato D.; Campos J.; Abreu R.";Mutation Testing of Quantum Programs Written in QISKit;2022;International Conference on Software Engineering;ICSE;358;359;16;There is an inherent lack of knowledge and technology to test a quantum program properly. In this paper, building on the definition of syntactically equivalent quantum operations, we investigated a novel set of mutation operators to generate mutants based on qubit measurements and quantum gates. To ease the adoption of quantum mutation testing, we further discuss QMutPy, an extension of the well-known and fully automated open-source mutation tool MutPy. To evaluate QMutPy's performance we conducted a case study on 11 real quantum programs written in the IBM's QISKit library. QMutPy has proven to be an effective quantum mutation tool, providing insight on the current state of quantum tests. © 2022 IEEE.;"Quantum computing; Quantum mutation testing; Quantum software engineering; Quantum software testing";"Open source software; Quantum theory; Qubits; Well testing; Mutation operators; Mutation testing; Quantum Computing; Quantum gates; Quantum mutation testing; Quantum operations; Quantum software engineering; Quantum software testing; Qubit measurement; Software testings; Software testing";English;Conference Paper;Primary Study;Evaluation research;0;Software Testing;O artigo apresenta a ferramenta QMutPy, construída sobre o MutPy, que realiza testes de mutação em programas quânticos com cinco operadores específicos para inserção, deleção e substituição de gates e medições. Os autores aplicaram a técnica em 11 programas reais, gerando 696 mutantes e demonstrando que a ferramenta é eficaz para revelar falhas não cobertas pelos testes existentes, além de introduzir um conjunto inicial de operadores de mutação com base em gates sintaticamente equivalentes.;Os principais desafios incluem a necessidade de criar operadores de mutação realistas e eficazes para o paradigma quântico, lidar com a natureza probabilística dos programas, gerenciar falhas provocadas por inserções inválidas de medições, e aumentar a cobertura e qualidade dos testes para lidar com características únicas da computação quântica, como entrelaçamento e superposição.;Tool support;Quality assurance
SCP0057;"Pérez-Del Castillo R.; Piattini M.; Peterssen G.; Hevia J.L.";The quantum software engineering path;2020;International Workshop on Quantum Software Engineering and Technology;QSET;1;4;3;With the rise of the first quantum computers and programming languages, first quantum algorithms came up, which yield promising results. Quantum Computing is becoming more and more a mature area while an investment scalation is happening in public and private sectors. There are a lot of promising application that never comes true with quantum computers in isolation. Quantum software is necessary to achieve all the claimed, cutting-edge applications in almost every business sector. Quantum software, as other kind of software, need to be planned, designed, coded, estimated, tested, quality-assured, evolved, among other things. This means, quantum software engineering needs to be developed as a new discipline, both in academia and industry. This column provides an overview for this need, and the main challenges in the next years. © 2020 Copyright for this paper by its authors.;"Quantum computing; Quantum programming; Quantum software engineering";"Computer programming; Quantum theory; Qubits; Software testing; Business sector; Cutting edges; Public and private sector; Quantum algorithms; Quantum Computing; Application programs";English;Conference Paper;Primary Study;Opinion papers;0;The Software Engineering in General;O estudo propõe uma visão geral sobre a evolução da Engenharia de Software Quântico, destacando a importância da integração entre sistemas clássicos e quânticos, a necessidade de métricas de qualidade para software quântico, e desafios na gestão de projetos quânticos.;A falta de metodologias estabelecidas para o desenvolvimento de software quântico, a necessidade de padronização de métricas para avaliar a qualidade do software quântico, e a complexidade na integração entre sistemas clássicos e quânticos em aplicações reais.;Hybrid systems;"Lack of standardization; Integration challenges; Modeling difficulty"
SCP0058;Sarkar A.;Automated quantum software engineering;2024;Automated Software Engineering;ASE Journal;0;0;5;As bigger quantum processors with hundreds of qubits become increasingly available, the potential for quantum computing to solve problems intractable for classical computers is becoming more tangible. Designing efficient quantum algorithms and software in tandem is key to achieving quantum advantage. Quantum software engineering is challenging due to the unique counterintuitive nature of quantum logic. Moreover, with larger quantum systems, traditional programming using quantum assembly language and qubit-level reasoning is becoming infeasible. Automated Quantum Software Engineering (AQSE) can help to reduce the barrier to entry, speed up development, reduce errors, and improve the efficiency of quantum software. This article elucidates the motivation to research AQSE (why), a precise description of such a framework (what), and reflections on components that are required for implementing it (how). © The Author(s) 2024.;"Program synthesis; Quantum algorithms; Software automation";"Computation theory; Quantum efficiency; Qubits; Software engineering; Assembly-language; Program synthesis; Quantum algorithms; Quantum Computing; Quantum logic; Quantum processors; Quantum system; Software automation; Speed up; Quantum optics";English;Article;Primary Study;Philosophical papers;0;Software Construction;"O artigo introduz um framework conceitual detalhado para Engenharia de Software Quântico Automatizada, que abrange desde a interface com o usuário (como plataformas no-code), passando pela formalização de requisitos, síntese automatizada de programas e algoritmos quânticos, até a verificação formal e avaliação de recursos computacionais; o trabalho articula tecnologias emergentes como LLMs, programação genética, lógica linear, neuro-simbólica e reforço quântico, sugerindo uma integração com técnicas clássicas de CAD e sistemas inteligentes para viabilizar a democratização do desenvolvimento de software quântico.";Os principais desafios estão em reduzir a complexidade do desenvolvimento quântico sem perder rigor formal, automatizar a escolha de algoritmos adequados com base em requisitos funcionais e não funcionais, representar e navegar por espaços de busca complexos de soluções, lidar com a limitação de dados de treinamento para IA aplicada a algoritmos quânticos, e garantir verificabilidade, interpretabilidade e eficiência dos softwares gerados automaticamente em diferentes hardwares quânticos.;"Conceptual framework; Tool support; Requirements engineering";Hardware limitations
SCP0059;"De Stefano M.; Pecorelli F.; Di Nucci D.; Palomba F.; De Lucia A.";The quantum frontier of software engineering: A systematic mapping study;2024;Information and Software Technology;INFSOF;0;0;2;Context: Quantum computing is becoming a reality, and quantum software engineering (QSE) is emerging as a new discipline to enable developers to design and develop quantum programs. Objective: This paper presents a systematic mapping study of the current state of QSE research, aiming to identify the most investigated topics, the types and number of studies, the main reported results, and the most studied quantum computing tools/frameworks. Additionally, the study aims to explore the research community's interest in QSE, how it has evolved, and any prior contributions to the discipline before its formal introduction through the Talavera Manifesto. Method: We searched for relevant articles in several databases and applied inclusion and exclusion criteria to select the most relevant studies. After evaluating the quality of the selected resources, we extracted relevant data from the primary studies and analyzed them. Results: We found that QSE research has primarily focused on software testing, with little attention given to other topics, such as software engineering management. The most commonly studied technology for techniques and tools is Qiskit, although, in most studies, either multiple or none specific technologies were employed. The researchers most interested in QSE are interconnected through direct collaborations, and several strong collaboration clusters have been identified. Most articles in QSE have been published in non-thematic venues, with a preference for conferences. Conclusions: The study's implications are providing a centralized source of information for researchers and practitioners in the field, facilitating knowledge transfer, and contributing to the advancement and growth of QSE. © 2024 The Authors;"Empirical software engineering; Quantum computing; Quantum software engineering; Software engineering for quantum programming; Systematic mapping study";"Knowledge management; Mapping; Quantum computers; 'current; Computing tools; Empirical Software Engineering; Quantum Computing; Quantum programming; Quantum software engineering; Research communities; Software engineering for quantum programming; Software engineering research; Systematic mapping studies; Software testing";English;Article;Secondary Study;0;Systematic Mapping;The Software Engineering in General;O artigo define um conjunto de frentes onde a Engenharia de Software pode impulsionar a computação quântica, incluindo teste e verificação, qualidade de software, modelagem e abstrações. Ele também propõe linhas de pesquisa e uma agenda colaborativa para consolidar a QSE como disciplina e área de atuação profissional.;Entre os desafios estão a definição de métricas de qualidade para software quântico, a criação de ferramentas de desenvolvimento específicas, e a necessidade de equipes multidisciplinares que combinem expertise em física quântica e engenharia de software.;Role definition;Tool support gap
SCP0061;"Virgínio T.; Bastos L.; Bezerra C.; Ribeiro M.; Machado I.";How Aware Are We of Test Smells in Quantum Software Systems? A Preliminary Empirical Evaluation;2024;Brazilian Symposium on Software Quality;SBQS;383;393;0;Context: With the rapid progress of quantum computing, Quantum Software Engineering (QSE) is establishing itself as an essential discipline to support developers throughout all stages of quantum software development. The area of testing in quantum systems has received greater attention in research on this topic to guarantee the quality and reliability of these technologies. Objective: This paper presents an empirical study focused on the testing of quantum software at its classical layer. Specifically, it aims to identify and analyze the unique characteristics of quantum software tests, particularly in terms of Test Smells, their distribution, recurrence, and differences compared to classical software tests. Method: We used two sets of software from previous studies, one comprising 12 quantum software and the other comprising 80 classical software. From these datasets, we conducted an analysis to detect 10 test smells, allowing us to map their dispersion in quantum software, identify their specific characteristics, and draw comparisons with classical software. Results: Our findings reveal a high dispersion of test smells of 51% in quantum software. Furthermore, quantum tests exhibit statistical differences from classical software tests, with the most outlier being Conditional Test Logic, which is 20% more frequent than in classical software. Conclusions: The insights gained from this study can contribute to enhancing the quality, maintainability, and readability of tests written for the classical layer of quantum software. Ultimately, this can improve the overall understanding and quality of quantum software. © 2024 Copyright held by the owner/author(s).;"Empirical Evaluation; Quantum Software Systems; Software Testing; Test Smells";"Computer software selection and evaluation; Quantum electronics; Software design; Software quality; Software reliability; Empirical evaluations; Empirical studies; High dispersion; Quantum Computing; Quantum software system; Quantum system; Software testings; Software-systems; Statistical differences; Test smell; Software testing";English;Conference Paper;Primary Study;Evaluation research;0;Software Testing;O estudo revela que 51% dos testes em software quântico contêm test smells, sendo os mais comuns Conditional Test Logic (CTL), Unknown Test (UT) e Verbose Test (VT). Além disso, a pesquisa identifica diferenças estatísticas entre test smells em projetos clássicos e quânticos, destacando a necessidade de novas práticas e metodologias para garantir a qualidade dos testes em sistemas quânticos.;A dificuldade em adaptar estratégias de teste clássico para software quântico, a alta incidência de test smells impactando a manutenibilidade e confiabilidade do código de teste, e a necessidade de ferramentas automatizadas para detecção e mitigação desses problemas.;Process model;Quality assurance
SCP0062;"Becker C.K.-U.; Gheorghe-Pop I.-D.; Tcholtchev N.";A Testing Pipeline for Quantum Computing Applications;2023;International Conference on Quantum Software;QSW;54;59;1;As the scientific community is increasing the coverage of the quantum computing domain ranging from theoretical physics to financial applications, so does the number of quantum computing applications being developed for quantum computing hardware that is available today. As this hardware evolves towards increased capacity in terms of qubit number and increased fidelity, so does the complexity of quantum computing applications that implement the state-of-the-art of (hybrid) quantum algorithms. With this comes an increased demand for quantum software engineering practices where testing is a crucial part of the development process. Hence, a robust approach that addresses certain challenges and peculiarities related to the quantum computing domain is needed for the testing process. This paper proposes a standard-ready testing pipeline that covers the requirements of testing in a continuous development cycle as part of a modern quantum software engineering lifecycle. © 2023 IEEE.;"Debugging; NISQ; Quantum computing; Quantum Software Engineering; Testing";"Application programs; Pipelines; Program debugging; Quantum computers; Software testing; Community IS; Computing applications; Computing domain; Debugging; Financial applications; NISQ; Quantum Computing; Quantum software engineering; Scientific community; Theoretical physics; Life cycle";English;Conference Paper;Primary Study;Proposal of solution;0;Software Testing;O estudo apresenta um framework estruturado para testes de software quântico, cobrindo desde testes unitários e depuração de código até seleção de backends, validação sob ruído e execução final em hardware quântico real, garantindo robustez e confiabilidade no ciclo de desenvolvimento de software quântico.;A falta de metodologias padronizadas para testes em software quântico, a dificuldade de depuração devido à natureza probabilística dos algoritmos quânticos, e a necessidade de técnicas eficientes de mitigação de erros para garantir a confiabilidade dos resultados.;Conceptual framework;"Modeling difficulty; Quality assurance"
SCP0063;"Díaz A.; Alvarado-Valiente J.; Romero-Álvarez J.; Moguel E.; Garcia-Alonso J.; Rodríguez M.; García-Rodríguez I.; Murillo J.M.";Service engineering for quantum computing: Ensuring high-quality quantum services;2025;Information and Software Technology;INFSOF;0;0;0;Context: Quantum computing is transforming the world and driving advanced applications in fields such as healthcare and economics. However, ensuring high-quality quantum software remains critical to its adoption across the industry. As quantum technology moves closer to practical applications, it faces significant challenges. Developers face platform-dependent complexities that make the creation of quantum applications a time-consuming process. In addition, the lack of mature tools further hampers progress and can compromise the quality of service. Objective: The objective of this paper is to address the pressing need for quantum software quality assurance, presenting a solution for defining and using quantum services, by employing classical service engineering techniques and methods. Methods: A process is presented for improving the generation, deployment, and quality assessment of quantum services using an extended OpenAPI Specification and the SonarQube tool. This process also integrates the automatic generation of code for the IBM Quantum provider and its deployment in containers ready for user consumption. Results: After a detailed and individualized evaluation of the 40 implementations of quantum algorithms using the developed environment, the results reveal significant variability in the analyzability of the algorithms. This will serve in the future as a reference and guide for the continuous improvement of quantum algorithms in terms of their performance and efficiency in solving complex problems in various quantum application areas. Conclusions: This research offers a fundamental contribution to the evolution of quantum computing by introducing a comprehensive framework for quantum software quality assurance. The proposed approach not only addresses some of the existing problems in quantum software, but also paves the way for the development of quantum algorithms and their servitization. © 2024 Elsevier B.V.;"Process improvement; Quantum computing; Quantum software engineering; Quantum software quality";"Application programs; Computer software selection and evaluation; Quality of service; Quantum efficiency; Quantum electronics; High quality; Process Improvement; Quantum algorithms; Quantum applications; Quantum Computing; Quantum software engineering; Quantum software quality; Services engineering; Software Quality; Software quality assurance; Software quality";English;Article;Primary Study;Evaluation research;0;Software Quality;O trabalho propõe um processo automatizado e sistemático para o desenvolvimento de serviços quânticos, integrando ferramentas consolidadas como OpenAPI, GitHub Actions e SonarQube, adaptadas ao contexto da computação quântica, possibilitando avaliações contínuas de qualidade de código com métricas específicas como complexidade ciclomática quântica.;O estudo destaca a carência de ferramentas maduras, métricas padronizadas e infraestrutura para análise de qualidade em software quântico, além da dificuldade de garantir manutenibilidade e eficiência em ambientes híbridos com múltiplos fornecedores e plataformas de computação quântica.;"Process model; Tool support";Tool immaturity
SCP0064;Zhao J.;Some Size and Structure Metrics for Quantum Software;2021;International Workshop on Quantum Software Engineering;QSE;22;27;10;Quantum software plays a critical role in exploiting the full potential of quantum computing systems. As a result, it is drawing increasing attention recently. As research in quantum programming reaches maturity with a number of active research and practical products, software metric researchers need to focus on this new paradigm to evaluate it rigorously and quantitatively. As the first step, this paper proposes some basic metrics for quantum software, which mainly focus on measuring the size and structure of quantum software. These metrics are defined at different abstraction levels to represent various size and structure attributes in quantum software explicitly. The proposed metrics can be used to evaluate quantum software from various viewpoints.  © 2021 IEEE.;"quantum software design; quantum software engineering; Quantum software metrics";"Quantum computers; Abstraction level; Quantum computing systems; Quantum programming; Software metrices; Software engineering";English;Conference Paper;Primary Study;Proposal of solution;0;Software Quality;O artigo propõe um conjunto inicial de métricas de tamanho e estrutura específicas para software quântico, derivadas de métricas clássicas como linhas de código, métricas de Halstead, complexidade ciclomática de McCabe e métricas de fluxo de informação, adaptadas ao contexto quântico. Essas métricas visam oferecer uma avaliação rigorosa e quantitativa do software quântico em termos de complexidade, modularidade e qualidade.;O principal desafio é adaptar modelos e abstrações clássicos à natureza particular do software quântico, que combina elementos clássicos e quânticos, exigindo novas formas de análise estrutural e mensuração da complexidade, além da necessidade de ferramentas automatizadas para coleta dessas métricas em linguagens quânticas emergentes.;Education and training;Modeling difficulty
SCP0065;"Bisicchia G.; García-Alonso J.; Murillo J.M.; Brogi A.";From Quantum Software Handcrafting to Quantum Software Engineering;2024;International Conference on Software Analysis, Evolution and Reengineering ;SANER;149;150;0;Quantum Computing holds the potential to change our world. Following the quantum wave, software engineers have recognised the opportunity to establish a new discipline of Quantum Software Engineering. Despite the significant progress achieved, Quantum Computing’s widespread adoption still faces critical hurdles. In this paper, we outline two of these challenges. (1) Quantum programming continues to be a complex art mastered by a select few experts. We suggest that the primary culprit can be pinpointed in the absence of high-level quantum software abstractions which forces developers to work with low-level quantum concepts and reason in terms of matrix multiplications. (2) The scarce collaboration among quantum software engineers resulted in a lack of platform and software interoperability. While a diversity of research proposals fuels scientific progress, it can hinder the development and adoption of innovative technologies, potentially fragmenting the collective efforts and confining them within isolated research groups. We believe that overcoming these issues is crucial for fostering innovation, advancing Quantum Software Engineering, and Quantum Computing as a whole. ©2024 IEEE.;"Quantum Abstractions; Quantum Computing; Quantum Software Engineering; Software Engineering";"Computer aided software engineering; Quantum electronics; MAtrix multiplication; Quantum abstraction; Quantum Computing; Quantum programming; Quantum software engineering; Quantum waves; Research proposals; Scientific progress; Software abstractions; Software interoperability; Quantum computers";English;Conference Paper;Primary Study;Opinion papers;0;The Software Engineering in General;O artigo estabelece um marco conceitual para a Engenharia de Software Quântica, discutindo a evolução de práticas ad hoc para processos bem estruturados. Propõe elementos centrais para QSE, como abstrações adequadas ao paradigma quântico, reuso de componentes, qualidade de software e suporte metodológico. Também apresenta um roteiro de pesquisa para amadurecimento da área, incentivando a colaboração entre pesquisadores de engenharia de software e computação quântica.;Os desafios apontados incluem a ausência de metodologias maduras, ferramentas de desenvolvimento integradas, padrões de qualidade e métricas aplicáveis ao contexto quântico. Outro obstáculo é a escassez de profissionais com formação multidisciplinar, exigindo esforços coordenados de capacitação. A definição de modelos formais e linguagens específicas para apoiar o ciclo de vida completo do software quântico também é destacada como uma lacuna crítica.;"Process model; Collaboration support";"Tool immaturity; Modeling difficulty; Skill gap"
SCP0066;"Feng Y.; Ying M.-S.";Verification of Quantum Programs;2018;Journal of Software;Ruan Jian Xue Bao;1085;1093;0;With the rapid development of quantum hardware, people tend to believe that special-purpose quantum computers with more than 100 qubits will be available in 5 to 10 years. It is conceivable that, once this becomes a reality, the development of quantum software will be crucial in harnessing the power of quantum computers. However, due to the distinguishable features of quantum mechanics, such as the no-cloning of quantum information and the nonlocal effect of entanglement, developing correct and efficient quantum programs and communication protocols is a challenging issue. Formal verification methods, particularly model checking techniques, have proven effective in classical software design and system modelling. Therefore, formal verification of quantum software has received more and more attention recently. This article reviews recent research findings in verification of both sequential quantum programs and quantum communication protocols, with the focus placed on the work of the two authors' research groups. Future directions and challenges in this area are also discussed. © Copyright 2018, Institute of Software, the Chinese Academy of Sciences. All rights reserved.;"Model checking, verification of communication protocol; Program verification; Quantum computing";"Computer software; Formal verification; Model checking; Quantum computers; Quantum entanglement; Quantum optics; Software design; Formal verification methods; Model-checking techniques; Non-local effect; Of quantum-information; Program Verification; Quantum Computing; Recent researches; System modelling; Quantum communication";English;Article;Primary Study;Proposal of solution;0;Software Quality;O trabalho estabelece uma metodologia formal e matematicamente comprovada para a verificação de programas quânticos, introduzindo um teorema de completude e um método simplificado aplicável a espaços de estados finitos, o que permite calcular propriedades como tempo médio de execução e comportamento assintótico.;O principal desafio abordado é a complexidade das verificações matemáticas envolvidas em programas quânticos, especialmente na representação e manipulação de super-operadores, o que limita a aplicabilidade prática de métodos gerais e demanda abordagens especializadas para diferentes dimensões do espaço de estados.;Process model;"Modeling difficulty; System complexity"
SCP0067;"Gemeinhardt F.; Eisenberg M.; Klikovits S.; Wimmer M.";Model-Driven Optimization for Quantum Program Synthesis with MOMoT;2023;International Conference on Model Driven Engineering Languages and Systems Companion  ;Proc. - ACM/IEEE Int. Conf. Model Driven Eng. Lang. Syst. Companion, MODELS-C;614;621;2;In the realm of classical software engineering, model-driven optimization has been widely used for different problems such as (re)modularization of software systems. In this paper, we investigate how techniques from model-driven optimization can be applied in the context of quantum software engineering. In quantum computing, creating executable quantum programs is a highly non-trivial task which requires significant expert knowledge in quantum information theory and linear algebra. Although different approaches for automated quantum program synthesis exist - e.g., based on reinforcement learning and genetic programming - these approaches represent tailor-made solutions requiring dedicated encodings for quantum programs. This paper applies the existing model-driven optimization approach MOMoT to the problem of quantum program synthesis. We present the resulting platform for experimenting with quantum program synthesis and present a concrete demonstration for a well-known Quantum algorithm.  © 2023 IEEE.;"Model-Driven Optimization; Quantum Circuit Synthesis; Quantum Software Engineering";"Computation theory; Genetic algorithms; Information theory; Linear algebra; Modular construction; Quantum computers; Quantum optics; Reinforcement learning; Software engineering; Timing circuits; Circuit synthesis; Model-driven optimization; Modularizations; Program synthesis; Quantum circuit; Quantum circuit synthesis; Quantum Computing; Quantum software engineering; Software engineering model; Software-systems; Genetic programming";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O estudo introduz uma abordagem para síntese automatizada de programas quânticos usando técnicas de otimização orientadas a modelos, integrando o MOMoT com kits de desenvolvimento de software quântico (Q-SDKs) para gerar circuitos otimizados baseados em algoritmos genéticos.;A falta de ferramentas de automação para síntese de programas quânticos, a necessidade de otimizar circuitos para balancear precisão e custo computacional, e os desafios de generalizar essa abordagem para diferentes paradigmas e arquiteturas de computação quântica.;"Process model; Code generation support";Tool support gap
SCP0068;"Häner T.; Steiger D.S.; Svore K.; Troyer M.";A software methodology for compiling quantum programs;2018;Quantum Science and Technology;QST;0;0;106;Quantum computers promise to transform our notions of computation by offering a completely new paradigm. To achieve scalable quantum computation, optimizing compilers and a corresponding software design flow will be essential. We present a software architecture for compiling quantum programs from a high-level language program to hardware-specific instructions. We describe the necessary layers of abstraction and their differences and similarities to classical layers of a computer-aided design flow. For each layer of the stack, we discuss the underlying methods for compilation and optimization. Our software methodology facilitates more rapid innovation among quantum algorithm designers, quantum hardware engineers, and experimentalists. It enables scalable compilation of complex quantum algorithms and can be targeted to any specific quantum hardware implementation. © 2018 IOP Publishing Ltd.;"quantum compiler; quantum computing; quantum programming language";"Computer aided design; Computer hardware; High level languages; Quantum computers; Quantum theory; Software design; Hardware implementations; Optimizing compilers; Quantum algorithms; quantum compiler; Quantum Computing; Quantum programming languages; Software methodologies; Specific instruction; Program compilers";English;Article;Primary Study;Proposal of solution;0;Software Construction;O trabalho introduz uma linguagem formal de fluxograma capaz de descrever operações quânticas e clássicas de forma integrada, com definições de semântica operacional e denotacional, além de regras de correção parcial e total. A linguagem pode ser traduzida para uma linguagem estruturada tipo while, promovendo clareza e formalização na programação quântica.;Os principais desafios estão na definição de semânticas formais adequadas para representar o comportamento probabilístico da computação quântica, na necessidade de padronização de notações visuais para esse paradigma e na integração de estruturas clássicas e quânticas de controle em uma única linguagem estruturada.;Tool support;"Lack of standardization; Integration challenges"
SCP0069;"Fortunato D.; Campos J.; Abreu R.";Gate Branch Coverage: A Metric for Quantum Software Testing;2024;International Workshop on Quantum Software Engineering: The Next Evolution;QSE-NE;15;18;0;The inherent lack of technologies and knowledge from software developers about the intricacies of quantum physics constitutes a heavy hindrance in the development of correct quantum software. Therefore, quantum computing testing techniques are currently under heavy research. This paper proposes a new testing metric, Gate Branch Coverage. This metric aims to provide insight into the verification process status of quantum programs and enhance the quantum testing process overall. Gate Branch Coverage explores the properties of quantum controlled-type gates, measuring their number of exercised branches during the execution of quantum programs. © 2024 Copyright held by the owner/author(s).;"Quantum Computing; Quantum Gate Branch Coverage; Quantum Software Testing";"Quantum electronics; Quantum optics; Software design; Software testing; Verification; Branch-coverage; Quantum Computing; Quantum gate branch coverage; Quantum gates; Quantum physics; Quantum software testing; Software developer; Software testings; Testing metrics; Testing technique; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;0;Software Testing;O trabalho apresenta formalmente a métrica GBC para quantificar a cobertura de testes em gates do tipo controlado em circuitos quânticos, detalha como instrumentar programas em QASM para medir tal cobertura, demonstra sua aplicabilidade com exemplos práticos e discute como técnicas de fuzz testing e ferramentas como QuraTest podem ser utilizadas para melhorar os escores de cobertura.;Os principais desafios incluem a dificuldade de observabilidade em tempo de execução de programas quânticos devido ao colapso do estado, a limitação dos desenvolvedores em testar efetivamente todos os ramos dos gates controlados, e a carência de ferramentas automatizadas robustas que permitam medir e melhorar a cobertura de forma eficaz em ambientes quânticos.;Tool support;Tool support gap
SCP0071;Cartiere C.R.;Formal quantum software engineering introducing the formal methods of software engineering to quantum computing;2021;International Workshop on Quantum Software Engineering and Technology;QSET;60;65;0;"Quantum computing (QC) represents the future of computing systems, but the tools for reasoning about the quantum model of computation, in which the laws obeyed are those on the quantum mechanical scale, are still a mix of linear algebra and Dirac notation; two subjects more suitable for physicists, rather than computer scientists and software engineers. On this ground, we believe it is possible to provide a more intuitive approach to thinking and writing about quantum computing systems, in order to simplify the design of quantum algorithms and the development of quantum software. In this paper, we move the first step in such direction, introducing a specification language as the tool to represent the operations of a quantum computer via axiomatic definitions, by adopting the same symbolisms and reasoning principles used by formal methods in software engineering. We name this approach formal quantum software engineering (F-QSE). This work assumes familiarity with the basic principles of quantum mechanics (QM), with the use of Zed (Z) which is a formal language of software engineering (SE), and with the notation and techniques of first-order logic (FOL) and functional programming (FP). © 2021 Copyright for this paper by its authors.";"Formal methods; Functional programming; Quantum computing; Quantum software engineering; Zed";"Computer circuits; Computer software; Formal methods; Functional programming; Linear algebra; Quantum theory; Specification languages; Computer scientists; Computing system; Quanta computers; Quantum algorithms; Quantum Computing; Quantum computing systems; Quantum mechanical; Quantum model of computation; Quantum software engineering; Zed; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O estudo propõe uma linguagem de especificação formal para computação quântica, permitindo a modelagem de operações e algoritmos quânticos por meio de axiomatizações inspiradas na Engenharia de Software Clássica, e exemplifica sua aplicação na implementação do Algoritmo de Deutsch.;A falta de ferramentas formais para a especificação e verificação de software quântico, a necessidade de tradução eficiente entre modelagem formal e implementação prática, e a dificuldade de introduzir formalismos compreensíveis para desenvolvedores não familiarizados com mecânica quântica.;Modeling language adaptation;Quality assurance
SCP0072;"Gemeinhardt F.; Klikovits S.; Wimmer M.";GeQuPI: Quantum Program Improvement with Multi-Objective Genetic Programming;2025;Journal of Systems and Software;JSS;0;0;0;Processing quantum information poses novel challenges regarding the debugging of faulty quantum programs. Notably, the lack of accessible information on intermediate states during quantum processing, renders traditional debugging techniques infeasible. Moreover, even correct quantum programs might not be processable, as current quantum computers are limited in computation capacity. Thus, quantum program developers have to consider trade-offs between accuracy (i.e., probabilistically correct functionality) and computational cost of the proposed solutions. Manually finding sufficiently accurate and efficient solutions is a challenging task, even for quantum computing experts. To tackle these challenges, we propose a quantum program improvement framework for an automated generation of accurate and efficient solutions, coined Genetic Quantum Program Improver (GeQuPI). In particular, we focus on the tasks of debugging and optimization of quantum programs. Our framework uses techniques from quantum information theory and applies multi-objective genetic programming, which can be further hybridized with quantum-aware optimizers. To demonstrate the benefits of GeQuPI, it is applied to 47 quantum programs reused from literature and openly published libraries. The results show that our approach is capable of correcting faulty programs and optimize inefficient ones for the majority of the studied cases, showing average optimizations of 35% with respect to computational cost. © 2024 The Authors;"Evolutionary algorithms; Quantum circuit optimization; Quantum computing; Quantum software engineering";"Computer debugging; Genetic programming; Program debugging; Quantum efficiency; Quantum electronics; Quantum optics; Accessible information; Circuit optimization; Computational costs; Multi objective; Optimisations; Quantum circuit; Quantum circuit optimization; Quantum Computing; Quantum Information; Quantum software engineering; Quantum computers";English;Article;Primary Study;Evaluation research;0;Software Construction;O trabalho introduz o GeQuPI, um framework que utiliza programação genética multiobjetivo para otimizar programas quânticos em termos de qualidade da solução e simplicidade estrutural, demonstrando melhorias em benchmarks em comparação com métodos tradicionais.;Um dos principais desafios abordados é como realizar melhorias em programas quânticos sem comprometer sua funcionalidade, dada a complexidade da computação quântica e as limitações dos simuladores atuais.;"Conceptual framework; Process model";System complexity
SCP0073;Hevia Oliver J.L.;Requirements for quantum software platforms;2020;International Workshop on Quantum Software Engineering and Technology;QSET;20;26;1;In present days, we are attending the raise and fast evolution of the quantum machines. Without even being as powerful as they can be, we can experiment their first steps and enjoying with our “knowledge from scratch” training creating, designing, testing and executing quantum algorithms from a software engineer perspective. But, how this new context can affect our vision and experience from a classical perspective? As IT industry experts, how those new quantum technologies can alter the life cycle of our projects, designs, tests, validations, deployments…? And of course, what is the impact of those new quantum technologies when creating new software architectures…? In this paper, our goal will be to identify the challenges that must be faced when designing new software architectures in this new context: the raise of quantum software technology. © 2020 Copyright for this paper by its authors.;"Multidisciplinary teams; Quantum API; Quantum computing; Quantum SDK; Quantum software engineering; Quantum software platforms";"Life cycle; Personnel training; Quantum computers; Quantum theory; IT industry; Quantum algorithms; Quantum machines; Quantum technologies; Software platforms; Software technology; Software testing";English;Conference Paper;Primary Study;Opinion papers;0;Software Requirements;O estudo identifica cinco grandes desafios para plataformas de software quântico, propõe diretrizes para arquiteturas híbridas com encapsulamento de serviços quânticos, e defende a formação de equipes multidisciplinares, criação de cursos e o desenvolvimento de plataformas que abstraiam as complexidades da computação quântica.;A rapidez na evolução das plataformas quânticas, a diversidade de provedores e stacks de software incompatíveis, a dificuldade de encontrar casos de uso reais adequados, e a necessidade de reformular princípios clássicos da engenharia de software para se adequar à realidade híbrida da computação quântica.;"Tool support; Education and training; Research agenda";Other technical limitation
SCP0074;Spoletini P.;Towards Quantum Requirements Engineering;2023;International Requirements Engineering Conference Workshops  ;Proc. - IEEE Int. Requir. Eng. Conf. Workshops, REW;371;374;2;Quantum computing is rapidly transitioning from a scientific curiosity to an industrial reality, offering the potential to overcome classical computation limitations. This shift has given rise to the field of quantum software engineering (QSE), focused on developing novel approaches for engineering large-scale quantum applications. Traditional software engineering methods fall short in addressing the unique characteristics of quantum computing, necessitating innovative QSE methodologies and tools. While progress has been made in testing and debugging quantum programs, very little work has been done on analyzing if and how existing requirements engineering techniques can address the challenges that designing quantum software raises. This paper discusses some of the challenges for requirements engineers while eliciting requirements for quantum software, modeling the collected requirements, and analyzing them, and introduces some initial solutions for eliciting, modeling, and analyzing quantum requirements.  © 2023 IEEE.;"Model Checking; Quantum Computing; Quantum Finite State Machines; Requirements Elicitation; Requirements Modeling";"Application programs; Model checking; Program debugging; Software testing; Finite states machine; Large-scales; Models checking; Quantum applications; Quantum Computing; Quantum finite state machine; Requirement engineering; Requirements elicitation; Requirements modeling; Software engineering methods; Requirements engineering";English;Conference Paper;Primary Study;Proposal of solution;0;Software Requirements;O estudo propõe dividir os requisitos de software quântico em duas categorias — requisitos do domínio e requisitos quânticos — e sugere abordagens como checklists, modelos baseados em máquinas de estados finitos quânticas (QFSMs) e uso de model checking estatístico para análise formal desses requisitos.;A ausência de técnicas consolidadas para elicitação e modelagem de requisitos em software quântico, a necessidade de conhecimentos especializados em mecânica quântica por parte dos analistas, e a falta de modelos e ferramentas adequadas para verificação formal de requisitos probabilísticos e não determinísticos.;Requirements engineering;"Modeling difficulty; Quality assurance"
SCP0076;"Piattini M.; Serrano M.; Perez-Castillo R.; Petersen G.; Hevia J.L.";Toward a Quantum Software Engineering;2021;IT Professional;IT Prof;62;66;73;"Nowadays, we are at the dawn of a new age, the quantum era. Quantum computing is no longer a dream; it is a reality that needs to be adopted. But this new technology is taking its first steps, so we still do not have models, standards, or methods to help us in the creation of new systems and the migration of current ones. Given the current state of quantum computing, we need to go back to the path software engineering took in the last century to achieve the new golden age for quantum software engineering. © 1999-2012 IEEE.";;"Quantum computers; Software engineering; New age; Quantum Computing; Quantum theory";English;Article;Primary Study;Opinion papers;0;The Software Engineering in General;O artigo apresenta uma reflexão abrangente sobre a necessidade de criar métodos, ferramentas, linguagens e processos específicos para a engenharia de software quântico, mapeando as áreas do SWEBOK que serão mais impactadas e propondo linhas de atuação como teste, qualidade, manutenção, design de sistemas híbridos e reengenharia para migração de aplicações clássicas para o paradigma quântico.;O estudo destaca a carência de metodologias, métricas e ferramentas adaptadas ao paradigma quântico, os obstáculos na testabilidade e depuração de algoritmos probabilísticos, e a dificuldade na formação de profissionais e na integração de sistemas híbridos, alertando para a necessidade de agir desde já para evitar repetir erros do passado na evolução da engenharia de software.;"Process model; Tool support";"Integration challenges; Modeling difficulty; Skill gap"
SCP0077;"Serrano M.A.; Cruz-Lemus J.A.; Perez-Castillo R.; Piattini M.";Quantum Software Components and Platforms: Overview and Quality Assessment;2023;Computing Surveys;ACM Comput Surv;0;0;36;Quantum computing is the latest revolution in computing and will probably come to be seen as an advance as important as the steam engine or the information society. In the last few decades, our understanding of quantum computers has expanded and multiple efforts have been made to create languages, libraries, tools, and environments to facilitate their programming. Nonetheless, quantum computers are complex systems at the bottom of a stack of layers that programmers need to understand. Hence, efforts towards creating quantum programming languages and computing environments that can abstract low-level technology details have become crucial steps to achieve a useful quantum computing technology. However, most of these environments still lack many of the features that would be desirable, such as those outlined in The Talavera Manifesto for Quantum Software Engineering and Programming. For advancing quantum computing, we will need to develop quantum software engineering techniques and tools to ensure the feasibility of this new type of quantum software. To contribute to this goal, this paper provides a review of the main quantum software components and platformss. We also propose a set of quality requirements for the development of quantum software platforms and the conduct of their quality assessment.  © 2022 Association for Computing Machinery.;"Quantum computing; quantum platforms; quantum software; Quantum Software Engineering";"Qubits; Steam engines; Information society; Quality assessment; Quanta computers; Quantum Computing; Quantum platform; Quantum programming languages; Quantum software; Quantum software engineering; Software platforms; Software-component; Computer software";English;Article;Secondary Study;0;Survey;Software Architecture;O artigo fornece um mapeamento sistemático das linguagens, simuladores, otimizadores e plataformas de desenvolvimento em computação quântica, acompanhado por uma proposta de modelo de qualidade para avaliação de plataformas de software quântico, baseado em critérios funcionais e não funcionais, com base na norma ISO/IEC 25010 e no Talavera Manifesto.;O estudo destaca desafios como a falta de padronização nas linguagens e plataformas, ausência de recursos de governança e gestão de projetos, limitação na interoperabilidade entre tecnologias quânticas e clássicas, e a necessidade urgente de ambientes de desenvolvimento integrados que suportem práticas maduras de engenharia de software quântico.;Tool support;Lack of standardization
SCP0081;"Nagarajan S.; Malarvel M.; Thangakumar J.";A Framework for Quantum based Software Development Process;2024;International Conference on Advances in Data Engineering and Intelligent Computing Systems;Int. Conf. Adv. Data Eng. Intell. Comput. Syst., ADICS;0;0;0;Quantum software is essential for fully harnessing the capabilities of quantum computing systems. Consequently, it has been garnering growing interest in recent times. This document provides a precise definition of the concept of 'quantum software engineering' and presents a comprehensive framework for the life cycle of quantum software. Given the interdisciplinary nature of quantum computing, it is essential to establish a shared understanding of the process for developing and implementing a quantum software application. At present, there isn't a complete methodology or lifecycle that covers every significant stage that could come up along the process of development and execution. That's why we provide the quantum software lifecycle in this document. With this paradigm, practitioners, developers, and scholars have a clear path forward for quantum computing. The provision of a methodical development roadmap for quantum- principles-based software encourages creativity in this quickly expanding subject.  © 2024 IEEE.;"Classical computing; Error correction; Machine learning; Optimization; Quantum computing";"Application programs; Life cycle; Machine learning; Quantum computers; Quantum optics; Software design; Classical computing; Errors correction; Machine-learning; Optimisations; Precise definition; Quantum Computing; Quantum computing systems; Shared understanding; Software applications; Software development process; Error correction";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Process;O estudo apresenta um ciclo de vida completo para desenvolvimento de software quântico, incluindo diretrizes para testes, depuração, simulação, correção de erros e integração com inteligência artificial, além de propor um projeto open source (QCAI) para acelerar o desenvolvimento.;A ausência de métodos sistemáticos para teste e depuração de programas quânticos, a dificuldade de visualizar e validar estados em superposição, e a necessidade de um ciclo de vida adaptado à realidade da computação quântica e às limitações da era NISQ.;Research agenda;Quality assurance
SCP0082;"Stefano M.D.; Nucci D.D.; Palomba F.; Lucia A.D.";An empirical study into the effects of transpilation on quantum circuit smells;2024;Empirical Software Engineering;Empir Software Eng;0;0;0;Quantum computing is a promising field that can solve complex problems beyond traditional computers’ capabilities. Developing high-quality quantum software applications, called quantum software engineering, has recently gained attention. However, quantum software development faces challenges related to code quality. A recent study found that many open-source quantum programs are affected by quantum-specific code smells, with long circuit being the most common. While the study provided relevant insights into the prevalence of code smells in quantum circuits, it did not explore the potential effect of transpilation, a necessary step for executing quantum computer programs, on the emergence of code smells. Indeed, transpilation might alter those characteristics employed to detect the presence of a smell on a circuit. To address this limitation, we present a new study investigating the impact of transpilation on quantum-specific code smells and how different target gate sets affect the results. We conducted experiments on 17 open-source quantum programs alongside a set of 100 synthetic circuits. We found that transpilation can significantly alter the metrics that are used to detect code smells, even into previously smell-free circuits, with the long circuit smell being the most susceptible to transpilation. Furthermore, the choice of the gate set significantly influences the presence and severity of code smells in transpiled circuits, highlighting the need for careful gate set selection to mitigate their impact. These findings have implications for circuit optimization and high-quality quantum software development. Further research is needed to understand the consequences of code smells and their potential impact on quantum computations, considering the characteristics and constraints of different gate sets and hardware platforms. © The Author(s) 2024.;"Code smells; Empirical software engineering; Quantum computing; Quantum software engineering Quantum software quality";"Computer circuits; Computer software selection and evaluation; Electric network analysis; Odors; Open source software; Open systems; Quantum computers; Quantum optics; Software design; Timing circuits; Code smell; Empirical Software Engineering; Empirical studies; Gate sets; High quality; Open-source; Quantum circuit; Quantum Computing; Quantum software engineering quantum software quality; Software Quality; Application programs";English;Article;Primary Study;Evaluation research;0;Software Quality;O estudo demonstra que o processo de transpiração pode introduzir ou intensificar “code smells” quânticos — especialmente os do tipo Long Circuit (LC) e Idle Qubits (IdQ) — mesmo em circuitos que inicialmente estavam livres de tais problemas. Além disso, revela que diferentes conjuntos de portas (gate sets) influenciam significativamente a presença e intensidade dos smells, trazendo implicações práticas para a engenharia de software quântico e destacando a necessidade de ferramentas e métricas que considerem os efeitos da transpiração.;Os principais desafios incluem a ausência de controle por parte dos desenvolvedores sobre os efeitos da transpiração, a sensibilidade de certos smells à escolha do conjunto de portas, e a necessidade de reavaliar as definições e métricas utilizadas para detectar smells em função das características do hardware e da plataforma de execução. O estudo também destaca a dificuldade em obter datasets reais e representativos, além da urgência em refinar a conceituação dos smells quânticos para diferentes contextos técnicos.;"Process model; Tool support";Hardware limitations
SCP0084;"Greiwe F.; Kruger T.; Mauerer W.";Effects of Imperfections on Quantum Algorithms: A Software Engineering Perspective;2023;International Conference on Quantum Software;QSW;31;42;11;Quantum computers promise considerable speedups over classical approaches, which has raised interest from many disciplines. Since any currently available implementations suffer from noise and imperfections, achieving concrete speedups for meaningful problem sizes remains a major challenge. Yet, imperfections and noise may remain present in quantum computing for a long while. Such limitations play no role in classical software computing, and software engineers are typically not well accustomed to considering such imperfections, albeit they substantially influence core properties of software and systems.In this paper, we show how to model imperfections with an approach tailored to (quantum) software engineers. We intuitively illustrate, using numerical simulations, how imperfections influence core properties of quantum algorithms on NISQ systems, and show possible options for tailoring future NISQ machines to improve system performance in a co-design approach.Our results are obtained from a software framework that we provide in form of an easy-to-use reproduction package. It does not require computer scientists to acquire deep physical knowledge on noise, yet provide tangible and intuitively accessible means of interpreting the influence of noise on common software quality and performance indicators. © 2023 IEEE.;"HW-SW co-design; NISQ systems; noisy quantum computing; quantum software engineering";"Cell proliferation; Computer programming; Quantum computers; Quantum theory; Co-designs; Engineering perspective; HW-SW co-design; NISQ system; Noisy quantum computing; Property; Quanta computers; Quantum algorithms; Quantum Computing; Quantum software engineering; Computer software selection and evaluation";English;Conference Paper;Primary Study;Evaluation research;0;Software Quality;O artigo fornece uma estrutura clara e acessível para que engenheiros de software possam modelar e compreender os impactos de ruído e imperfeições em algoritmos quânticos, com base em simulações de Grover, QFT e circuitos variacionais, além de apresentar um pacote de reprodução baseado no Qiskit que permite a experimentação sem necessidade de conhecimento profundo em física quântica.;Os principais desafios destacados incluem a necessidade de considerar imperfeições físicas específicas do hardware para avaliar corretamente o desempenho de algoritmos, a ausência de abstrações adequadas para lidar com ruídos em contextos de engenharia de software, a dificuldade de testabilidade em ambientes com incertezas múltiplas e a urgência de co-design entre hardware e software para alcançar vantagens práticas com máquinas NISQ.;Tool support;Hardware limitations
SCP0085;"Hacaloglu T.; Soubra H.; Bourque P.";Exploratory Review of Quantum Computing Software Requirements Specification and their Measurement;2024;International Workshop on Software Measurement and Conference on Software Measurement Product Measurement;IWSM-MENSURA;0;0;0;Quantum software sets itself apart from classical software owing to its powerful computational abilities rooted in entanglement and superposition. Unlike classical software, quantum software diverges notably across various dimensions, including computational models, hardware architectures, algorithms, deployment platforms, and problem domains. Quantum software is also often not standalone and interacts heavily with classical software, stressing the importance of carefully considering hybridization. From a software engineering standpoint, researchers generally agree that a different approach is required for quantum software, and they advocate a Quantum Software Development Life Cycle (SDLC). This exploratory study briefly outlines the specifics of quantum software, overviews the proposed approaches regarding the software requirements of quantum software, and then reviews the current alternatives for measuring the functional size of quantum software. This study indicates that only a few papers in the literature discuss the requirements and functional size measurements of quantum software. Their results are also mostly conceptual and have not yet been empirically validated. Functional size measurement using quantum software remains an open area for further research. © 2024 Copyright for this paper by its authors.;"quantum software; quantum software requirements; Software size measurement";"Computer software selection and evaluation; Quantum electronics; Quantum entanglement; Quantum optics; Requirements engineering; Size determination; Software architecture; Software design; Strain measurement; Velocity measurement; Computing software; Functional Size Measurements; Quantum Computing; Quantum software; Quantum software requirement; Size measurements; Software requirements; Software requirements specifications; Software size; Software size measurement; Quantum computers";English;Conference Paper;Secondary Study;0;Exploratory Review;Software Requirements;O estudo identifica a necessidade de um ciclo de vida específico para o desenvolvimento de software quântico (SDLC) e revisa abordagens para especificação de requisitos e medição do tamanho funcional, fornecendo um panorama sobre o estado da arte na área.;A falta de validação empírica das metodologias existentes e a necessidade de desenvolver técnicas específicas para requisitos e medição de software quântico representam os principais desafios para a Engenharia de Software Quântico (QSE).;Requirements engineering;"Modeling difficulty; Quality assurance"
SCP0086;"Nguyen H.T.; Usman M.; Buyya R.";QFaaS: A Serverless Function-as-a-Service framework for Quantum computing;2024;Future Generation Computer Systems;Future Gener Comput Syst;281;300;9;Quantum computing is rapidly reaching a point in which its application design and engineering aspects must be seriously considered. However, quantum software engineering is still in its infancy, with numerous challenges, especially in dealing with the diversity of quantum programming languages and noisy intermediate-scale quantum (NISQ) systems. To alleviate these challenges, we propose QFaaS, a holistic Quantum Function-as-a-Service framework, which leverages the advantages of the serverless model, DevOps lifecycle, and the state-of-the-art software techniques to advance practical quantum computing for next-generation application development in the NISQ era. Our framework provides essential elements of a serverless quantum system to streamline service-oriented quantum application development in cloud environments, such as combining hybrid quantum–classical computation, automating the backend selection, cold start mitigation, and adapting DevOps techniques. QFaaS offers a full-stack and unified quantum serverless platform by integrating multiple well-known quantum software development kits (Qiskit, Q#, Cirq, and Braket), quantum simulators, and cloud providers (IBM Quantum and Amazon Braket). This paper proposes the concept of quantum function-as-a-service, system design, operation workflows, implementation of QFaaS, and lessons learned on the benefits and limitations of quantum serverless computing. We also present practical use cases with various quantum applications on today's quantum computers and simulators to demonstrate our framework capability to facilitate the ongoing quantum software transition. © 2024 The Author(s);"Hybrid quantum-classical computing; Quantum cloud computing; Quantum DevOps; Quantum function-as-a-service; Quantum serverless; Quantum software engineering";"Application programs; Computer software reusability; Quantum computers; Quantum optics; Software design; Classical computing; Cloud-computing; Hybrid quantum-classical computing; Quantum cloud computing; Quantum devops; Quantum function-as-a-service; Quantum functions; Quantum serverless; Quantum software engineering; Quantum-classical; Life cycle";English;Article;Primary Study;Evaluation research;0;Software Architecture;O trabalho apresenta o QFaaS, uma arquitetura serverless para execução de funções quânticas com suporte a múltiplos SDKs e provedores, oferecendo escalabilidade, integração DevOps, seleção automática de backends quânticos e mitigação do cold start, além de validações empíricas com algoritmos como Grover, Deutsch-Jozsa e Shor.;A imaturidade do hardware NISQ, os altos custos e instabilidade na execução de algoritmos quânticos reais, a impossibilidade de escalar recursos quânticos como no modelo clássico, e a necessidade de padronizar orquestração, corte de circuitos e modelos híbridos para adoção prática do paradigma serverless em computação quântica.;Reference architecture;"Tool immaturity; Modeling difficulty; Hardware limitations"
SCP0087;"Khan A.A.; Ahmad A.; Waseem M.; Liang P.; Fahmideh M.; Mikkonen T.; Abrahamsson P.";Software architecture for quantum computing systems — A systematic review;2023;Journal of Systems and Software;JSS;0;0;39;"Quantum computing systems rely on the principles of quantum mechanics to perform a multitude of computationally challenging tasks more efficiently than their classical counterparts. The architecture of software-intensive systems can empower architects who can leverage architecture-centric processes, practices, description languages to model, develop, and evolve quantum computing software (quantum software for short) at higher abstraction levels. We conducted a Systematic Literature Review (SLR) to investigate (i) architectural process, (ii) modelling notations, (iii) architecture design patterns, (iv) tool support, and (iv) challenging factors for quantum software architecture. Results of the SLR indicate that quantum software represents a new genre of software-intensive systems; however, existing processes and notations can be tailored to derive the architecting activities and develop modelling languages for quantum software. Quantum bits (Qubits) mapped to Quantum gates (Qugates) can be represented as architectural components and connectors that implement quantum software. Tool-chains can incorporate reusable knowledge and human roles (e.g., quantum domain engineers, quantum code developers) to automate and customise the architectural process. Results of this SLR can facilitate researchers and practitioners to develop new hypotheses to be tested, derive reference architectures, and leverage architecture-centric principles and practices to engineer emerging and next generations of quantum software. © 2023 The Authors";"Quantum computing; Quantum software architecture; Quantum software engineering; Systematic literature review";"Quantum optics; Qubits; Software architecture; Software testing; Architectural process; Architecture-centric; Classical counterpart; Quantum Computing; Quantum computing systems; Quantum software architecture; Quantum software engineering; Software intensive systems; Systematic literature review; Systematic Review; Modeling languages";English;Article;Secondary Study;0;Systematic Review;Software Architecture;O artigo contribui ao apresentar um modelo arquitetural genérico para sistemas de computação quântica que inclui camadas de aplicação, middleware e abstração de hardware. A proposta oferece uma visão modular que facilita a adaptação de aplicações a diferentes tecnologias quânticas, promove interoperabilidade entre ferramentas e plataformas, e apoia o desenvolvimento de software robusto e reutilizável. Também discute aspectos críticos como gerenciamento de recursos, confiabilidade e evolução de sistemas híbridos.;Entre os principais desafios estão a diversidade e rápida evolução do hardware quântico, a necessidade de abstrações que ocultem a complexidade física sem comprometer o controle e desempenho, e a dificuldade de desenvolver software portátil e escalável diante da ausência de padrões consolidados. A integração entre software clássico e quântico também impõe restrições arquiteturais e exige novas estratégias de orquestração, execução e comunicação entre subsistemas heterogêneos.;"Tool support; Reference architecture";"Integration challenges; Hardware limitations"
SCP0088;"Akbar M.A.; Khan A.A.; Rafi S.";A systematic decision-making framework for tackling quantum software engineering challenges;2023;Automated Software Engineering;ASE Journal;0;0;10;Quantum computing systems harness the power of quantum mechanics to execute computationally demanding tasks more effectively than their classical counterparts. This has led to the emergence of Quantum Software Engineering (QSE), which focuses on unlocking the full potential of quantum computing systems. As QSE gains prominence, it seeks to address the evolving challenges of quantum software development by offering comprehensive concepts, principles, and guidelines. This paper aims to identify, prioritize, and develop a systematic decision-making framework of the challenging factors associated with QSE process execution. We conducted a literature survey to identify the challenging factors associated with QSE process and mapped them into 7 core categories. Additionally, we used a questionnaire survey to collect insights from practitioners regarding these challenges. To examine the relationships between core categories of challenging factors, we applied Interpretive Structure Modeling (ISM). Lastly, we applied fuzzy TOPSIS to rank the identified challenging factors concerning to their criticality for QSE process. We have identified 22 challenging factors of QSE process and mapped them to 7 core categories. The ISM results indicate that the ‘resources’ category has the most decisive influence on the other six core categories of the identified challenging factors. Moreover, the fuzzy TOPSIS indicates that ‘complex programming’, ‘limited software libraries’, ‘maintenance complexity’, ‘lack of training and workshops’, and ‘data encoding issues’ are the highest priority challenging factor for QSE process execution. Organizations using QSE could consider the identified challenging factors and their prioritization to improve their QSE process. © 2023, The Author(s).;"Challenging factors; Prioritization; Quantum computing; Quantum software engineering (QSE)";"Quantum computers; Quantum theory; Software design; Challenging factor; Decision-making frameworks; fuzzy-TOPSIS; Prioritization; Process execution; Quantum Computing; Quantum computing systems; Quantum software engineering; Software engineering process; Structure models; Decision making";English;Article;Primary Study;Evaluation research;0;Software Design;O trabalho fornece um processo estruturado para avaliação de plataformas de software quântico, levando em conta critérios como suporte a linguagens, documentação, curva de aprendizado, desempenho e integração com ferramentas de desenvolvimento. Aplica o framework a plataformas como Qiskit, Cirq, Braket e Ocean.;Os principais desafios incluem a rápida evolução das plataformas, a falta de padronização entre elas, e a dificuldade de mensurar atributos qualitativos de forma objetiva, como usabilidade e suporte à comunidade.;"Conceptual framework; Process model; Tool support";"Lack of standardization; Lack of community consolidation"
SCP0089;"Zhang L.; Radnejad M.; Miranskyy A.";Identifying Flakiness in Quantum Programs;2023;International Symposium on Empirical Software Engineering and Measurement;Int. Symp. Empir. Softw. Eng. Meas.;0;0;3;In recent years, software engineers have explored ways to assist quantum software programmers. Our goal in this paper is to continue this exploration and see if quantum software programmers deal with some problems plaguing classical programs. Specifically, we examine whether intermittently failing tests, i.e., flaky tests, affect quantum software development. To explore flakiness, we conduct a preliminary analysis of 14 quantum software repositories. Then, we identify flaky tests and categorize their causes and methods of fixing them. We find flaky tests in 12 out of 14 quantum software repositories. In these 12 repositories, the lower boundary of the percentage of issues related to flaky tests ranges between 0.26% and 1.85% per repository. We identify 46 distinct flaky test reports with 8 groups of causes and 7 common solutions. Further, we notice that quantum programmers are not using some of the recent flaky test countermeasures developed by software engineers. This work may interest practitioners, as it provides useful insight into the resolution of flaky tests in quantum programs. Researchers may also find the paper helpful as it offers quantitative data on flaky tests in quantum software and points to new research opportunities.  © 2023 IEEE.;"flaky tests; quantum software engineering; software testing";"Software design; Flaky test; Lower boundary; Preliminary analysis; Quantitative data; Quantum software engineering; Research opportunities; Software repositories; Software testings; Test range; Test reports; Software testing";English;Conference Paper;Primary Study;Evaluation research;0;Software Quality;O estudo identificou 46 flaky tests em 12 repositórios quânticos populares, categorizou 8 causas principais e 7 padrões de correção, e demonstrou que muitas estratégias desenvolvidas para software clássico ainda não são utilizadas por desenvolvedores de software quântico, sugerindo caminhos para melhoria da qualidade de testes.;O estudo identificou 46 flaky tests em 12 repositórios quânticos populares, categorizou 8 causas principais e 7 padrões de correção, e demonstrou que muitas estratégias desenvolvidas para software clássico ainda não são utilizadas por desenvolvedores de software quântico, sugerindo caminhos para melhoria da qualidade de testes.;Empirical study;Quality assurance
SCP0091;"Ali S.; Yue T.";Quantum Software Testing: A Brief Introduction;2023;International Conference on Software Engineering;ICSE;332;333;5;Quantum software testing concentrates on testing quantum programs to discover quantum faults in the programs cost-effectively. Given the foundations in quantum mechanics, the way quantum computations are performed is significantly different than classical computing. Therefore, quantum software testing also differs from classical software testing. There has been quite an interest in building quantum software testing techniques since 2019 in the software engineering (SE) community. Thus, we aim to introduce quantum software testing to the SE community. In particular, we will present the basic foundations of quantum computing and quantum programming as circuits, followed by the current state of the art on quantum software testing. Next, we will present some basic quantum software testing techniques and finally give the research directions that deserve attention from the SE community. © 2023 IEEE.;"quantum circuits; quantum programs; quantum software testing";"Quantum computers; Quantum optics; Timing circuits; Classical computing; Engineering community; In-buildings; Quantum circuit; Quantum Computing; Quantum program; Quantum programming; Quantum software testing; Software testing techniques; Software testings; Software testing";English;Conference Paper;Primary Study;Opinion papers;0;Software Testing;O estudo fornece uma síntese do estado da arte em testes de software quântico, abordando estratégias como teste baseado em propriedades, fuzz testing, mutation testing, testes metamórficos, e critérios de cobertura, além de destacar as limitações atuais e oportunidades de pesquisa para avançar no campo.;A dificuldade em testar programas com saídas probabilísticas, a ausência de oráculos de teste, o ruído no hardware quântico, e a necessidade de novas metodologias para lidar com a complexidade e os efeitos colaterais do colapso da superposição no momento da medição.;Code generation support;"Modeling difficulty; Quality assurance; Hardware limitations"
SCP0092;"Pérez-Castillo R.; Piattini M.";Design of classical-quantum systems with UML;2022;Computing;Comput.;2375;2403;17;"Developers of the many promising quantum computing applications that currently exist are urging companies in many different sectors seriously consider integrating this new technology into their business. For these applications to function, not only are quantum computers required, but quantum software also. Accordingly, quantum software engineering has become an important research field, in that it attempts to apply or adapt existing methods and techniques (or propose new ones) for the analysis, design, coding, and testing of quantum software, as well as playing a key role in ensuring quality in large-scale productions. The design of quantum software nevertheless poses two main challenges: the modelling of software quantum elements must be done in high-level modelling languages; and the need to further develop so-called “hybrid information systems”, which combine quantum and classical software. To address these challenges, we first propose a quantum UML profile for analysing and designing hybrid information systems; we then demonstrate its applicability through various structural and behavioural diagrams such as use case, class, sequence, activity, and deployment. In comparison to certain other quantum domain-specific languages, this UML profile ensures compliance with a well-known international standard that is supported by many tools and is followed by an extensive community. © 2022, The Author(s).";"Quantum computing; Quantum modelling; Quantum software engineering; Software design; UML";"Application programs; Information systems; Information use; Modeling languages; Problem oriented languages; Quantum computers; Quantum optics; Regulatory compliance; Software testing; Well testing; Classical-quantum; Computing applications; Hybrid information system; Quanta computers; Quantum Computing; Quantum models; Quantum software engineering; Quantum system; Research fields; UML; Software design";English;Article;Primary Study;Proposal of solution;0;Software Design;O artigo apresenta um perfil UML compatível com ferramentas industriais que estende a linguagem para modelar componentes e interações de sistemas híbridos clássicos-quânticos, abrangendo diagramas de casos de uso, classes, sequência, atividades e implantação, além de demonstrar sua aplicabilidade com um exemplo real de sistema financeiro usando Qiskit.;Os principais desafios incluem a falta de notações formais e ferramentas de modelagem que integrem elementos clássicos e quânticos em sistemas híbridos, a carência de abstrações para representar circuitos quânticos e propriedades fundamentais como entrelaçamento e superposição, bem como a necessidade de metodologias específicas que orientem a modelagem, análise e geração de código para sistemas quânticos modernos.;Tool support;Modeling difficulty
SCP0093;Soubra H.;Quantum Software Sizing: Contemporary Interpretations and Approaches;2024;International Workshop on Software Measurement and Conference on Software Measurement Product Measurement;IWSM-MENSURA;0;0;0;Conventional software sizing approaches initially centered on metrics like lines of code, gradually transitioning to more refined measurements such as function points. However, these approaches could not be directly applicable to quantum software due to the fundamental differences between classical and quantum computing paradigms. In quantum software sizing, factors such as the number of qubits required, the depth of quantum circuits, the connectivity requirements of qubits, the error rates of quantum gates, and the complexity of the quantum algorithms play crucial roles. Additionally, considerations such as the choice of quantum programming language, quantum hardware platform, and optimization techniques also impact the overall size estimation. This paper provides an overview of quantum software sizing, highlighting initial exploration and classification of sizing measurement concepts of Quantum Software. © 2024 Copyright for this paper by its authors.;"Measurement; Metrics; Quantum Software; Quantum Software Engineering; Quantum Software Sizing";"Quantum electronics; Quantum optics; Size determination; Strain measurement; Classical computing; Computing paradigm; Function point; Line of codes; Metric; Quantum circuit; Quantum Computing; Quantum software; Quantum software engineering; Quantum software sizing; Qubits";English;Conference Paper;Primary Study;Opinion papers;0;Software Quality;O estudo revisa e categoriza um conjunto de métricas para dimensionamento de software quântico, incluindo volume quântico, conectividade de qubits, métricas de circuitos, qualidade de código híbrido, taxas de erro e métricas funcionais baseadas em COSMIC, oferecendo um panorama conceitual para avaliar esforço, desempenho e qualidade em projetos de QSE.;A falta de padronização nas métricas para dimensionar software quântico, a interdependência entre hardware e software, a dificuldade de medir aspectos funcionais e não funcionais em sistemas híbridos, e a complexidade técnica de adaptar métricas clássicas para um paradigma baseado em superposição, entrelaçamento e incerteza.;Conceptual framework;"Lack of standardization; Hardware limitations"
SCP0094;"Zhao X.; Xu X.; Qi L.; Xia X.; Bilal M.; Gong W.; Kou H.";Unraveling quantum computing system architectures: An extensive survey of cutting-edge paradigms;2024;Information and Software Technology;INFSOF;0;0;4;Context: The convergence of physics and computer science in the realm of quantum computing systems has sparked a profound revolution within the computer industry. However, despite such promise, the existing focus on quantum software systems primarily centers on the generation of quantum source code, inadvertently overlooking the pivotal role of the overall software architecture. Objectives: In order to provide comprehensive guidance to researchers and practitioners engaged in quantum software development, employing an architecture-centered development model, an extensive literature review was conducted pertaining to existing research on quantum software architecture. The analysis encompasses a detailed examination of the characteristics exhibited by these studies and the identification of prospective challenges that lie ahead in the field of quantum software architecture. Methods: We have closely examined instances of quantum software engineering, quantum modeling languages, quantum design patterns, and quantum communication security to gain insights into the distinctive attributes associated with various software architecture approaches. Results: Our findings underscore the critical significance of prioritizing software architecture in the development of robust and efficient quantum software systems. Through the synthesis of these multifaceted aspects, both researchers and practitioners can devise quantum software solutions that are inherently architecture-centric. Conclusion: The software architecture of quantum computing systems plays a pivotal role in determining their ultimate success and usability. Given the ongoing advancements in quantum computing technology, the migration of traditional software architecture development methods to the domain of quantum software development holds significant importance. © 2023 Elsevier B.V.;"Quantum computing; Quantum software architecture; Quantum software engineering";"Computer software; Modeling languages; Quantum communication; Quantum computers; Quantum optics; Software architecture; Computer industry; Cutting edges; Development model; Quantum Computing; Quantum computing systems; Quantum software architecture; Quantum software engineering; Software-systems; Source codes; Systems architecture; Software design";English;Article;Primary Study;Evaluation research;0;Software Architecture;O estudo mostra que a transpiração pode introduzir ou alterar significativamente code smells em circuitos quânticos, principalmente o “Long Circuit”, revelando que decisões de engenharia como o conjunto de portas-alvo afetam diretamente a qualidade do software quântico, e recomendando uma abordagem mais contextualizada para ferramentas de detecção de smells.;O principal desafio revelado pelo estudo é que mesmo circuitos considerados limpos podem desenvolver smells após transpiração, o que impõe limitações ao controle que desenvolvedores têm sobre a qualidade do código e demanda novas técnicas para mitigar esses efeitos em plataformas e gate sets variados.;Tool support;Other technical limitation
SCP0095;"Piattini M.; Hevia J.L.; Peterssen G.";Quantum Software Engineering: Practical Challenges;2024;International Journal of Software Engineering and Knowledge Engineering;Int. J. Software Engineer. Knowledge Engineer.;1387;1413;0;Quantum computing is a young discipline that specializes in the construction of hardware and software using the quantum properties of nature, to solve problems of higher complexity that classical computing cannot address, in multiple business areas. The most important computing revolution of the last 60 years has begun because of the integration of classical computing, quantum computing and artificial intelligence. In this paper, we present a pragmatic survey of the main quantum computing areas, focusing in particular on software and the need for real Quantum Software Engineering (QSE) to produce quantum software with sufficient quality and productivity, which is the fundamental axis for the diffusion of quantum computing.  © 2024 World Scientific Publishing Company.;"Quantum computing; quantum software; quantum software engineering";"Computer aided software engineering; Computer software selection and evaluation; Quantum electronics; Quantum optics; Software quality; Classical computing; Engineering practicals; Hardware and software; High complexity; Quantum Computing; Quantum properties; Quantum software; Quantum software engineering; Quantum computers";English;Article;Secondary Study;0;Pragmatic suvery;The Software Engineering in General;O artigo fornece uma visão pragmática e estruturada da QSE, discute desafios reais enfrentados pela indústria, apresenta uma análise do estado da arte em linguagens, plataformas e ferramentas, além de reforçar os princípios do Manifesto de Talavera como guia para a prática e ensino da engenharia de software quântico.;Os desafios envolvem a ausência de padrões e ferramentas unificadas, a diversidade de linguagens e plataformas em evolução, a falta de abstrações adequadas para o desenvolvimento híbrido clássico-quântico, e a necessidade urgente de formar profissionais e metodologias que possibilitem o desenvolvimento de software quântico de alta qualidade em escala industrial.;"Tool support; Education and training";Modeling difficulty
SCP0096;Kim D.-K.;A Metamodel-Based Approach to Quantum Software Development;2025;Software;IEEE Software;0;0;0;Quantum computing introduces a significant shift in computation using principles like superposition, entanglement, and quantum interference to tackle problems that were previously unsolvable. Software engineers face challenges in quantum software development due to a limited understanding of quantum concepts and their lack of equivalents in classical computing. This paper introduces a metamodel-based approach that maps quantum concepts onto familiar software constructs. Through a multi-level framework, it connects abstract quantum ideas, represented as metaclasses, with their practical applications in model instances and implementations. The paper uses the Deutsch-Jozsa algorithm to demonstrate how the metamodel makes quantum algorithms accessible to software engineers.  © 1984-2012 IEEE.;;"Application programs; Computer aided software engineering; Quantum electronics; Quantum entanglement; Quantum interference devices; Quantum optics; Software design; Classical computing; Deutsch-Jozsa algorithms; Meta model; Metaclass; Multilevels; Quantum algorithms; Quantum Computing; Quantum interference; Software constructs; Quantum computers";English;Article;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O estudo apresenta um metamodelo de quatro níveis (metamodelo, instância, implementação e execução) que traduz conceitos quânticos como qubits, superposição, emaranhamento e interferência em elementos modeláveis e executáveis, permitindo aos engenheiros visualizar e implementar algoritmos quânticos (como Deutsch-Jozsa) com ferramentas como Qiskit, Cirq e pyQuil.;A dificuldade de entendimento e modelagem de conceitos quânticos por engenheiros de software clássicos, a necessidade de abstrações formais que facilitem a transição conceitual entre paradigmas, e a ausência de ferramentas integradas que ofereçam suporte desde a modelagem até a execução de software quântico com confiabilidade e clareza semântica.;Tool support;"Lack of modeling standards; Tool support gap"
SCP0099;"Dwivedi K.; Haghparast M.; Mikkonen T.";Quantum software engineering and quantum software development lifecycle: a survey;2024;Cluster Computing;Cluster Comput.;7127;7145;5;Quantum software engineering is advancing in the domain of quantum computing research and application, yet the documentation is scattered. The slow transition from Von-Neumann based computation systems to quantum systems, and conserving the fundamental computing principles in software development and software engineering helps in enrichment of quantum software development. The evolution of quantum computing over the past years shows a shift in the domain of classical computation to quantum computation in the years to come. Future applications such as, quantum AI and quantum machine learning will benefit from quantum software engineering. This survey collects and explores the various documentations in the domain of quantum systems and quantum software engineering. The survey provides an in-depth exploration of quantum programming languages, which is combined with explanations of quantum computing’s fundamentals. The review also goes in-depth about quantum software engineering and quantum software life cycle development, outlining the quantum software reuse methodology that is introduced in the quantum software lifecycle development domain. © The Author(s) 2024.;"Quantum hybrid systems; Quantum life-cycle development; Quantum programming languages; Quantum software analysis; Quantum software development; Quantum software engineering";"Application programs; Computer software reusability; Life cycle; Quantum computers; Quantum optics; Software design; Quantum Computing; Quantum hybrid system; Quantum life-cycle development; Quantum programming languages; Quantum software analyse; Quantum software development; Quantum software engineering; Quantum system; Software analysis; Software life cycles; Hybrid systems";English;Article;Secondary Study;0;Survey;Software Engineering Process;O artigo organiza e classifica o corpo de conhecimento da área de Engenharia de Software Quântica, apresentando tendências, lacunas e tópicos emergentes com base em 108 publicações revisadas. A análise revela a predominância de estudos conceituais e experimentais, a escassez de processos e ferramentas consolidadas, e a fragmentação das contribuições, oferecendo uma base valiosa para orientar futuras pesquisas.;Os desafios envolvem a falta de metodologias e ferramentas maduras para apoiar o desenvolvimento de software quântico, a ausência de métricas específicas e a necessidade de consolidar práticas de engenharia que promovam reuso, qualidade e automação. Além disso, a transição da prática ad hoc para abordagens sistemáticas requer colaboração interdisciplinar e iniciativas educacionais.;"Conceptual framework; Process model; Tool support";"Tool immaturity; Modeling difficulty"
SCP0103;"Miranskyy A.; Zhang L.";On testing quantum programs;2019;International Conference on Software Engineering: New Ideas and Emerging Results;ICSE-NIER;57;60;53;A quantum computer (QC) can solve many computational problems more efficiently than a classic one. The field of QCs is growing: companies (such as D-Wave, IBM, Google, and Microsoft) are building QC offerings. We position that software engineers should look into defining a set of software engineering practices that apply to QC's software. To start this process, we give examples of challenges associated with testing such software and sketch potential solutions to some of these challenges. © 2019 IEEE.;"Quantum computing; Software engineering";"Quantum computers; Software engineering; Computational problem; MicroSoft; Quantum Computing; Software engineering practices; Software testing";English;Conference Paper;Primary Study;Proposal of solution;0;Software Testing;O artigo propõe uma reflexão crítica sobre a adaptação das técnicas tradicionais de engenharia de software ao contexto quântico, analisando detalhadamente white-box e black-box testing, além de estratégias de verificação (como uso de simuladores e execução em múltiplos QCs) e validação (como análise de complexidade e uso de heurísticas). Também introduz a noção de que programas quânticos deverão ser componentes de sistemas híbridos, sugerindo que testes e validações ocorram predominantemente em simuladores ou sistemas clássicos, sempre que possível.;Os principais desafios envolvem a impossibilidade de uso de técnicas de depuração interativas devido à destruição da superposição por medição, a confiabilidade limitada dos simuladores, a dificuldade em validar saídas com algoritmos de alta complexidade (como Boson Sampling), e a necessidade de executar programas em múltiplos hardwares quânticos para garantir consistência, além da falta de práticas estabelecidas para validação eficiente de programas com saída probabilística.;Empirical study;"Quality assurance; Hardware limitations"
SCP0104;"Alonso D.; Sánchez P.; Sánchez-Rubio F.";Engineering the development of quantum programs: Application to the Boolean satisfiability problem;2022;Advances in Engineering Software;Adv Eng Software;0;0;10;The development of quantum programs is becoming a reality due to the rapid advancement of quantum computing. Over the past few years, a multitude of hardware platforms, algorithms, and programming languages have emerged to support this paradigm. By the very nature of Quantum Mechanics principles, there is an enormous change of philosophy when building quantum programs, which operate in a probabilistic space, unlike the deterministic behaviour shown by classical programming languages. These conceptual differences can be overcome by using techniques and tools of Software Engineering. In this paper, we apply Model-Driven Engineering techniques in a systematic way to ease the generation of quantum programs and we apply it to solve the satisfiability problem, very important in many engineering domains like verification of discrete systems and test of integrated circuits. To that aim, we contribute with a metamodel for representing quantum circuits and a model-to-text transformation to generate working IBM Qiskit code. This model-driven infrastructure is employed to automatically generate quantum programs from SAT equations through a model-to-model transformation that embeds Grover's algorithm. Besides, we provide formulas for calculating the number of required quantum elements from SAT equations, crucial in the current context of limited quantum resources. The interoperability with other tools and the extensibility to target additional quantum platforms is guaranteed thanks to the use of a model-based toolchain. We cover several usage scenarios to validate the approach, providing exemplary SAT equations, the generated Qiskit code and the results of executing this code in IBM Quantum infrastructure. © 2022 The Author(s);"Boolean satisfiability; Model-driven engineering; Quantum computing";"Application programs; Formal logic; Problem oriented languages; Quantum computers; Boolean satisfiability; Boolean satisfiability problems; Deterministic behavior; Hardware algorithm; Hardware platform; Hardware programming; Model-driven Engineering; Probabilistic space; Program applications; Quantum Computing; Quantum theory";English;Article;Primary Study;Evaluation research;0;Software Engineering Models and Methods;O artigo fornece uma visão abrangente sobre a importância da arquitetura de software no contexto da computação quântica, apresentando práticas consolidadas, comparações entre padrões arquiteturais e linguagens de modelagem quântica, e sugerindo direções futuras para a construção de arquiteturas robustas e escaláveis.;O trabalho destaca que os principais desafios na área incluem a falta de padronização de linguagens de modelagem e padrões arquiteturais adaptados às peculiaridades da computação quântica, a escassez de métodos formais que considerem superposição, interferência e entrelaçamento, além das limitações impostas pelas arquiteturas de hardware e pela necessidade de segurança e comunicação quântica eficientes.;Reference architecture;"Lack of standardization; Hardware limitations"
SCP0106;"Fingerhuth M.; Babej T.; Wittek P.";Open source software in quantum computing;2018;PLoS ONE;PLoS ONE;0;0;103;Open source software is becoming crucial in the design and testing of quantum algorithms. Many of the tools are backed by major commercial vendors with the goal to make it easier to develop quantum software: this mirrors how well-funded open machine learning frameworks enabled the development of complex models and their execution on equally complex hardware. We review a wide range of open source software for quantum computing, covering all stages of the quantum toolchain from quantum hardware interfaces through quantum compilers to implementations of quantum algorithms, as well as all quantum computing paradigms, including quantum annealing, and discrete and continuous-variable gate-model quantum computing. The evaluation of each project covers characteristics such as documentation, licence, the choice of programming language, compliance with norms of software engineering, and the culture of the project. We find that while the diversity of projects is mesmerizing, only a few attract external developers and even many commercially backed frameworks have shortcomings in software engineering. Based on these observations, we highlight the best practices that could foster a more active community around quantum computing software that welcomes newcomers to the field, but also ensures high-quality, well-documented code. Copyright: © 2018 Fingerhuth et al. This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.;;"Algorithms; Software; computer language; documentation; human; human experiment; licence; review; software; algorithm";English;Article;Primary Study;Evaluation research;0;The Software Engineering in General;O artigo fornece uma avaliação sistemática de mais de 25 projetos open source em computação quântica, propondo critérios objetivos para análise (como cobertura de testes, resposta a issues, licença, arquitetura, suporte ao usuário e documentação), identificando as melhores práticas e apontando lacunas em termos de padronização, governança e experiência do desenvolvedor.;A falta de padronização entre linguagens e frameworks, a escassez de ferramentas com boa documentação e suporte à comunidade, o baixo envolvimento de colaboradores externos em muitos projetos, e a dificuldade de estabelecer processos transparentes e abertos de governança e evolução no ecossistema de software quântico.;Reference architecture;"Lack of standardization; Lack of community consolidation"
SCP0107;"Esposito M.; Sabzevari M.T.; Ye B.; Falessi D.; Khan A.A.; Taibi D.";Classi|Q〉: Towards a Translation Framework to Bridge the Classical-Quantum Programming Gap;2024;International Workshop on Quantum Software Engineering: The Next Evolution;QSE-NE;11;14;1;Quantum computing, albeit readily available as hardware or emulated on the cloud, is still far from being available in general regarding complex programming paradigms and learning curves. This vision paper introduces Classi|Q〉, a translation framework idea to bridge Classical and Quantum Computing by translating high-level programming languages, e.g., Python or C++, into a low-level language, e.g., Quantum Assembly. Our idea paper serves as a blueprint for ongoing efforts in quantum software engineering, offering a roadmap for further Classi|Q〉 development to meet the diverse needs of researchers and practitioners. Classi|Q〉 is designed to empower researchers and practitioners with no prior quantum experience to harness the potential of hybrid quantum computation. We also discuss future enhancements to Classi|Q〉, including support for additional quantum languages, improved optimization strategies, and integration with emerging quantum computing platforms. © 2024 Copyright held by the owner/author(s).;"Programming Languages; Python; QASM; Quantum Computing; Quantum Programming Language; Translation";"Photons; Program translators; Python; Quantum electronics; Classical computing; Classical-quantum; Learning curves; Programming learning; Programming paradigms; QASM; Quantum Computing; Quantum programming; Quantum programming languages; Translation; C++ (programming language)";English;Conference Paper;Primary Study;Proposal of solution;0;Software Construction;O artigo apresenta o framework 𝐶𝑙𝑎𝑠𝑠𝑖|𝑄⟩, o primeiro tradutor PyC (Python/C++) para OpenQASM 3.0, estruturado em dois módulos: tradutor (baseado em AST) e otimizador (que substitui blocos clássicos por sub-rotinas quânticas por meio de padrões QPLPs). Também introduz o conceito de Quantum Programming Language Patterns (QPLPs) para automatizar a substituição de blocos computacionais clássicos por versões otimizadas quânticas.;Os principais desafios envolvem a ausência de suporte a conceitos de alto nível como objetos na linguagem QASM, a necessidade de manter interoperabilidade entre diferentes linguagens e plataformas, além da urgência em investigar possíveis vulnerabilidades introduzidas durante o processo de tradução, uma vez que ainda não há definições de segurança quântica consolidadas em padrões como CWE.;Conceptual framework;Other technical limitation
SCP0108;"Trovato A.; De Stefano M.; Pecorelli F.; Di Nucci D.; De Lucia A.";Reformulating regression test suite optimization using quantum annealing - an empirical study;2025;International Journal on Software Tools for Technology Transfer;Int. J. Softw. Tools Technol. Trans.;0;0;1;Maintaining software quality is crucial in the dynamic landscape of software development. Regression testing ensures that software works as expected after changes are implemented. However, re-executing all test cases for every modification is often impractical and costly, particularly for large systems. Although very effective, traditional test suite optimization techniques are often impractical in resource-constrained scenarios, as they are computationally expensive. Hence, quantum computing solutions have been developed to improve their efficiency, but have shown drawbacks in terms of effectiveness. We propose reformulating the regression test case selection problem to use quantum computation techniques better. Our objectives are (i) to provide more efficient solutions than traditional methods and (ii) to improve the effectiveness of previously proposed quantum-based solutions. We propose SelectQA, a quantum annealing approach that can outperform the quantum-based approach BootQA in terms of effectiveness while obtaining results comparable to those of the classic Additional Greedy and DIV-GA approaches. Regarding efficiency, SelectQA outperforms DIV-GA and has similar results with the Additional Greedy algorithm, but is exceeded by BootQA. © The Author(s), under exclusive licence to Springer-Verlag GmbH Germany, part of Springer Nature 2025.;"Quantum computing; Regression testing; Search-based software engineering";"Computer software selection and evaluation; Constrained optimization; Quantum efficiency; Quantum electronics; Software design; Software quality; Empirical studies; Optimisations; Quantum annealing; Quantum Computing; Regression testing; Regression tests; Search-based; Search-based software engineering; Software Quality; Test case; Software testing";English;Article;Primary Study;Evaluation research;0;Software Testing;O trabalho fornece uma análise abrangente do estado da arte em arquitetura de software para computação quântica, incluindo uma discussão crítica sobre práticas arquiteturais, linguagens de modelagem como Q-UML e Quantum4BPMN, padrões de projeto, e desafios de comunicação quântica, propondo um panorama valioso para orientar pesquisadores e profissionais.;Entre os principais desafios apontados estão a ausência de linguagens de modelagem que capturem propriedades quânticas como entrelaçamento e superposição, a necessidade de padrões arquiteturais específicos para software quântico, e a carência de protocolos robustos para comunicação segura em redes quânticas emergentes.;Reference architecture;Lack of modeling standards
SCP0111;"Muqeet A.; Ali S.; Yue T.; Arcaini P.";A Machine Learning-Based Error Mitigation Approach for Reliable Software Development on IBM’s Quantum Computers;2024;International Conference on the Foundations of Software Engineering;FSE Companion - Companion Proc. ACM Int. Conf. Found. Softw. Eng.;80;91;2;Quantum computers have the potential to outperform classical computers for some complex computational problems. However, current quantum computers (e.g., from IBM and Google) have inherent noise that results in errors in the outputs of quantum software executing on the quantum computers, affecting the reliability of quantum software development. The industry is increasingly interested in machine learning (ML)-based error mitigation techniques, given their scalability and practicality. However, existing ML-based techniques have limitations, such as only targeting specific noise types or specific quantum circuits. This paper proposes a practical ML-based approach, called Q-LEAR, with a novel feature set, to mitigate noise errors in quantum software outputs. We evaluated QLEAR on eight quantum computers and their corresponding noisy simulators, all from IBM, and compared Q-LEAR with a state-of-the-art ML-based approach taken as baseline. Results show that, compared to the baseline, Q-LEAR achieved a 25% average improvement in error mitigation on both real quantum computers and simulators. We also discuss the implications and practicality of Q-LEAR, which, we believe, is valuable for practitioners. © 2024 Copyright held by the owner/author(s).;"Error Mitigation; Machine learning; Quantum Computing; Quantum noise; Software Engineering";"Errors; Learning systems; Quantum noise; Software design; Software reliability; 'current; Computational problem; Error mitigation; Google+; Inherent noise; Learning-based approach; Machine-learning; Mitigation techniques; Quanta computers; Quantum Computing; Machine learning";English;Conference Paper;Primary Study;Evaluation research;0;Software Construction;O estudo introduz um metamodelo chamado Qcore para representar circuitos quânticos, uma transformação modelo-para-código para gerar código Qiskit, e uma transformação modelo-para-modelo que automatiza a construção de programas quânticos baseados no algoritmo de Grover para resolver problemas SAT, demonstrando a viabilidade do uso de MDE para facilitar o desenvolvimento de software quântico.;Um dos principais desafios destacados é a escassez de abordagens concretas que explorem como ferramentas e técnicas consolidadas da engenharia de software podem ser adaptadas ao paradigma singular da computação quântica, especialmente considerando as limitações de recursos quânticos e os riscos de erros decorrentes da complexidade dos circuitos.;Education and training;"Tool support gap; System complexity"
SCP0112;"Lee D.; Kwon Y.; Kim K.; Lee J.; Choi B.-S.";A Design of Software Architecture for Validate and Verification of Linear-Optical Quantum Computing Platform;2023;International Conference on Quantum Computing and Engineering;QCE;359;360;0;Compared to other semiconductor quantum computing platform, it is relatively untouched about the verification of linear-optical quantum computing (LOQC) platform. To overcome this problem, we propose a universal and versatile software platform which can support any variation of LOQC layout structure. It also supports the user-friendly interface for smooth experiment.  © 2023 IEEE.;;"Computing platform; Design of softwares; Layout structure; Linear optical quantum computing; Quantum Computing; Software platforms; User friendly interface; Verification";English;Conference Paper;Primary Study;Proposal of solution;0;Software Architecture;O estudo apresenta uma arquitetura de software em camadas composta por módulos como Verifier, Decomposer, Mapper e Controller, permitindo a validação de circuitos ópticos quânticos via Quantum Process Tomography (QPT) e integração com hardware real através de sequências de controle para FPGA.;A complexidade na verificação de plataformas LOQC com múltiplas variações estruturais, a necessidade de gerar automaticamente milhares de circuitos QPT e a integração eficiente entre circuitos quânticos abstratos e hardware físico controlado por FPGA, além da ausência de ferramentas padronizadas para esse tipo de plataforma.;Reference architecture;"Integration challenges; Quality assurance; Hardware limitations"
SCP0115;"De Stefano M.; Pecorelli F.; Di Nucci D.; Palomba F.; De Lucia A.";Software engineering for quantum programming: How far are we?;2022;Journal of Systems and Software;JSS;0;0;38;Quantum computing is no longer only a scientific interest but is rapidly becoming an industrially available technology that can potentially overcome the limits of classical computation. Over the last years, all major companies have provided frameworks and programming languages that allow developers to create their quantum applications. This shift has led to the definition of a new discipline called quantum software engineering, which is demanded to define novel methods for engineering large-scale quantum applications. While the research community is successfully embracing this call, we notice a lack of systematic investigations into the state of the practice of quantum programming. Understanding the challenges that quantum developers face is vital to precisely define the aims of quantum software engineering. Hence, in this paper, we first mine all the GITHUB repositories that make use of the most used quantum programming frameworks currently on the market and then conduct coding analysis sessions to produce a taxonomy of the purposes for which quantum technologies are used. In the second place, we conduct a survey study that involves the contributors of the considered repositories, which aims to elicit the developers’ opinions on the current adoption and challenges of quantum programming. On the one hand, the results highlight that the current adoption of quantum programming is still limited. On the other hand, there are many challenges that the software engineering community should carefully consider: these do not strictly pertain to technical concerns but also socio-technical matters. © 2022 Elsevier Inc.;"Empirical software engineering; Quantum computing; Software engineering for quantum programming";"Application programs; Quantum theory; 'current; Community IS; Empirical Software Engineering; Large-scales; Novel methods; Quantum applications; Quantum Computing; Quantum programming; Research communities; Software engineering for quantum programming; Quantum computers";English;Article;Primary Study;Evaluation research;0;The Software Engineering in General;O estudo propõe uma taxonomia das finalidades de uso das tecnologias quânticas e uma taxonomia detalhada dos desafios enfrentados na prática, incluindo dificuldades de infraestrutura, compreensão teórica, qualidade de código, realismo das aplicações e ausência de comunidade, com base em métodos como grounded theory, mineração de repositórios e survey com desenvolvedores.;O trabalho identifica como principais desafios: infraestrutura deficiente, dificuldade de compreensão e aprendizado, baixa qualidade de documentação, complexidade na depuração e testabilidade, ausência de casos reais de aplicação, e isolamento dos desenvolvedores devido à falta de comunidade ativa e colaborativa.;"Conceptual framework; Process model";Lack of community consolidation
SCP0116;"Khan A.A.; Fahmideh M.; Ahmad A.; Waseem M.; Niazi M.; Lahtinen V.; Mikkonen T.";Embracing iterations in Quantum software: a vision;2022;International Workshop on Quantum Programming for Software Engineering;QP4SE;11;14;4;In today's software engineering, iterations, affordable en masse, form an important part of just about any system. However, not all computing resources are cheap to consume. In High-Performance (HPC) and Quantum Computing (QC), executions can consume considerable amounts of energy and time, which is reserved and used even if the very first steps in the process fail. This means that developers must assume a different attitude towards programming, and aim at error-free software before its execution. This is commonly facilitated using simulators, which are commonplace for both HPC and QC. However the fashion developers advance from one tool to another is ad-hoc, with no established software engineering guidelines, and the final step from simulators to HPC/QC is still a leap of faith, comparable to releasing software. In this paper, we propose a vision where developers can iterate in an agile fashion when developing quantum software. The iterations are defined such that when the solution is still vague in the beginning, computations are interactive and provide instant feedback, thus supporting conceptualization of the software and experimenting with new ideas. When the solution becomes more precise, more expensive computations such as quantum algorithm and hyperparameter optimization are executed in batches.  © 2022 Owner/Author.;"Quantum Computing; Quantum IDE; Quantum software engineering";"Computer software; Quantum theory; Computing resource; Energy; Engineering guidelines; Free software; Leap of faiths; Performance; Performance computing; Quantum Computing; Quantum IDE; Quantum software engineering; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;0;Software Construction;O artigo introduz um modelo de desenvolvimento incremental e iterativo para software quântico, que integra práticas de engenharia de software com características da computação de alto desempenho e computação quântica, propondo um IDE baseado em ciclos de evolução que permite transições suaves entre simulação local, otimização em nuvem, validação em HPC e execução final em hardware quântico, com foco na experiência do desenvolvedor e na viabilidade técnica do processo.;O estudo aponta desafios como a ausência de ferramentas de depuração eficazes para programas quânticos, a dificuldade em lidar com estados quânticos estatísticos e de alta dimensionalidade, e a necessidade de abstrações, interfaces e pipelines de desenvolvimento que permitam um fluxo contínuo e adaptativo de engenharia entre ambientes clássicos e quânticos.;Process model;"Tool support gap; Quality assurance"
SCP0121;"Campos J.; Souto A.";QBugs: A Collection of Reproducible Bugs in Quantum Algorithms and a Supporting Infrastructure to Enable Controlled Quantum Software Testing and Debugging Experiments;2021;International Workshop on Quantum Software Engineering;QSE;28;32;24;Reproducibility and comparability of empirical results are at the core tenet of the scientific method in any scientific field. To ease reproducibility of empirical studies, several benchmarks in software engineering research, such as Defects4J, have been developed and widely used. For quantum software engineering research, however, no benchmark has been established yet. In this position paper, we propose a new benchmark-named QBugs-which will provide experimental subjects and an experimental infrastructure to ease the evaluation of new research and the reproducibility of previously published results on quantum software engineering.  © 2021 IEEE.;"Quantum software testing; Software bugs; Software engineering";"Engineering research; Quantum theory; Software testing; Empirical studies; Experimental subjects; Position papers; Quantum algorithms; Reproducibilities; Scientific fields; Scientific method; Software Testing and Debugging; Program debugging";English;Conference Paper;Primary Study;Proposal of solution;0;Software Testing;O trabalho apresenta o QBugs como o primeiro benchmark sistemático de bugs reprodutíveis em software quântico, propondo uma infraestrutura experimental baseada em projetos de código aberto, mineração automática de bugs, e suporte para múltiplas linguagens quânticas. Destaca-se pela proposta de fornecer artefatos reutilizáveis e ambientes configuráveis para experimentos empíricos em engenharia de software quântico, alinhando-se à filosofia de reproducibilidade da ciência computacional.;Os principais desafios envolvem a escassez de implementações abertas de algoritmos quânticos, a dificuldade em distinguir bugs nos algoritmos dos bugs nas frameworks, a reprodutibilidade limitada devido à natureza probabilística dos programas quânticos, e a complexidade de integrar testes automatizados em linguagens e ambientes heterogêneos. Além disso, o QBugs enfrenta o desafio de construir uma infraestrutura que permita executar experimentos controlados em ambientes equivalentes aos utilizados em pesquisas anteriores.;"Tool support; Empirical study";Quality assurance
SCP0122;"Aktar M.S.; Liang P.; Waseem M.; Tahir A.; Ahmad A.; Zhang B.; Li Z.";Architecture decisions in quantum software systems: An empirical study on Stack Exchange and GitHub;2025;Information and Software Technology;INFSOF;0;0;1;Context: Quantum computing provides a new dimension in computation, utilizing the principles of quantum mechanics to potentially solve complex problems that are currently intractable for classical computers. However, little research has been conducted about the architecture decisions made in quantum software development, which have a significant influence on the functionality, performance, scalability, and reliability of these systems. Objective: The study aims to empirically investigate and analyze architecture decisions made during the development of quantum software systems, identifying prevalent challenges and limitations by using the posts and issues from Stack Exchange and GitHub. Methods: We used a qualitative approach to analyze the obtained data from Stack Exchange Sites and GitHub projects — two prominent platforms in the software development community. Specifically, we collected data from 385 issues (from 87 GitHub projects) and 70 posts (from 3 Stack Exchange sites) related to architecture decisions in quantum software development. Results: The results show that in quantum software development (1) architecture decisions are articulated in six linguistic patterns, the most common of which are Solution Proposal and Information Giving, (2) the two major categories of architectural decisions are Implementation Decision and Technology Decision, (3) Software Development Tools are the most common application domain among the twenty application domains identified, (4) Maintainability is the most frequently considered quality attribute, and (5) Design Issues and High Error Rates are the major limitations and challenges that practitioners face when making architecture decisions in quantum software development. Conclusions: Our results show that the limitations and challenges encountered in architecture decision-making during the development of quantum software systems are strongly linked to the particular features (e.g., quantum entanglement, superposition, and decoherence) of those systems. These issues mostly pertain to technical aspects and need appropriate measures to address them effectively. © 2024 Elsevier B.V.;"Architecture decision; Empirical study; GitHub; Quantum software system; Stack Exchange";"Application programs; Quantum electronics; Software architecture; Software design; Software reliability; Applications domains; Architecture decisions; Complex problems; Empirical studies; Github; New dimensions; Quantum Computing; Quantum software system; Software-systems; Stack exchange; Quantum entanglement";English;Article;Primary Study;Evaluation research;0;Software Architecture;O estudo identifica padrões linguísticos usados em decisões arquiteturais, categoriza tipos de decisão, atributos de qualidade e domínios de aplicação no contexto do desenvolvimento de software quântico, com base em dados de 385 issues do GitHub e 70 postagens no Stack Exchange.;A formulação de decisões arquiteturais enfrenta obstáculos como problemas de design, altas taxas de erro e limitações na expressividade e justificativa das decisões, refletindo a complexidade e os requisitos únicos do desenvolvimento de sistemas de software quântico.;Reference architecture;System complexity
SCP0123;"Romero-Alvarez J.; Alvarado-Valiente J.; Moguel E.; Garcia-Alonso J.; Murillo J.M.";A Workflow for the Continuous Deployment of Quantum Services;2023;International Conference on Quantum Software;QSW;27;34;2;The rapid advancements in quantum computing have opened new possibilities for solving complex problems in various fields, including cryptography, optimization, and simulation. However, the current approaches to quantum computing often require a deep understanding of quantum hardware and low-level programming languages, making it difficult for software developers to create and deploy quantum services. This paper argues for the adaptation of Service-Oriented Computing principles to quantum computing, enabling a level of abstraction from hardware that allows developers to focus on application development. This will allow developers to create and deploy quantum services, similarly to how Service-Oriented Computing has made it easier to develop traditional software services. This paper presents a Continuous Deployment approach for quantum service development, which involves the generation and deployment of quantum services. To do that, we propose an extension of the OpenAPI specification to generate services implementing a quantum algorithm. To validate the feasibility of the proposed process, we use a variety of quantum algorithm implementations to test their generation and deployment of quantum services. © 2023 IEEE.;"Continuous Deployment; OpenAPI; Quantum Computing; Quantum Services; Quantum Software Development";"Quantum computers; Quantum theory; Complex problems; Continuous deployment; OpenAPI; Optimisations; Quantum algorithms; Quantum Computing; Quantum service; Quantum software development; Service oriented computing; Work-flows; Software design";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Operations;O estudo apresenta uma extensão da OpenAPI Specification e do OpenAPI Code Generator para suportar algoritmos quânticos, além de propor uma pipeline DevOps automatizada com GitHub Actions e Docker para geração e implantação de serviços quânticos encapsulados em APIs REST, validados com 20 algoritmos distintos em ambientes IBM e AWS.;A falta de padronização para desenvolvimento e entrega contínua de serviços quânticos, a complexidade de integração com múltiplos provedores e linguagens, e a dificuldade de encapsular e testar algoritmos quânticos em ambientes híbridos com confiabilidade e escalabilidade.;Tool support;"Lack of standardization; Integration challenges"
SCP0127;"Lemesheva N.; Antonenko H.; Halachev P.; Suprun O.; Tytarchuk Y.";"The impact of quantum computing on the development of algorithms and software; [El impacto de la computación cuántica en el desarrollo de algoritmos y software]";2024;Data and Metadata;Data. Metadata.;0;0;0;"Introduction: there is a great potential that the quantum computing can change the way of algorithms and software development more than classical computers. Thus, this article will try to focus on how algorithm design and software development can be affected by quantum computing as well as what possibilities could appear when quantum principles are implemented into traditional paradigms. This paper aims at identifying the impact of quantum computing on algorithm and software advancement, through a discussion of essential quantum algorithms, quantum languages, as well as the opportunities and challenges of quantum technologies. Method: an extensive literature review and theoretical investigation was also performed to investigate the foundational concepts of quantum computing and subsequent effects on algorithm and software engineering. Some of the research questions included exploring the contrast between classical and quantum algorithms, reviewing current literature on quantum programming languages, and delving into examples of real-life deployments of quantum algorithms cross numerous domains. Results: this paper shows that quantum computing brings qualitatively new paradigms in the algorithm design and function while the quantum algorithms such as Shor’s and Grover’s perform exponentially faster certain problems. Software development for quantum has brought the need to devise new frameworks of coding in light of probability in quantum circuit. It is also comforting to note that there is still effort being made although in its most embryonic form to create quantum programming languages like Qiskit and Cirq. Some of challenges include quantum decoherence; limited number of quantum hardware; and need for strong error correction processes. Conclusion: while there are currently relatively few quantum algorithms it is believed that the findings in this field have the ability to revolutionize algorithm and software design and subjects like cryptography, optimization and AI. However, trends in quantum computing show that the constraints to computational capabilities are likely to be lifted to allow creativity to develop the most powerful software solutions. © 2024; Los autores.";"Algorithm Development; Quantum Algorithms; Quantum Computing; Software Engineering";;English;Article;Secondary Study;0;Extensive literature review;The Software Engineering in General;O estudo apresenta uma análise comparativa entre algoritmos clássicos e quânticos, discute os impactos do paralelismo quântico e da superposição no design de algoritmos, descreve os benefícios e limitações das linguagens como Qiskit, Cirq e Q#, e sintetiza os principais desafios para desenvolvimento de software quântico, incluindo decoerência, necessidade de correção de erros e ausência de padronização.;A natureza probabilística da computação quântica, a escassez de hardware estável e escalável, a falta de padronização em linguagens e ferramentas de programação quântica, e a necessidade de novos paradigmas de desenvolvimento que considerem a correção de erros e a estrutura estocástica dos circuitos quânticos.;Empirical study;"Lack of standardization; Hardware limitations"
SCP0128;"Sánchez P.; Alonso D.";On the definition of quantum programming modules;2021;Applied Sciences (Switzerland);Applied Sciences (Switzerland);0;0;8;There are no doubts that quantum programming and, in general, quantum computing, is one of the most promising areas within computer science and one of the areas where most expectations are being placed in recent years. Although the days when reliable and affordable quantum computers will be available is still a long way off, the explosion of programming languages for quantum programming has grown exponentially in recent years. The software engineering community has been quick to react to the need to adopt and adapt well-known tools and methods for software development, and for the design of new ones tailored to this new programming paradigm. However, many key aspects for its success depend on the establishment of an appropriate conceptual framework for the conception and design of quantum programs. This article discusses the concept of module, key in the software engineering discipline, and establishes initial criteria for determining the cohesion and coupling levels of a module in the field of quantum programming as a first step towards a sound quantum software engineering. As detailed in the article, the conceptual differences between classical and quantum computing are so pronounced that the translation of classical concepts to the new programming approach is not straightforward. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.;"Cohesion; Design; Modularity; Quantum programming; Software engineering";;English;Article;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O artigo estabelece um conceito de módulo quântico como unidade básica de reutilização, define sete regras para sua construção — incluindo reversibilidade, encapsulamento, recuperação de qubits auxiliares e possibilidade de controle condicional — e adapta os conceitos clássicos de coesão e acoplamento para o contexto quântico, propondo níveis específicos como acoplamento por entrelaçamento e coesão funcional, sequencial, comunicacional e agrupada, além de oferecer modelos visuais e estruturas abstratas para apoiar o design modular de programas quânticos.;Os principais desafios envolvem a dificuldade de adaptação de abstrações clássicas para o paradigma quântico, a limitação da modularidade em algoritmos que expõem propriedades internas além da caixa preta, a necessidade de evitar o entrelaçamento externo a módulos para garantir reutilização segura, e a criação de ferramentas e linguagens que suportem a definição, parametrização e reutilização de módulos de forma agnóstica à plataforma quântica.;Empirical study;Tool support gap
SCP0132;"Barletta V.S.; Caivano D.; Pal A.";Integrating Security and Privacy in Quantum Software Engineering;2024;International Conference on Evaluation and Assessment in Software Engineering  ;EASE;538;547;0;In the dynamic landscape of Quantum Software Engineering (QSE), ensuring the integrity of sensitive data is critical, which stipulates integrating security and privacy measures during the Quantum Software Development Life Cycle (QDLC) rather than providing cost-inefficient post-production software fixes. This paper proposes a Quantum Privacy Knowledge Base (QPKB) and Quantum Privacy-Oriented Software Development (QPOSD) approach that integrates privacy and security protocols into quantum hybrid software development, complementing existing software development processes. QPKB is formalized as the interrelationship between five key elements: Quantum Privacy by Design principles, Quantum Privacy Design Strategies, Quantum Privacy Patterns, Quantum Bugs and Vulnerabilities, and Quantum Hybrid Context. The step-by-step methodology for QPOSD spans analysis, design, coding, verification and validation, and deployment phases. With the help of a scenario, we demonstrate how QPOSD can effectively integrate security and privacy imperatives in QDLC. This study acts as a starting point for serving operational guidelines for quantum development teams, providing strategies for integrating privacy and security measures into QSE practices. © 2024 ACM.;"Quantum Privacy by Design; Quantum Privacy Knowledge Base; Quantum Software Engineering; Security";"Cost engineering; Knowledge based systems; Life cycle; Network security; Sensitive data; Integrating security; Privacy measures; Quantum privacy; Quantum privacy by design; Quantum privacy knowledge base; Quantum software engineering; Security; Security and privacy; Security measure; Software design";English;Conference Paper;Primary Study;Proposal of solution;0;Software Security;O estudo apresenta uma metodologia estruturada e detalhada para incorporar segurança e privacidade ao desenvolvimento de software quântico híbrido, utilizando uma base de conhecimento composta por princípios de privacidade desde a concepção, estratégias de design, padrões de privacidade, e categorização de bugs e vulnerabilidades. Além disso, fornece um modelo prático de aplicação (QPOSD) que cobre todas as fases do ciclo de desenvolvimento — análise, design, codificação, verificação e implantação — e valida sua eficácia por meio de um cenário de transmissão de dados utilizando técnicas como distribuição de chaves quânticas (QKD).;Os principais desafios envolvem a falta de padrões formais para padrões de privacidade quântica (QPP), a dificuldade de aplicar a metodologia QPOSD em cenários reais devido à ausência de validação com equipes de desenvolvimento e hardware quântico reais, além da necessidade de novas ferramentas para análise de impacto de privacidade quântica. Também é destacada a complexidade de integrar tecnologias avançadas de privacidade quântica (como QKD, QRNG, homomorphic encryption) de forma otimizada e compatível com os sistemas existentes.;Process model;"Modeling difficulty; Quality assurance; Hardware limitations"
SCP0134;"Akbar M.A.; Khan A.A.; Shameem M.; Nadeem M.";Genetic model-based success probability prediction of quantum software development projects;2024;Information and Software Technology;INFSOF;0;0;4;Context: Quantum computing (QC) holds the potential to revolutionize computing by solving complex problems exponentially faster than classical computers, transforming fields such as cryptography, optimization, and scientific simulations. To unlock the potential benefits of QC, quantum software development (QSD) enables harnessing its power, further driving innovation across diverse domains. To ensure successful QSD projects, it is crucial to concentrate on key variables. Objective: This study aims to identify key variables in QSD and develop a model for predicting the success probability of QSD projects. Methodology: We identified key QSD variables from existing literature to achieve these objectives and collected expert insights using a survey instrument. We then analyzed these variables using an optimization model, i.e., Genetic Algorithm (GA), with two different prediction methods the Naïve Bayes Classifier (NBC) and Logistic Regression (LR). Results: The results of success probability prediction models indicate that as the QSD process matures, project success probability significantly increases, and costs are notably reduced. Furthermore, the best fitness rankings for each QSD project variable determined using NBC and LR indicated a strong positive correlation (rs=0.945). The t-test results (t = 0.851, p = 0.402>0.05) show no significant differences between the rankings calculated by the two methods (NBC and LR). Conclusion: The results reveal that the developed success probability prediction model, based on 14 identified QSD project variables, highlights the areas where practitioners need to focus more in order to facilitate the cost-effective and successful implementation of QSD projects. © 2023 The Author(s);"Genetic algorithm; Prediction model; Quantum computing (QC); Quantum software development (QSD); Variables";"Barium compounds; Cost effectiveness; Forecasting; Genetic programming; Logistic regression; Quantum computers; Software design; Key variables; Logistics regressions; Model-based OPC; Naive Bayes classifiers; Prediction modelling; Quantum Computing; Quantum software development; Software development projects; Variable; Genetic algorithms";English;Article;Primary Study;Evaluation research;0;Software Engineering Process;O trabalho desenvolve um modelo preditivo que calcula a probabilidade de sucesso de projetos de QSD com base em variáveis como escalabilidade, ferramentas padronizadas, recursos e habilidades especializadas, oferecendo suporte à tomada de decisão sobre alocação de custo e priorização de fatores críticos.;A ausência de ferramentas padronizadas, a escassez de recursos especializados e a dificuldade em integrar variáveis de custo e sucesso em modelos preditivos para QSD tornam essencial o uso de abordagens baseadas em algoritmos genéticos para apoiar decisões estratégicas na gestão de projetos quânticos.;Tool support;Modeling difficulty
SCP0136;Zhao J.;Towards An Architecture Description Language for Hybrid Quantum-Classical Systems;2024;International Conference on Quantum Software;QSW;19;23;0;The rapid development of quantum computing technology has opened new possibilities for solving complex problems beyond the capabilities of classical computing paradigms. However, combining quantum computing with classical systems to create Hybrid Quantum-Classical (HQC) software systems presents unique challenges that require novel approaches in software architecture. This paper proposes a foundation for developing Architecture Description Languages (ADLs) specifically for HQC systems. We aim to provide a robust framework for coherently describing, integrating, and analyzing quantum and classical computing elements. The paper discusses the design principles, methodology, and structural components of the architecture description languages and outlines future research directions.  © 2024 IEEE.;"architecture description language; hybrid quantum-classical system; Quantum computing; software architecture";"Computer architecture; Computer hardware description languages; Quantum electronics; Quantum optics; Architecture description languages; Classical computing; Classical systems; Complex problems; Computing paradigm; Computing technology; Hybrid quantum-classical system; Quantum Computing; Quantum-classical; Quantum-classical systems; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;0;Software Architecture;"O estudo fornece evidências empíricas de que o processo de transpilation pode introduzir ou modificar smells em circuitos quânticos, mesmo naqueles que originalmente não os apresentavam, sendo especialmente notável no caso do smell “Long Circuit”; também destaca a importância da escolha do conjunto de portas-alvo na mitigação desses efeitos.";Um dos principais desafios identificados é o impacto negativo que a transpilation pode ter na qualidade do código quântico, com alterações substanciais nas métricas utilizadas para detectar smells, exigindo novas abordagens de detecção e adaptação às restrições de hardware e gate sets.;Process model;Hardware limitations
SCP0138;De Stefano M.;An Empirical Study on the Current Adoption of Quantum Programming;2022;International Conference on Software Engineering;ICSE;310;312;1;"Quantum computing is no longer just a scientific curiosity; it is rapidly evolving into a commercially viable technology that has the potential to surpass the limitations of classical computation. As a result of this transition, a new discipline known as quantum software engineering has emerged, which is needed to describe unique methodologies for developing large-scale quantum applications. In the pursue of building this new body of knowledge, we undertake a mining study to elicit the purposes quantum programming is being used for, and steer further research. © 2022 IEEE.";;"Quantum computers; 'current; Body of knowledge; Empirical studies; Large-scales; Quantum applications; Quantum Computing; Quantum programming; Application programs";English;Conference Paper;Primary Study;Proposal of solution;0;Software Construction;O estudo propõe uma taxonomia de uso da programação quântica, com base na análise de 731 repositórios classificados em categorias como exercícios, hackathons, bibliotecas, ferramentas, ensino e pesquisa, revelando que a maioria dos projetos ainda é de caráter exploratório ou educacional.;A falta de projetos quânticos com finalidade de produção, a baixa colaboração entre desenvolvedores, e a necessidade de métodos, ferramentas e boas práticas que viabilizem o crescimento da área e o desenvolvimento de aplicações reais.;"Conceptual framework; Tool support; Education and training";"Tool support gap; Modeling difficulty"
SCP0142;"Ishikawa F.; Saito S.";Model-Based Framework for Continuous Adaptation and Evolution of Quantum-Classical Hybrid Systems;2024;International Conference on the Art, Science, and Engineering of Programming;Program. Companion - Proc. Int. Conf. Art, Sci., Eng. Program.;118;125;0;Although quantum computing has been attracting increasing attention, hardware restrictions are tight in current implementations. Intensive design exploration is therefore essential to match requirements, such as the problem scale and acceptable error rate, with potential designs to combine quantum computing and classical computing. The design decision made in this way is often fragile as it is sensitive to the problem scale as well as still evolving quantum services. We need continuous design decision, or adaptation and evolution, given changes in requirements or environments. In this paper, we present a framework for model-based engineering to support the continuous adaptation and evolution of quantum-classical hybrid systems. Modeling in our framework involves not only potential designs, but also rationale or evidence of design decision, which often requires simulation and experiments. This focus allows for tracing and analyzing whether the past decision is still valid or not, or whether there is uncertainty and we need further simulation and experiments. The usage of the framework is demonstrated with an example problem from steel manufacturing. © 2024 Copyright held by the owner/author(s).;"DevOps; Hybrid Quantum Computing; Models@run.time; Quantum Software Engineering; Self-Adaptive Systems; Services Computing";"Adaptive systems; Design; Quantum computers; Quantum optics; Uncertainty analysis; Design decisions; Hybrid quantum computing; Model@run.; Problem scale; Quantum Computing; Quantum software engineering; Quantum-classical; Self-adaptive system; Service computing; Time; Software engineering";English;Conference Paper;Primary Study;Proposal of solution;0;Software Construction;O trabalho oferece evidências empíricas de que o processo de transpilation pode introduzir ou modificar code smells em circuitos quânticos, e que diferentes conjuntos de portas lógicas (gate sets) têm impacto direto na presença e severidade desses smells. Também reforça a necessidade de considerar a transpilation na detecção automática de problemas de qualidade em software quântico.;Os principais desafios envolvem a necessidade de desenvolver mecanismos robustos para detectar e mitigar problemas de qualidade em circuitos quânticos após a transpilation, considerando a diversidade de hardware e conjuntos de portas suportadas pelas plataformas quânticas atuais.;Process model;Hardware limitations
SCP0149;"Zhang L.; Miranskyy A.";Automated Flakiness Detection in Quantum Software Bug Reports;2024;International Conference on Quantum Computing and Engineering;QCE;179;181;0;A flaky test yields inconsistent results upon repetition, posing a significant challenge to software developers. An extensive study of their presence and characteristics has been done in classical computer software but not quantum computer software. In this paper, we outline challenges and potential solutions for the automated detection of flaky tests in bug reports of quantum software. We aim to raise awareness of flakiness in quantum software and encourage the software engineering community to work collaboratively to solve this emerging challenge. © 2024 IEEE.;"flaky tests; quantum software engineering; quantum software testing";"Computer aided software engineering; Quantum electronics; Quantum optics; Automated detection; Bug reports; Engineering community; Flaky test; Quanta computers; Quantum software engineering; Quantum software testing; Software bug; Software developer; Software testings; Software testing";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O estudo apresenta um framework de engenharia baseada em modelos (MDE) que permite registrar e reavaliar decisões arquiteturais em sistemas quântico-clássicos com base em evidências empíricas, simulações e requisitos em evolução, apoiando um ciclo contínuo de adaptação, validação de viabilidade e reconfiguração arquitetural com uso de técnicas como decomposição lagrangiana e workflows híbridos.;A fragilidade das decisões arquiteturais diante de alterações no escopo do problema e na infraestrutura quântica, a dificuldade em estimar e rastrear a viabilidade de designs sob restrições de hardware e qualidade, e a necessidade de ferramentas que integrem experimentação, modelagem e raciocínio para suportar evolução contínua de sistemas quântico-clássicos.;"Conceptual framework; Reference architecture; Requirements engineering";"Hardware limitations; Need for empirical validation"
SCP0152;Hyrynsalmi S.;Quantum Software Business: A literature study of business aspects of quantum computing;2023;International Conference on Engineering;Proc. Int. Conf. Eng., Technol., Innov.: Shap. Future, ICE;0;0;0;The short history of the computing discipline has been characterised by constant technological evolution and drastic changes caused by it. Yet, in the near future, the next significant technological leap is expected to take place. The recent development in the field of quantum computing and in the building of quantum computers have been remarkable. However, the foreseeable new technology will also provide changes to business and society surrounding it. While there is an increasing interest towards the quantum computing technology, its societal impacts as well as quantum software engineering, a less work has been done to understand the business aspects of quantum computers and software. This study summarises the academic discussion in the topic via an analysis of collected articles (n=19). A systematic literature study was used in the primary data collection. The results of the primary study analysis shows focus Quantum-Computing-as-a-Service (QCaaS) delivery model and concerns regarding the development of the field. This study argues that for enabling sustainable development of the quantum computing industry, a more focus should be put on searching a commercially viable killer app of quantum computing.  © 2023 IEEE.;"business aspect; killer app; Quantum computing; quantum software business; systematic literature review";"Quantum computers; Business aspects; Computing disciplines; Killer app; Literature studies; Quanta computers; Quantum Computing; Quantum software business; Short history; Software business; Systematic literature review; Application programs";English;Conference Paper;Secondary Study;0;Systematic;Software Engineering Economics;O estudo sintetiza o panorama acadêmico sobre o negócio de software quântico, destacando o modelo de entrega Quantum-Computing-as-a-Service (QCaaS) como o caminho mais viável para a comercialização inicial, identificando a ausência de modelos de precificação e propondo a busca por um killer app como essencial para o avanço do setor.;A falta de um aplicativo matador (killer app) que justifique economicamente a adoção em larga escala da computação quântica, a escassez de modelos de negócios viáveis para software e serviços quânticos, e a ausência de pesquisas voltadas ao impacto comercial das soluções quânticas são os principais desafios para a consolidação da indústria.;Reference architecture;Modeling difficulty
SCP0156;"Badrike K.; Dalvi A.S.; Mazurek F.; D'Onofrio M.; Whitlow J.; Chen T.; Phiri S.; Riesebos L.; Brown K.R.; Mueller F.";QisDAX: An Open Source Bridge from Qiskit to Trapped-Ion Quantum Devices;2023;International Conference on Quantum Computing and Engineering;QCE;825;836;0;Quantum computing has become widely available to researchers via cloud-hosted devices with different technologies using a multitude of software development frameworks. The vertical stack behind such solutions typically features quantum language abstraction and high-level translation frameworks that tend to be open source, down to pulse-level programming. However, the lower-level mapping to the control electronics, such as controls for laser and microwave pulse generators, remains closed source for contemporary commercial cloud-hosted quantum devices. One exception is the ARTIQ (Advanced Real-Time Infrastructure for Quantum physics) open-source library for trapped-ion control electronics. This stack has been complemented by the Duke ARTIQ Extensions (DAX) to provide modularity and better abstraction. It, however, remains disconnected from the wealth of features provided by popular quantum computing languages. This paper contributes QisDAX, a bridge between Qiskit and DAX that fills this gap. QisDAX provides interfaces for Python programs written using IBM's Qiskit and transpiles them to the DAX abstraction. This allows users to generically interface to the ARTIQ control systems accessing trapped-ion quantum devices. Consequently, the algorithms expressed in Qiskit become available to an open-source quantum software stack. This provides the first open-source, end-to-end, full-stack pipeline for remote submission of quantum programs for trapped-ion quantum systems in a non-commercial setting. © 2023 IEEE.;"open source quantum software stack; Quantum computing; transpilation";"Abstracting; High level languages; Open source software; Open systems; Program translators; Quantum optics; Software design; Translation (languages); Control electronics; Open source quantum software stack; Open-source; Quantum Computing; Quantum device; Quantum physics; Real time infrastructure; Software stacks; Transpilation; Trapped ion; Trapped ions";English;Conference Paper;Primary Study;Evaluation research;0;Software Construction;O trabalho introduz um algoritmo eficiente para reestruturar camadas de instruções quânticas em circuitos visando maximizar paralelismo sob restrições de recursos.;A execução paralela de circuitos quânticos precisa considerar a limitação de recursos físicos e a dependência entre qubits, exigindo algoritmos que otimizem camadas de execução sem violar restrições operacionais.;Tool support;Other technical limitation
SCP0157;"Miranskyy A.; Khan M.; Faye J.P.L.; Mendes U.C.";Quantum computing for software engineering: prospects;2022;International Workshop on Quantum Programming for Software Engineering;QP4SE;22;25;7;Quantum computers (QCs) are maturing. When QCs are powerful enough, they may be able to handle problems in chemistry, physics, and finance that are not classically solvable. However, the applicability of quantum algorithms to speed up Software Engineering (SE) tasks has not been explored. We examine eight groups of quantum algorithms that may accelerate SE tasks across the different phases of SE and sketch potential opportunities and challenges.  © 2022 ACM.;"quantum computing; software engineering";"Quantum theory; Qubits; Engineering tasks; Quanta computers; Quantum algorithms; Quantum Computing; Speed up; Software engineering";English;Conference Paper;Primary Study;Opinion papers;0;Software Design;O artigo apresenta uma análise exploratória que conecta algoritmos quânticos — como solucionadores de equações lineares, otimizadores combinatórios e técnicas de machine learning — a tarefas específicas de engenharia de software, como testes dinâmicos, análise de logs e planejamento de releases, destacando os ganhos potenciais de desempenho e os horizontes de aplicabilidade futura.;Os principais desafios incluem a limitação atual do hardware quântico para resolver problemas práticos em larga escala, a complexidade na preparação e carregamento dos dados clássicos para execução em computadores quânticos, e a ausência de implementações robustas para muitas das técnicas propostas, o que adia a adoção ampla por engenheiros de software.;Empirical study;Hardware limitations
SCP0158;"De Stefano M.; Di Nucci D.; Palomba F.; Taibi D.; De Lucia A.";Towards Quantum-algorithms-as-a-service;2022;International Workshop on Quantum Programming for Software Engineering;QP4SE;7;10;1;Quantum computing is an emerging field of high interest. Many companies have started to work on developing more powerful and stable quantum computers. However, developers still struggle to master the art of programming with a quantum computer. One of the major challenges faced is the integration of quantum parts of a system with the classical one. This paper proposes a novel development model called Quantum-Algorithms-as-a-Service (QAaaS). This new model aims to allow developers to abstract the quantum components away from the design of the software they are building. The model leverages Software-as-a-Service and Function-as-a-Service to support multiple quantum cloud providers and run their algorithms regardless of the underlying hardware.  © 2022 ACM.;"QaaS; Quantum Computing; Quantum Software Engineering; XaaS";"Arts computing; Computer programming; Quantum computers; Software engineering; Web services; Cloud providers; Development model; Qaas; Quanta computers; Quantum algorithms; Quantum Computing; Quantum software engineering; Software-as-a- Service (SaaS); Xaas; Software as a service (SaaS)";English;Conference Paper;Primary Study;Proposal of solution;0;Software Architecture;O artigo propõe um novo modelo de desenvolvimento que combina os conceitos de Software-as-a-Service (SaaS) e Function-as-a-Service (FaaS) para encapsular algoritmos quânticos em APIs acessíveis de forma agnóstica à plataforma, fornecendo um framework com quatro componentes principais — API Gateway, orquestrador, tradutor de meta-modelos e provedor quântico —, e apresenta uma agenda de pesquisa para sua implementação e validação com base em estudos de caso.;Os principais desafios incluem o lock-in de fornecedor, a instabilidade e constante evolução das APIs de frameworks quânticos, a complexidade na transpiração de circuitos entre diferentes hardwares, as dificuldades na orquestração entre partes clássicas e quânticas e a necessidade de mecanismos robustos de testes, tanto para integração quanto para validação das execuções em múltiplos backends quânticos.;"Conceptual framework; Tool support; Research agenda";"Integration challenges; Quality assurance; Hardware limitations"
SCP0161;"Zhao P.; Zhao J.; Ma L.";Identifying Bug Patterns in Quantum Programs;2021;International Workshop on Quantum Software Engineering;QSE;16;21;29;Bug patterns are erroneous code idioms or bad coding practices that have been proved to fail time and time again, which are usually caused by the misunderstanding of a programming language's features, the use of erroneous design patterns, or simple mistakes sharing common behaviors. This paper identifies and categorizes some bug patterns in the quantum programming language Qiskit and briefly discusses how to eliminate or prevent those bug patterns. We take this research as the first step to provide an underlying basis for debugging and testing quantum programs.  © 2021 IEEE.;"Qiskit; quantum bug patterns; Quantum program debugging; quantum software testing";"Computer programming languages; Software engineering; Design Patterns; Quantum programming languages; Program debugging";English;Conference Paper;Primary Study;Opinion papers;0;Software Testing;O artigo fornece a primeira catalogação sistemática de padrões de bugs em programas escritos com Qiskit, cobrindo casos como inicialização incorreta de registradores, uso de portas não reconhecidas, medições excessivas, operações inválidas após medição e desalocação insegura, com exemplos práticos e recomendações de prevenção — oferecendo uma base fundamental para ferramentas futuras de análise estática e depuração de software quântico.;Os principais desafios envolvem a dificuldade de adaptar conceitos clássicos de testes e depuração ao paradigma quântico, a falta de entendimento dos efeitos das operações quânticas sobre os qubits após medição, e a carência de ferramentas que explorem os padrões de bugs com base em análise estática, o que limita a eficácia de práticas de manutenção e evolução de software quântico.;Tool support;Quality assurance
SCP0163;"Sepúlveda S.; Cravero A.; Fonseca G.; Antonelli L.";Systematic Review on Requirements Engineering in Quantum Computing: Insights and Future Directions;2024;Electronics (Switzerland);Electronics (Switzerland);0;0;4;Context: Quantum software development is a complex and intricate process that diverges significantly from traditional software development. Quantum computing and quantum software are deeply entangled with quantum mechanics, which introduces a different level of abstraction and a deep dependence on quantum physical properties. The classical requirements engineering methods must be adapted to encompass the essential quantum features in this new paradigm. Aim: This study aims to systematically identify and analyze challenges, opportunities, developments, and new lines of research in requirements engineering for quantum computing. Method: We conducted a systematic literature review, including three research questions. This study included 105 papers published from 2017 to 2024. Results: The main results include the identification of problems associated with defining specific requirements for quantum software and hybrid system requirements. In addition, we identified challenges related to the absence of standards for quantum requirements engineering. Finally, we can see the advances in developing programming languages and simulation tools for developing software in hybrid systems. Conclusions: This study presents the challenges and opportunities in quantum computing requirements engineering, emphasizing the need for new methodologies and tools. It proposes a roadmap for future research to develop a standardized framework, contributing to theoretical foundations and practical applications. © 2024 by the authors.;"quantum computing; requirements engineering; software engineering; systematic review";;English;Article;Secondary Study;0;Systematic Review;Software Requirements;O artigo sistematiza 105 estudos primários para identificar os principais desafios e lacunas na engenharia de requisitos para computação quântica, propõe uma taxonomia de desafios com base na norma ISO/IEC 25010, apresenta um mapeamento dos avanços atuais e sugere doze linhas de pesquisa futuras, como metodologias específicas para QRE, ferramentas de validação de requisitos quânticos, técnicas de modelagem híbrida e programas de formação específicos para engenheiros de requisitos em computação quântica.;Os desafios centrais envolvem a dificuldade de especificar requisitos diante das propriedades quânticas como superposição e entrelaçamento, a integração entre sistemas clássicos e quânticos, a ausência de metodologias padronizadas para QRE, a necessidade de atualizações contínuas dos requisitos, lacunas educacionais entre engenheiros e requisitos específicos de segurança em ambientes quânticos, além da dificuldade de validação e verificação dos requisitos devido à natureza probabilística dos algoritmos quânticos.;"Conceptual framework; Process model; Tool support";"Integration challenges; Modeling difficulty; Quality assurance; Classical-quantum separation"
SCP0167;"Cobb A.; Schneider J.-G.; Lee K.";Towards Higher-Level Abstractions for Quantum Computing;2022;Australasian Computer Science Week;ACSW;115;124;6;Quantum Computing (QC) has emerged as a field of ever-increasing activity as it promises to revolutionize computation and enable the solution of computational problems that we (realistically) cannot solve with Classical Computing to date. However, existing quantum programming environments mostly require an in-depth understanding of the basic QC building blocks, that is, quantum states, superposition, entanglement and measurement as well as the changing of quantum states using basic quantum gates. The present state of quantum programming reminds us of how Classical Computing was about 70 years ago when computing machines such as the ENIAC required significant effort to program solely using very basic digital building blocks. Over the decades, though, increasingly higher-level abstractions have been created on top of the basic building blocks of Classical Computing and made computation much more accessible and wide-spread. In order to make Quantum Computing more accessible, we argue that Software Engineering for QC needs to embark on a similar journey and create abstractions that shield developers from the basic QC building blocks as much as possible so that they can focus their attention on solving problems and less on how to manipulate quantum states using quantum circuits. Based on our experience of developing a scalable quantum n-queens solver, this paper aims to formulate recommendations for raising the level of abstraction in Quantum Software Engineering.  © 2022 ACM.;"Programming Abstractions; Quantum Computing; Quantum Software Engineering";"Abstracting; Computer programming; Quantum computers; Quantum entanglement; Quantum optics; Building blockes; Classical computing; Computational problem; High-level abstraction; Higher-level abstraction; Programming abstractions; Quantum Computing; Quantum programming; Quantum software engineering; Quantum state; Software engineering";English;Conference Paper;Primary Study;Proposal of solution;0;Software Design;O estudo apresenta um gerador de código quântico para o problema das n-rainhas como prova de conceito de uma abordagem baseada em abstrações de alto nível para desenvolvimento quântico. Ao demonstrar a escalabilidade e os desafios práticos da geração automática de circuitos, contribui para a discussão sobre a necessidade de ferramentas de desenvolvimento que escondam a complexidade dos blocos fundamentais da computação quântica, promovendo acessibilidade à engenharia de software quântico.;Os principais desafios identificados incluem a elevada complexidade exigida dos desenvolvedores para compreender e manipular qubits individualmente, a falta de ferramentas de abstração e depuração em níveis mais altos, e as limitações técnicas dos simuladores quânticos disponíveis para experimentos com circuitos grandes, exigindo abordagens como processamento em lotes e técnicas híbridas.;Tool support;Modeling difficulty
SCP0168;"Jimnez-Navajas L.; Bhler F.; Leymann F.; Prez-Castillo R.; Piattini M.; Vietz D.";QUANTUM SOFTWARE DEVELOPMENT: A SURVEY;2024;Quantum Information and Computation;Quantum Inf. Comput.;609;642;0;Over the last few years, quantum computing has been growing at an exponential pace. Every day, new techniques, frameworks, modeling, and programming languages are emerging that aim to facilitate the development of quantum software, which is key to achieving the promising applications of quantum computing. However, which of these are actively used and the degree of satisfaction of researchers and developers regarding these quantum software frameworks and languages is not known. To address this, we conducted a survey to characterize which modeling tools and which quantum programming languages are used during the quantum software lifecycle. Researchers in academia and industry developers were surveyed, and a total of 57 responses were collected. The results indicate that during quantum software development, some models and diagrams are used to guide development. In addition, the survey results show what quantum programming languages are the most used alongside the classical programming languages employed to build hybrid programs, among other important insights. The implications of this survey are: (i) to find out what the current trends are within quantum software development and (ii) to find out what the needs are of quantum software developers with respect to current modeling and programming languages and tools. © Rinton Press.;"Hybrid Information Systems; Quantum Computing; Quantum Software Development; Survey";"Application programs; Quantum computers; Quantum optics; Software design; Degree of satisfaction; Exponentials; Framework models; Hybrid information system; Modelling tools; Quantum Computing; Quantum programming languages; Quantum software development; Software frameworks; Software languages; Modeling languages";English;Article;Secondary Study;0;Survey;Software Design;O trabalho fornece uma visão abrangente e atualizada sobre o estado da prática no desenvolvimento de software quântico, revelando as linguagens mais utilizadas (como Qiskit, OpenQASM e Cirq), ferramentas de modelagem aplicadas (como UML e fluxogramas), e características arquiteturais predominantes (como aplicações monolíticas). A pesquisa destaca também o papel da modelagem em diferentes fases do ciclo de vida e as abordagens de teste utilizadas para aplicações híbridas, evidenciando as práticas mais comuns e lacunas existentes.;Entre os principais desafios identificados estão a ausência de ferramentas maduras para a operação de software quântico, a escassez de tecnologias de orquestração e conversão de linguagens, e a necessidade urgente de maior suporte à modelagem nas fases de arquitetura, implementação e teste, especialmente para aplicações híbridas que combinam software clássico e quântico.;"Tool support; Role definition; Reference architecture";"Tool immaturity; Quality assurance"
SCP0169;"Ali S.; Yue T.";On the Need of Quantum-Oriented Paradigm;2023;International Workshop on Quantum Programming for Software Engineering;QP4SE;17;20;3;Since the invention of Quantum Computing (QC) in the 1980s, substantial claims about QC's ability to solve computational problems of unparalleled complexity have emerged. However, forty years later, no significant real-world QC applications exist. Indeed, the availability of small-scale noisy quantum computers is to blame. Still, simultaneously, the programming of quantum computers is too close to quantum hardware, requiring software engineers with specialized backgrounds to build QC applications and limiting the maximum exploitation of QC's potential. Thus, there is a need for an abstract yet intuitive quantum-oriented paradigm (QOP) for building QC applications, similar to the object-oriented paradigm established in the 1960s for classical computers that laid the foundations of modern programming and modeling languages for classical computers. Unfortunately, such a QC paradigm doesn't exist. Thus, we foresee the need to build a novel QOP based on which future quantum programming and modeling languages shall be developed. Such QOP shall enable users with diverse backgrounds (e.g., computer scientists, software engineers, and physicists) to build QC applications cost-effectively, intuitively, and independently of low-level quantum mechanics characteristics (e.g., superposition and entanglement). This paper discusses the emerging work of QOP and presents research directions that the software engineering and programming communities can follow to build a successful QOP.  © 2023 ACM.;"modeling solutions; programming paradigms; quantum software; quantum software development";"Application programs; Computer systems programming; Object oriented programming; Quantum computers; Quantum entanglement; Software design; Computational problem; Computing applications; Model solution; Programming paradigms; Quanta computers; Quantum Computing; Quantum software; Quantum software development; Real-world; Small scale; Modeling languages";English;Conference Paper;Primary Study;Opinion papers;0;Software Engineering Models and Methods;O trabalho contribui ao estabelecer uma visão estruturada sobre a necessidade de um novo paradigma de programação e modelagem voltado para a computação quântica, abordando aspectos como encapsulamento, abstração, modularidade e independência de plataforma. Essa proposta visa tornar o desenvolvimento de software quântico mais acessível, eficiente e alinhado com as boas práticas da engenharia de software, ao mesmo tempo em que respeita as particularidades da mecânica quântica.;Os principais desafios estão na criação de mecanismos formais de encapsulamento e abstração que respeitem princípios quânticos como o não-clonamento, na modularização de algoritmos quânticos frente à complexidade da interação entre qubits, e na definição de uma infraestrutura independente de hardware quântico, o que requer a separação entre lógica de negócios e dependências de plataforma.;Tool support;"Modeling difficulty; Hardware limitations"
SCP0172;"Gemeinhardt F.; Garmendia A.; Wimmer M.; Wille R.";A Model-Driven Framework for Composition-Based Quantum Circuit Design;2024;Transactions on Quantum Computing;TQC;0;0;0;Quantum programming languages support the design of quantum applications. However, to create such programs, one needs to understand the fundamental characteristics of quantum computing and quantum information theory. Furthermore, quantum algorithms frequently make use of abstract operations with a hidden low-level realization (e.g., Quantum Fourier Transform). Thus, turning from elementary quantum operations to a higher-level view of quantum circuit design not only reduces the development effort but also lowers the entry barriers for non-quantum computing experts.To this end, this article proposes a modeling language and design framework for quantum circuits. This allows the definition of composite operators to advocate a higher-level quantum algorithm design, together with automated code generation for the circuit execution. To demonstrate the benefits of the proposed approach, coined Composition-based Quantum Circuit Designer, we applied it for realizing the Quantum Counting algorithm and the Quantum Approximate Optimization Algorithm. Our evaluation results show that, compared to an existing state-of-the-art editor, the proposed approach allows for the realization of both quantum algorithms on a high level with a substantially reduced development effort. In particular, the proposed approach shows constant scaling when increasing the size of the investigated quantum circuits and a lower change criticality when evolving existing quantum circuits.  © 2024 Copyright held by the owner/author(s).;"model-driven engineering; quantum circuits; Quantum computing; quantum software engineering; quantum software languages";"High level languages; Integrated circuit design; Printed circuit design; Quantum electronics; Quantum optics; Systems analysis; Model-driven; Model-driven Engineering; Quantum algorithms; Quantum circuit; Quantum circuit design; Quantum Computing; Quantum programming languages; Quantum software engineering; Quantum software language; Software languages; Quantum computers";English;Article;Primary Study;Evaluation research;0;Software Design;O trabalho apresenta o CoQuaDe, uma linguagem de modelagem extensível e um framework para projetar circuitos quânticos em alto nível de abstração com suporte à definição de operações compostas reutilizáveis. A proposta permite separar a sintaxe dos circuitos da definição das operações quânticas, viabilizando bibliotecas customizadas e independentes da plataforma. Além disso, a avaliação empírica com os algoritmos Quantum Counting e QAOA mostrou que o framework reduz significativamente o esforço de desenvolvimento, melhora a modularidade e facilita a evolução dos circuitos.;Entre os principais desafios estão a complexidade de modelar operações quânticas iterativas de forma expressiva e genérica, a necessidade de padronizar bibliotecas reutilizáveis para diferentes domínios e a limitação de ferramentas atuais quanto à geração automática de código e definição de operações compostas configuráveis. O trabalho também destaca a importância de estender o suporte a diferentes linguagens de programação quântica e realizar estudos de usabilidade para validar sua aplicabilidade em larga escala.;"Conceptual framework; Tool support";"Tool support gap; System complexity"
SCP0174;"Scheerer M.; Klamroth J.; Garhofer S.; Knable F.; Denninger O.";Experiences in Quantum Software Engineering;2023;International Parallel and Distributed Processing Symposium Workshops;IEEE Int. Parallel Distrib. Process. Symp. Workshops, IPDPSW;552;559;1;The field of Quantum Computing (QC) is increasingly becoming applicable for a wide range of computationally intensive problems. Especially Variational Quantum Algorithms (VQA) are promising as they allow dealing with the practical challenges of current quantum devices (also referred to as Noisy Intermediate-Scale Quantum devices). However, developing VQA-based solutions is not a straightforward process but involves several development phases, each with different design decisions and implications. In this paper, we share experiences made in developing VQA-based solutions for two different industrial case studies. Based on the solutions, we extracted five generic development phases quantum engineers must take into consideration when engineering quantum solutions. We have embedded the phases in a model (i.e. a phase model) to show their natural order and to illustrate the phases that require more development iterations. The main objective of this paper is not only to share and discuss our findings and experiences but also to provide the phase model as a starting point or guideline to structure the development process.  © 2023 IEEE.;"quantum computing; quantum development model; Quantum software engineering";"Quantum computers; Quantum theory; 'current; Computationally intensive problems; Development model; Development phasis; Phase model; Quantum algorithms; Quantum Computing; Quantum development model; Quantum device; Quantum software engineering; Software engineering";English;Conference Paper;Primary Study;Personal experience papers;0;Software Engineering Process;O artigo propõe um modelo de cinco fases genéricas — definição do problema, seleção do algoritmo quântico, implementação, refinamento (fine-tuning) e pós-processamento (backpropagation) — para orientar o desenvolvimento de soluções quânticas baseadas em VQA, demonstrando sua aplicabilidade em dois estudos de caso industriais e ressaltando a natureza iterativa de algumas etapas.;Os principais desafios envolvem a escolha apropriada da formalização matemática do problema, a seleção do algoritmo quântico mais eficaz, o ajuste de hiperparâmetros em ambientes ruidosos (NISQ) e a necessidade de abordagens experimentais rápidas como prototipação para lidar com incertezas e limitações práticas dos dispositivos quânticos atuais.;Process model;Other technical limitation
SCP0177;"Melnikov A.; Kordzanganeh M.; Alodjants A.; Lee R.-K.";Quantum machine learning: from physics to software engineering;2023;Advances in Physics: X;Adv. Phys.: X;0;0;50;Quantum machine learning is a rapidly growing field at the intersection of quantum technology and artificial intelligence. This review provides a two-fold overview of several key approaches that can offer advancements in both the development of quantum technologies and the power of artificial intelligence. Among these approaches are quantum-enhanced algorithms, which apply quantum software engineering to classical information processing to improve keystone machine learning solutions. In this context, we explore the capability of hybrid quantum-classical neural networks to improve model generalization and increase accuracy while reducing computational resources. We also illustrate how machine learning can be used both to mitigate the effects of errors on presently available noisy intermediate-scale quantum devices, and to understand quantum advantage via an automatic study of quantum walk processes on graphs. In addition, we review how quantum hardware can be enhanced by applying machine learning to fundamental and applied physics problems as well as quantum tomography and photonics. We aim to demonstrate how concepts in physics can be translated into practical engineering of machine learning solutions using quantum software. © 2023 The Author(s). Published by Informa UK Limited, trading as Taylor & Francis Group.;"graph theory; machine learning; photonic quantum computing; quantum and quantum-inspired algorithms; Quantum information and computing; quantum machine learning; quantum neural networks; quantum technologies; quantum tomography; quantum walks; reinforcement learning; variational quantum circuits";;English;Article;Secondary Study;0;Survey;The Software Engineering in General;O artigo contribui com uma revisão detalhada dos modelos, arquiteturas e desafios em QML, destacando avanços em redes neurais quânticas, estratégias de codificação de dados, teoria de aprendizado, tomografia quântica, computação fotônica e modelos híbridos, além de apresentar um ecossistema projetado para orientar o desenvolvimento da área na próxima década.;Os principais desafios incluem a ausência de demonstrações práticas de vantagem quântica, a dificuldade de parametrização eficiente de redes neurais quânticas, a escassez de fundamentação teórica para modelos híbridos clássico-quânticos, e a limitação de métodos de otimização escaláveis para redes com bilhões de parâmetros e milhões de qubits.;"Reference architecture; Collaboration support";Modeling difficulty
SCP0179;"Gallardo J.Z.; Moguel E.; Canal C.; Garcia-Alonso J.";Quirk+: A Tool for Quantum Software Development Based on Quirk;2024;International Conference on Software Analysis, Evolution and Reengineering ;SANER;151;158;0;Quantum computing is becoming increasingly relevant. Numerous research efforts are being carried out to improve quantum computers by increasing the number of qubits in their processors, mitigating noise, etc. However, the tools that exist to program these computers are not advancing at the same speed. Therefore, in this work, we propose Quirk+, a quantum circuit development tool based on Quirk. We have implemented improvements over Quirk such as the inclusion of a custom gate importer/exporter, a running circuit inspector, a translator to qasm and vice-versa, as well as other interface usability improvements. Tools such as the one we propose in this paper will facilitate the work of quantum software developers, as well as break down the barriers to access to this type of programming for classical software developers. ©2024 IEEE.;"Circuit simulators; Quantum Composer; Quantum computing; Quirk";"Integrated circuit design; Program translators; Quantum electronics; Quantum optics; Software design; Circuit development; Circuit simulators; Development tools; Quanta computers; Quantum circuit; Quantum composer; Quantum Computing; Quirk; Research efforts; Software developer; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;0;Software Construction;O artigo contribui com o desenvolvimento do Quirk+, uma ferramenta de apoio ao desenvolvimento de circuitos quânticos, que melhora significativamente a experiência dos desenvolvedores ao permitir a visualização passo a passo da execução do circuito (debugger), facilitar o intercâmbio com outras plataformas por meio de tradução para QASM e promover a reutilização e edição de componentes modulares (portas customizadas). Ao democratizar o uso de simuladores quânticos e melhorar a usabilidade, o Quirk+ aproxima a computação quântica dos desenvolvedores de software clássico.;Os principais desafios discutidos envolvem a ausência de padronização entre plataformas de desenvolvimento quântico, a limitação de ferramentas existentes em oferecer interfaces intuitivas e recursos avançados de edição, e a complexidade de integrar funcionalidades como depuração, modularização e interoperabilidade com linguagens como QASM em um ambiente acessível a desenvolvedores iniciantes em computação quântica.;Tool support;Lack of standardization
SCP0180;"Exman I.; Shmilovich A.T.";Quantum Software Models: The Density Matrix for Classical and Quantum Software Systems Design;2021;International Workshop on Quantum Software Engineering;QSE;1;6;5;Linear Software Models enable rigorous linear algebraic procedures for modular design of classical software systems. These procedures apply a spectral approach to matrix representations-e.g. the Laplacian-of the software system. Recent intensive research efforts towards quantum computers have increased expectations that quantum computing could in due time materialize as a practical alternative to classical computing. It is reasonable to inquire about quantum software desirable features and prepare in advance modular design procedures for quantum software systems. However, it does not make sense to have two totally separate procedures for modular design, one for classical software systems and another for quantum software systems. This paper claims that there should be just a single unified and rigorous design procedure for both classical and quantum software systems. Our common design procedure starting point for both classical and quantum software systems is Von Neumann's quantum notion of Density Operator and its Density Matrix representation. This paper formulates and demonstrates modular design in terms of projection operators obtained from a design Density Matrix and shows their equivalence to the Linear Software Models results of the Laplacian matrix spectrum for the classical case. The application in practice of the design procedure for both classical and quantum software is illustrated by case studies.  © 2021 IEEE.;"Density Matrix; Laplacian Matrix; Quantum Software Models; Software Design";"Design; Laplace transforms; Matrix algebra; Quantum computers; Quantum theory; Classical computing; Density operators; Desirable features; Intensive research; Laplacian matrices; Matrix representation; Projection Operator; Software systems designs; Application programs";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;"O trabalho apresenta um modelo matemático baseado em álgebra linear e matrizes densidade que permite projetar a modularidade de sistemas de software clássicos e quânticos de forma unificada; ao invés de adotar abordagens distintas, o modelo utiliza operadores de projeção sobre a matriz densidade para identificar os módulos estruturais do sistema, aplicando o método tanto a diagramas de classes quanto a circuitos quânticos, incluindo um estudo de caso com o algoritmo de busca de Grover.";Os principais desafios destacados são a ausência de uma metodologia formal comum para o design de software quântico e clássico, a necessidade de representar adequadamente estruturas hierárquicas e modulares em circuitos quânticos, e a transição entre abordagens clássicas e quânticas de maneira integrada, o que exige ferramentas matemáticas robustas que sustentem tanto a análise quanto a implementação prática de sistemas híbridos.;"Process model; Empirical study";Modeling difficulty
SCP0183;"Mykhailova M.; Soeken M.";Testing quantum programs using Q# and Microsoft quantum development kit;2021;International Workshop on Quantum Software Engineering and Technology;QSET;81;88;5;As the quantum software matures, the quantum codebases grow both in size and in complexity, and so does the task of testing them and verifying their correctness. In this paper we show how to test and validate several common types of quantum programs written in the quantum programming language Q# using the tools provided by the Microsoft Quantum Development Kit. Our approach uses multiple simulators and library tools for program testing and resource estimation, performing these steps before running the programs on quantum hardware. The demonstrated approach is illustrated with code examples from the Quantum Katas, a collection of quantum programming tutorials that provide immediate feedback for the learner’s solution. © 2021 Copyright for this paper by its authors.;"Microsoft quantum development kit; Q#; Quantum programming; Quantum software engineering; Quantum software testing";"MicroSoft; Microsoft quantum development kit; Program testing; Q#; Quantum programming; Quantum programming languages; Quantum software engineering; Quantum software testing; Resource estimation; Software testings; Software testing";English;Conference Paper;Primary Study;Opinion papers;0;Software Testing;O artigo contribui significativamente ao apresentar práticas consolidadas de testes de software adaptadas ao contexto da computação quântica, usando a linguagem Q# e a suíte de ferramentas do Microsoft QDK. São detalhadas estratégias para testar rotinas de preparação de estados, transformações unitárias e restrições de recursos, com exemplos retirados do projeto educacional Quantum Katas. A abordagem promove a integração entre conceitos de testes clássicos e características do paradigma quântico, como verificação sem acesso direto às amplitudes e uso de simuladores específicos.;Os desafios enfrentados envolvem a ausência de mecanismos diretos para inspecionar estados internos dos sistemas quânticos, exigindo abordagens alternativas de verificação por simulação e comparação com implementações de referência. Além disso, o controle sobre o uso de recursos, como número de qubits e operações multiqubit, demanda ferramentas sofisticadas de instrumentação e simulação, exigindo extensões ao simulador padrão e técnicas avançadas de análise de comportamento para garantir a correção e eficiência das soluções desenvolvidas.;"Tool support; Hybrid systems";"Lack of standardization; Quality assurance"
SCP0184;"Gemeinhardt F.; Garmendia A.; Wimmer M.";Towards Model-Driven Quantum Software Engineering;2021;International Workshop on Quantum Software Engineering;QSE;13;15;29;Quantum technologies are emerging. Dedicated languages for programming Quantum machines are emerging as well and already used in different settings. Orthogonal to this development, Model-Driven Engineering (MDE) is explored to ease the development of software systems by applying modeling techniques such as Domain-Specific Modeling Languages and generative techniques such as code generation. In this position paper, we argue for a dedicated research line which deals with the exploration of how MDE may be applied for Quantum technologies. This combination would allow to speed-up the development of Quantum software, open the door for domain experts to utilize Quantum technologies, and may provide an additional abstraction layer over existing Quantum hardware architectures and programming languages. We outline several research challenges which we derived from a demonstration case of how to exploit domain-specific modeling for social network analysis on Quantum technologies.  © 2021 IEEE.;"Domain Specific Modeling Languages; Model Driven Engineering; Quantum Computing; Software Engineering";"Modeling languages; Software engineering; Specification languages; Abstraction layer; Domain specific modeling; Domain specific modeling languages; Hardware architecture; Model-driven Engineering; Modeling technique; Quantum technologies; Research challenges; Social sciences computing";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O artigo propõe a combinação de Model-Driven Engineering com tecnologias quânticas para acelerar o desenvolvimento de software quântico, oferecendo uma camada adicional de abstração por meio de linguagens específicas de domínio (DSMLs), demonstrando sua aplicabilidade com um caso real de análise de redes sociais e delineando uma agenda de pesquisa com seis questões centrais para a adoção ampla da abordagem.;Os principais desafios incluem a modelagem eficaz de algoritmos híbridos quântico-clássicos, a criação de geradores de código inteligentes, mecanismos adequados de integração via computação em nuvem, estratégias para teste e depuração de DSMLs executáveis, avaliação sistemática de tecnologias quânticas com base em modelos, e a adaptação de tarefas da própria engenharia de modelos para serem resolvidas com computação quântica.;"Empirical study; Research agenda; Collaboration support";"Integration challenges; Modeling difficulty; Quality assurance"
SCP0186;"Kinanen O.; Muñoz-Moller A.D.; Stirbu V.; Mikkonen T.";Improving Quantum Developer Experience with Kubernetes and Jupyter Notebooks;2024;International Conference on Quantum Computing and Engineering;QCE;245;250;0;Quantum computing proposes a revolutionary paradigm that can radically transform numerous scientific and industrial application domains. To realize this promise, new capabilities need software solutions that are able to effectively harness its power. However, developers face significant challenges when developing quantum software due to the high computational demands of simulating quantum computers on classical systems. In this paper, we investigate the potential of using an accessible and cost-efficient manner remote computational capabilities to improve the experience of quantum software developers. © 2024 IEEE.;"developer experience; Jupyter notebook; Quantum software; software development";"Application programs; Laptop computers; Quantum efficiency; Quantum electronics; Software design; Applications domains; Classical systems; Computational demands; Developer experience; Jupyter notebook; Power; Quanta computers; Quantum Computing; Quantum software; Software solution; Quantum computers";English;Conference Paper;Primary Study;Personal experience papers;0;Software Engineering Operations;O artigo contribui ao introduzir uma solução prática e eficaz para o desenvolvimento de software quântico, integrando um kernel customizado para Jupyter com clusters Kubernetes que oferecem suporte a simulações quânticas aceleradas por GPU. Essa abordagem permite que desenvolvedores executem rotinas quânticas de forma transparente em ambientes remotos e escaláveis, com ênfase em facilidade de uso, eficiência de custo e compatibilidade com ferramentas modernas como Qiskit e PennyLane. Além disso, o estudo apresenta um modelo de execução detalhado e testes empíricos em diferentes cenários, demonstrando a aplicabilidade e o impacto da solução na prática.;Os desafios enfrentados incluem a complexidade de configurar ambientes de desenvolvimento compatíveis com simulações quânticas em GPU, a necessidade de integrar múltiplas camadas da pilha de software (como Qiskit Aer, CUDA e cuQuantum) e a fragmentação das abordagens existentes para execução quântica em nuvem. Além disso, a proposta exige soluções robustas para orquestração de tarefas, gerenciamento de dependências e monitoramento de recursos, que nem sempre são triviais de implementar, especialmente para desenvolvedores sem experiência em infraestrutura de nuvem e Kubernetes.;"Tool support; Empirical study";"Infrastructure limitations; System complexity"
SCP0190;"Stirbu V.; Mikkonen T.";Software Architecture Challenges in Integrating Hybrid Classical-Quantum Systems;2023;International Conference on Quantum Computing and Engineering;QCE;203;204;0;The emergence of quantum computing proposes a revolutionary paradigm that can radically transform numerous scientific and industrial application domains. The ability of quantum computers to scale computations exponentially imply better performance and efficiency for certain algorithmic tasks than current computers provide. However, to gain benefit from such improvement, quantum computers must be integrated with existing software systems, a process that is not straightforward. In this paper, we investigate challenges that emerge from building larger hybrid classical-quantum computers, and discuss some approaches that could be employed to overcome these challenges.  © 2023 IEEE.;"classic-quantum systems; Quantum software; software architecture";"Computer software; Quantum optics; Qubits; 'current; Algorithmics; Applications domains; Classic-quantum system; Classical-quantum; Performance; Quanta computers; Quantum Computing; Quantum software; Quantum system; Software architecture";English;Conference Paper;Primary Study;Opinion papers;0;Software Architecture;O artigo fornece uma análise detalhada dos desafios arquiteturais relacionados à construção de sistemas híbridos clássico-quânticos, destacando a importância de separar responsabilidades entre componentes, adaptar o modelo de execução assíncrona, lidar com o agendamento de tarefas quânticas como processos em lote, e modularizar o backend quântico. Além disso, o trabalho apresenta uma arquitetura conceitual e sugere o uso de orquestradores como o Kubernetes para integrar rotinas quânticas em ambientes clássicos, fornecendo uma base valiosa para arquitetos projetarem sistemas escaláveis, flexíveis e interoperáveis entre os dois domínios computacionais.;Os principais desafios envolvem a conciliação entre os paradigmas clássicos e quânticos no nível arquitetural, como a natureza imperativa e monolítica das aplicações quânticas, a necessidade de abstrair e modularizar componentes para permitir seleção dinâmica de hardware e backend, e a latência associada à execução em lote em dispositivos quânticos. Além disso, questões de segurança, privacidade e gestão de recursos computacionais compartilhados exigem soluções arquitetônicas robustas para garantir a confiabilidade e a eficiência da integração entre os mundos clássico e quântico.;"Process model; Tool support; Reference architecture";"Integration challenges; Hardware limitations"
SCP0191;"Awan U.; Hannola L.; Tandon A.; Goyal R.K.; Dhir A.";Quantum computing challenges in the software industry. A fuzzy AHP-based approach;2022;Information and Software Technology;INFSOF;0;0;85;Context: The current technology revolution has posed unexpected challenges for the software industry. In recent years, the field of quantum computing (QC) technologies has continued to grow in influence and maturity, and it is now poised to revolutionise software engineering. However, the evaluation and prioritisation of QC challenges in the software industry remain unexplored, relatively under-identified and fragmented. Objective: The purpose of this study is to identify, examine and prioritise the most critical challenges in the software industry by implementing a fuzzy analytic hierarchy process (F-AHP). Method: First, to identify the key challenges, we conducted a systematic literature review by drawing data from the four relevant digital libraries and supplementing these efforts with a forward and backward snowballing search. Second, we followed the F-AHP approach to evaluate and rank the identified challenges, or barriers. Results: The results show that the key barriers to QC adoption are the lack of technical expertise, information accuracy and organisational interest in adopting the new process. Another critical barrier is the lack of standards of secure communication techniques for implementing QC. Conclusion: By applying F-AHP, we identified institutional barriers as the highest and organisational barriers as the second highest global weight ranked categories among the main QC challenges facing the software industry. We observed that the highest-ranked local barriers facing the software technology industry are the lack of resources for design and initiative while the lack of organisational interest in adopting the new process is the most significant organisational barrier. Our findings, which entail implications for both academicians and practitioners, reveal the emergent nature of QC research and the increasing need for interdisciplinary research to address the identified challenges. © 2022 The Author(s);"Fuzzy analytic hierarchy process (F-AHP); Multiple-criteria decision-making (MCDM); Quantum computing; Quantum software requirement; Software process automation";"Decision making; Digital libraries; Facings; Hierarchical systems; Software engineering; Fuzzy analytic hierarchy; Fuzzy analytic hierarchy process; Multiple criteria decision making; Multiple-criteria decision-making; Process automation; Quantum Computing; Quantum software requirement; Software process; Software process automation; Software requirements; Analytic hierarchy process";English;Article;Secondary Study;0;Systematic literature;The Software Engineering in General;O trabalho fornece uma revisão sistemática abrangente sobre os desafios de adoção da computação quântica na indústria de software, propondo uma taxonomia estruturada por meio do método F-AHP que permite priorizar barreiras institucionais, organizacionais, de gestão e de tecnologia, com implicações diretas para políticas públicas e desenvolvimento acadêmico e industrial.;Os principais desafios envolvem a ausência de competências técnicas especializadas, pouca colaboração entre universidade e indústria, escassez de padrões de criptografia pós-quântica, falta de infraestrutura, investimentos insuficientes e desconhecimento organizacional sobre as aplicações práticas da computação quântica.;"Conceptual framework; Process model";Infrastructure limitations
SCP0195;"Magaz-Romero S.; Mosqueira-Rey E.; Alvarez-Estevez D.; Moret-Bonillo V.";Quantum Factory Method: A Software Engineering Approach to Deal with Incompatibilities in Quantum Libraries;2023;International Conference on Computational Science;ICCS;64;71;1;The current context of Quantum Computing and its available technologies present an extensive variety of tools and lack of methodologies, leading to incompatibilities across platforms, which end up as inconsistencies in the developed solutions. We propose a design called Quantum Factory Method, based on software engineering and design patterns, to solve these issues by integrating different quantum platforms in the same development. We provide example implementations whose results prove the suitability of the design in different cases, and conclude on how this approach can be expanded for future work. © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023.;"Design Patterns; Quantum Computing; Rule-Based Systems; Software Engineering; Uncertainty";"Design; Knowledge based systems; Quantum computers; 'current; Design Patterns; Factory methods; Quantum Computing; Rules based systems; Software design patterns; Software engineering pattern; Uncertainty; Software engineering";English;Conference Paper;Primary Study;Proposal of solution;0;Software Design;O estudo introduz o “Quantum Factory Method”, uma abordagem fundamentada em padrões de projeto como Factory Method e Adapter para abstrair e integrar diferentes bibliotecas quânticas como Qiskit e Cirq. Essa estrutura permite que um único problema seja definido de forma genérica e executado em múltiplas plataformas, com suporte a circuitos simples em OpenQASM e a sistemas baseados em regras (QRBS). A solução promove reutilização de código, padronização de saídas e comparabilidade entre plataformas, servindo como base escalável para aplicações quânticas complexas e facilitando a manutenção de grandes sistemas de software quântico.;Os desafios abordados incluem a heterogeneidade das bibliotecas quânticas, que dificultam a reutilização de código e a comparação de resultados entre plataformas. A proposta enfrenta também a ausência de padronização em linguagens como o OpenQASM, que é implementado de forma inconsistente entre as ferramentas. Além disso, há desafios técnicos na construção de arquiteturas genéricas que sejam flexíveis o suficiente para acomodar diferentes paradigmas de programação quântica, como circuitos baseados em regras com incerteza, sem comprometer a clareza, a escalabilidade e o desempenho do sistema.;Tool support;Lack of standardization
SCP0197;"Trinca M.; Ferreira J.F.; Abreu R.";A Preliminary Study on Generating Well-Formed Q# Quantum Programs for Fuzz Testing;2022;International Conference on Software Testing;Proc. - IEEE Int. Conf. Softw. Test., Verif. Valid. Workshops, ICSTW;118;121;2;Generative Sequence-To-Sequence models have been proposed for the task of generating well-formed programs, an important task for fuzz testing tools such as compilers. In this paper, we propose a Sequence-to-Sequence model to generate well-formed Q# Quantum programs. The ratio of syntactically valid programs among 1,000 Q# files generated by our model is 79.6%. In addition, we also contribute with a dataset of 1,723 Q# files taken from publicly available repositories on GitHub, which can be used by the growing community of Quantum Software Engineering.  © 2022 IEEE.;"Fuzz Testing; Machine Learning; Quantum Software Engineering; Sequence-to-Sequence Models";"Machine learning; Program compilers; Software testing; Fuzz Testing; Machine-learning; Quantum software engineering; Sequence models; Sequence-to-sequence model; Testing tools; Well testing";English;Conference Paper;Primary Study;Proposal of solution;0;Software Testing;O artigo contribui ao introduzir uma abordagem baseada em aprendizado de máquina para gerar automaticamente programas quânticos sintaticamente válidos na linguagem Q#, alcançando uma taxa de sucesso de 79,6% entre os 1.000 arquivos gerados. Além disso, disponibiliza um dataset inédito de 1.723 arquivos Q# coletados de repositórios públicos no GitHub, oferecendo uma valiosa fonte de dados para futuras pesquisas em engenharia de software quântica, especialmente nas áreas de teste, verificação e geração automática de código.;Os principais desafios abordados incluem a limitação do volume de dados de treinamento, o que afeta a capacidade do modelo de generalizar padrões sintáticos raros, além de dificuldades inerentes ao processo de geração, como a predição incorreta de fechamento de estruturas sintáticas (por exemplo, aspas ou chaves). A ausência de grandes repositórios de programas Q# bem formados e de ferramentas robustas para depuração de erros também representa um obstáculo significativo para o avanço de estratégias de fuzz testing na computação quântica.;Process model;Modeling difficulty
SCP0199;Hall R.J.;A quantum algorithm for software engineering search;2009;International Conference on Automated Software Engineering;ASE;40;51;3;Quantum computers can solve a few basic problems, such as factoring an integer and searching a database, much faster than classical computers. However, the complexity of software artifacts, and the types of questions software engineers ask about them, pose significant challenges for applying existing quantum approaches to software engineering search (SES) problems. This paper first describes a new quantum search algorithm, IDGS-FA, whose design is motivated by the characteristics of SES problems. Next, it describes how to apply quantum searching to three SES problems: FSM property checking, software test generation, and library-based software synthesis. Next, the paper gives the main ideas in QSAT, a novel toolkit supporting efficient simulation of the algorithms and applications discussed. Finally, it concludes with a substantial simulation-based study of IDGS-FA, showing that it improves both the reliability and speed of other approaches. © 2009 IEEE.;"Modeling; Quantum computing; Search algorithm; Simulation; Synthesis; Validation; Verification";"Computation theory; Engineering; Learning algorithms; Quantum computers; Quantum optics; Quantum theory; Software engineering; Synthesis (chemical); Efficient simulation; Property checking; Quantum algorithms; Quantum approach; Quantum computing; Quantum search algorithm; Quantum searching; Search Algorithms; Simulation-based; Software artifacts; Software engineers; Software synthesis; Software test; Computer software selection and evaluation";English;Conference Paper;Primary Study;Opinion papers;0;Software Engineering Models and Methods;O trabalho introduz o algoritmo Iterative Deepening Grover Search – FindAll (IDGS-FA), capaz de lidar com três desafios críticos em buscas aplicadas à engenharia de software: (i) número desconhecido de alvos (TWI), (ii) necessidade de múltiplas soluções (FA), e (iii) escalabilidade em espaços grandes (LS). O artigo também apresenta o QSAT, um toolkit para simulação de buscas quânticas, e demonstra como o IDGS-FA pode ser aplicado em verificação de autômatos, geração de testes e síntese baseada em bibliotecas.;Os principais desafios incluem a adaptação da computação quântica para problemas de engenharia de software que exigem encontrar múltiplas soluções em espaços com alta complexidade, desenvolver ferramentas que traduzam especificações clássicas para operadores unitários compatíveis com algoritmos de Grover, e superar limitações práticas da tecnologia quântica, como a coerência quântica e os custos de simulação em larga escala.;Code generation support;"Tool support gap; System complexity"
SCP0200;"Ali S.; Yue T.; Abreu R.";When software engineering meets quantum computing;2022;Communications of the ACM;Commun ACM;84;88;42;[No abstract available];;;English;Article;Primary Study;Philosophical papers;0;The Software Engineering in General;O artigo contribui ao consolidar um panorama do estado atual da Engenharia de Software Quântica, destacando lacunas na aplicação de práticas clássicas ao contexto quântico, e sugerindo novas abordagens para atividades como elicitação de requisitos, modelagem, teste e depuração. Ao mapear diferenças fundamentais entre a engenharia de software clássica e quântica, o trabalho propõe uma agenda de pesquisa baseada em necessidades práticas e desafios técnicos que surgem da natureza probabilística, da ausência de SDLCs bem estabelecidos e da dificuldade de acesso a estados internos em tempo de execução.;Entre os principais desafios estão a criação de processos sistemáticos e metodologias adaptadas ao paradigma quântico, a escassez de abstrações de alto nível para modelagem e programação, a dificuldade de realizar testes e depuração sem destruir o estado quântico, e a falta de ferramentas, linguagens e boas práticas que possam ser usadas por desenvolvedores sem profundo conhecimento em física quântica. Além disso, a ausência de um ciclo de vida de software bem definido para aplicações quânticas compromete a escalabilidade e confiabilidade das soluções, evidenciando a urgência de estruturar a área de QSE como disciplina consolidada.;"Research agenda; Requirements engineering";"Modeling difficulty; Quality assurance"
SCP0202;"Miranskyy A.; Zhang L.; Doliskani J.";Is Your quantum Program Bug-Free?;2020;International Conference on Software Engineering: New Ideas and Emerging Results;ICSE-NIER;29;32;12;Quantum computers are becoming more mainstream. As more programmers are starting to look at writing quantum programs, they face an inevitable task of debugging their code. How should the programs for quantum computers be debugged?In this paper, we discuss existing debugging tactics, used in developing programs for classic computers, and show which ones can be readily adopted. We also highlight quantum-computer-specific debugging issues and list novel techniques that are needed to address these issues. Re practitioners can readily apply some of these tactics to their process of writing quantum programs, while researchers can learn about opportunities for future work.  © 2020 ACM.;;"Computer debugging; Qubits; Software engineering; Bug-free; Developing projects; Novel techniques; Program debugging";English;Conference Paper;Primary Study;Proposal of solution;0;Software Testing;O artigo analisa criticamente como táticas clássicas de depuração — como backtracking, eliminação de causa e força bruta — podem ou não ser aplicadas a programas quânticos, e propõe abordagens específicas como uso de cópias aproximadas, verificação de separabilidade, tomografia quântica e métricas de fidelidade para observar estados internos sem comprometer a execução, fornecendo um roteiro para desenvolvimento futuro de ferramentas de depuração específicas para o paradigma quântico.;Os principais desafios envolvem a impossibilidade de observação direta de estados quânticos devido à colapsabilidade por medição, a dificuldade de detecção de entrelaçamento e separabilidade entre subsistemas, a ausência de mecanismos de clonagem para análise em tempo de execução, e a necessidade de novas ferramentas que combinem tomografia, simulação e instrumentação automatizada para permitir depuração interpretável, escalável e compatível com arquiteturas quânticas reais.;Tool support;"Tool support gap; Quality assurance"
SCP0221;"Riesebos L.; Bondurant B.; Whitlow J.; Kim J.; Kuzyk M.; Chen T.; Phiri S.; Wang Y.; Fang C.; Horn A.V.; Kim J.; Brown K.R.";Modular software for real-time quantum control systems;2022;International Conference on Quantum Computing and Engineering;QCE;545;555;7;Real-time control software and hardware is essential for operating quantum computers. In particular, the software plays a crucial role in bridging the gap between quantum programs and the quantum system. Unfortunately, current control software is often optimized for a specific system at the cost of flexibility and portability. We propose a systematic design strategy for modular real-time quantum control software and demonstrate that modular control software can reduce the execution time overhead of kernels by 63.3% on average while not increasing the binary size. Our analysis shows that modular control software for two distinctly different systems can share between 49.8% and 91.0% of covered code statements. To demonstrate the modularity and portability of our software architecture, we run a portable randomized benchmarking experiment on two different ion-trap quantum systems.  © 2022 IEEE.;"modular software; quantum computing; real-time control systems; software portability";"Quantum computers; Quantum optics; Real time control; Control software; Modular control; Modular softwares; Quantum Computing; Quantum control systems; Quantum system; Real time control systems; Real- time; Real-time control software; Time quantum; Computer software portability";English;Conference Paper;Primary Study;Evaluation research;0;Software Architecture;O trabalho apresenta uma abordagem de desenvolvimento baseada em componentes modulares reutilizáveis para simulações de química quântica em tempo real, facilitando a integração de novos algoritmos, métodos e interfaces. O framework permite o acoplamento eficiente de simulações moleculares com visualizações interativas, beneficiando aplicações como ensino, prototipagem de interfaces e experimentação científica remota.;Os principais desafios estão na sincronização entre os diferentes módulos (como dinâmica molecular, resolução de equações de Schrödinger e renderização gráfica), na manutenção da responsividade da aplicação mesmo sob alto custo computacional, e na criação de interfaces genéricas o suficiente para permitir reuso sem comprometer desempenho ou acurácia. Além disso, a interoperabilidade entre diferentes bibliotecas científicas exige padronização de interfaces e formatos de dados.;"Conceptual framework; Process model; Education and training";Lack of standardization
SCP0225;"Díaz Muñoz A.; Rodríguez Monje M.; Piattini Velthuis M.G.";Towards a set of metrics for hybrid (quantum/classical) systems maintainability;2024;Journal of Universal Computer Science;J. Univers. Comput. Sci.;25;48;6;Given the rapid evolution that has taken place in recent years in the software industry, and along with it the emergence of quantum software, there is a need to design an environment for measuring quality metrics for hybrid, classic-quantum software. In order to measure and evaluate the quality of classic software, there are models and standards, among which ISO/IEC 25000 stands out, which proposes a set of quality characteristics such as maintainability. However, there is currently no consensus for the measurement and evaluation of quantum software quality. In this paper we propose a series of adaptations to “classic” metrics, as well as a set of new measurements for hybrid maintainability. Finally, a first prototype of a measurement tool developed as a SonarQube plugin, capable of measuring these metrics in quantum developments, is also presented. © 2024, IICM. All rights reserved.;"ISO/IEC 25000; maintainability; quantum software; software assessment; software quality";;English;Article;Primary Study;Opinion papers;0;Software Quality;O estudo demonstra que o processo de transpilation pode introduzir ou acentuar code smells em circuitos quânticos, revelando que a escolha do gate set afeta diretamente a qualidade do software quântico e propondo direções para ferramentas de detecção mais robustas.;O principal desafio identificado é garantir a qualidade e manutenibilidade do software quântico frente à inevitável transpiração para diferentes gate sets, exigindo estratégias adaptadas para mitigar a degradação introduzida pelo processo.;"Process model; Tool support";Other technical limitation
SCP0228;Ying M.;Toward automatic verification of quantum programs;2019;Formal Aspects of Computing;Formal Aspects Comput;3;25;19;This paper summarises the results obtained by the author and his collaborators in a program logic approach to the verification of quantum programs, including quantum Hoare logic, invariant generation and termination analysis for quantum programs. It also introduces the notion of proof outline and several auxiliary rules for more conveniently reasoning about quantum programs. Some problems for future research are proposed at the end of the paper. © 2018, British Computer Society.;"Auxiliary rules; Hoare logic; Invariant generation; Proof outline; Quantum programming; Termination analysis";"Computation theory; Software engineering; Auxiliary rules; Hoare Logic; Invariant generations; Proof outline; Quantum programming; Termination analysis; Computer circuits";English;Article;Primary Study;Proposal of solution;0;Software Testing;O artigo propõe uma nova abordagem automática para verificação formal de programas quânticos usando regras de inferência sobre pré e pós-condições quânticas, fornecendo também uma ferramenta protótipo e avaliação com benchmarks conhecidos.;Os principais desafios envolvem a complexidade da modelagem de estados quânticos, a limitação de ferramentas automatizadas e a necessidade de técnicas que combinem aspectos clássicos e quânticos para garantir a correção dos programas.;Tool support;"Lack of modeling standards; Tool support gap; System complexity"
SCP0230;"Zhang L.; Miranskyy A.; Rjaibi W.; Stager G.; Gray M.; Peck J.";Making existing software quantum safe: A case study on IBM Db2;2023;Information and Software Technology;INFSOF;0;0;10;Context: The software engineering community is facing challenges from quantum computers (QCs). In the era of quantum computing, Shor's algorithm running on QCs can break asymmetric encryption algorithms that classical computers practically cannot. Though the exact date when QCs will become “dangerous” for practical problems is unknown, the consensus is that this future is near. Thus, the software engineering community needs to start making software ready for quantum attacks and ensure quantum safety proactively. Objective: We argue that the problem of evolving existing software to quantum-safe software is very similar to the Y2K bug. Thus, we leverage some best practices from the Y2K bug and propose our roadmap, called 7E, which gives developers a structured way to prepare for quantum attacks. It is intended to help developers start planning for the creation of new software and the evolution of cryptography in existing software. Method: In this paper, we use a case study to validate the viability of 7E. Our software under study is the IBM Db2 database system. We upgrade the current cryptographic schemes to post-quantum cryptographic ones (using Kyber and Dilithium schemes) and report our findings and lessons learned. Results: We show that the 7E roadmap effectively plans the evolution of existing software security features towards quantum safety, but it does require minor revisions. We incorporate our experience with IBM Db2 into the revised 7E roadmap. Conclusion: The U.S. Department of Commerce's National Institute of Standards and Technology is finalizing the post-quantum cryptographic standard. The software engineering community needs to start getting prepared for the quantum advantage era. We hope that our experiential study with IBM Db2 and the 7E roadmap will help the community prepare existing software for quantum attacks in a structured manner. © 2023 Elsevier B.V.;"Post-quantum cryptography; Software engineering; Software evolution";"Computer software; Quantum cryptography; Safety engineering; Case-studies; Community IS; CryptoGraphics; Engineering community; Post quantum; Post quantum cryptography; Quanta computers; Quantum Computing; Roadmap; Software Evolution; Quantum computers";English;Article;Primary Study;Evaluation research;0;Software Security;O trabalho propõe um processo sistemático de seis etapas para apoiar organizações na atualização de sistemas existentes para proteção contra ameaças quânticas, incorporando considerações práticas como escopo do sistema, mudanças nos requisitos, seleção de algoritmos pós-quânticos e garantia de segurança durante a transição.;Um dos principais desafios destacados é lidar com a complexidade de adaptar sistemas existentes, especialmente legados, para incorporar algoritmos de criptografia pós-quântica, considerando limitações de desempenho, conformidade normativa e impacto nos requisitos funcionais e não funcionais.;"Process model; Requirements engineering";System complexity
SCP0240;Zhao J.;On Refactoring Quantum Programs in Q#;2023;International Conference on Quantum Computing and Engineering;QCE;169;172;2;Refactoring is the process of restructuring existing computer code without changing its external behavior. Refactoring aims to improve the design, structure, and implementation of software while preserving its functionality. While classical programs have benefited from various refactoring methods, the field of quantum programming lacks dedicated refactoring techniques. This paper bridges this gap by presenting a preliminary catalog of refactorings designed for quantum programs in Q#. The paper also highlights the importance of tool support in automating the refactoring process for quantum programs.  © 2023 IEEE.;"Q# language; Quantum programming; refactoring; software maintenance and evolution";"Computer software maintenance; Computer codes; Design implementation; Design structure; External behavior; Q# language; Quantum programming; Refactoring methods; Refactorings; Software maintenance and evolution; Tool support; Bridges";English;Conference Paper;Primary Study;Proposal of solution;0;Software Maintenance;O artigo oferece uma análise conceitual sobre como os princípios de refatoração da engenharia de software clássica podem ser adaptados à computação quântica, identificando tipos de refatorações específicas, como reorganização de qubits, otimização de circuitos e modularização de portas quânticas. A pesquisa também propõe um framework preliminar para categorizar essas transformações, abrindo caminho para ferramentas e técnicas sistemáticas de melhoria contínua do código quântico.;Os principais desafios incluem a falta de compreensão completa sobre as implicações funcionais e físicas das transformações em código quântico, a escassez de métricas para avaliar melhorias de qualidade nesse novo paradigma, e a dificuldade de preservar propriedades como reversibilidade, coerência e entrelaçamento durante as refatorações. Também se destacam limitações nas ferramentas atuais de análise e edição de circuitos quânticos, que ainda não suportam abstrações e automatizações necessárias para práticas modernas de manutenção de software.;"Conceptual framework; Tool support";Tool support gap
SCP0245;"Metwalli S.A.; Van Meter R.";A Tool For Debugging Quantum Circuits;2022;International Conference on Quantum Computing and Engineering;QCE;624;634;6;"As the scale of quantum programs grows to match that of classical software, the nascent field of quantum software engineering must mature and tools such as debuggers will become increasingly important. However, developing a quantum debugger is challenging due to the nature of a quantum computer; sneaking a peek at the value of a quantum state will cause either partial or complete collapse of the superposition and may destroy the necessary entanglement. As a first step to developing a full quantum circuit debugger, we have designed and implemented a quantum circuit debugging tool. The tool allows the user to divide the circuit vertically or horizontally into smaller chunks known as slices, and manage their simulation or execution for either interactive debugging or automated testing. The tool also enables developers to track gates within the overall circuit and each chunk to understand their behavior better. Feedback on usefulness and usability from early users shows that using the tool to slice and test their circuits has helped make the debugging process more time-efficient for them.  © 2022 IEEE.";"Debugging; Quantum circuits; Quantum Software";"Program debugging; Quantum entanglement; Quantum optics; Circuit debugging; Debuggers; Debugging; Debugging tools; Interactive debugging; Nascent field; Quanta computers; Quantum circuit; Quantum software; Quantum state; Timing circuits";English;Conference Paper;Primary Study;Proposal of solution;0;Software Testing;O trabalho apresenta uma ferramenta inovadora de depuração para circuitos quânticos, que permite aos desenvolvedores aplicar técnicas de slicing vertical e horizontal, categorizando partes do circuito (slices) e facilitando testes e rastreamento de erros sem necessidade de simular o circuito completo. A ferramenta é construída sobre o Qiskit, estende suas classes principais com funcionalidades específicas como breakbarrier, rastreamento de portas e categorização automática de slices. Além disso, o artigo valida a ferramenta com usuários de diferentes níveis de experiência, mostrando sua utilidade prática na localização de bugs em algoritmos como Grover, Simon, QFT, entre outros.;O principal desafio enfrentado é a complexidade inerente à depuração de circuitos quânticos, especialmente em fatias com propriedades quânticas complexas, como superposição e emaranhamento, que não podem ser observadas diretamente sem colapsar o estado. Além disso, a ausência de ferramentas visuais e sistemáticas para depuração em nível de circuito dificulta a localização de falhas sem alterar o comportamento do programa. A escalabilidade da abordagem também é um obstáculo, pois circuitos maiores exigem mecanismos mais sofisticados de análise e categorização automática, bem como integração com interfaces gráficas para facilitar o uso por desenvolvedores menos experientes.;Tool support;Integration challenges
SCP0251;"Weder B.; Barzen J.; Leymann F.; Zimmermann M.";Hybrid Quantum Applications Need Two Orchestrations in Superposition: A Software Architecture Perspective;2021;International Conference on Web Services;Proc. - IEEE Int. Conf. Web Serv., ICWS;1;13;18;Quantum applications are most often hybrid, i.e., they are not only made of implementations of pure quantum algorithms but also of classical programs as well as workflows and topologies as key artifacts, and data they process. Since workflows and topologies are referred to as 'orchestrations' in modern terminology (but with very different meanings), two orchestrations that go hand-in-hand are required to realize quantum applications. We motivate this by means of a nontrivial example, sketch these orchestration technologies, and reveal the overall structure of non-trivial quantum applications. Furthermore, we discuss the implied architecture of a runtime environment for such quantum applications. To validate the introduced architecture, we present a prototypical implementation based on the Camunda workflow engine, its associated modeling tool, as well as the OpenTOSCA ecosystem. © 2021 IEEE.;"Hybrid Quantum-Classical Applications; NISQ; Quantum Computing; Runtime for Quantum Applications; Software Engineering of Quantum Applications";"Application programs; Quantum computers; Quantum theory; Hybrid quantum-classical application; NISQ; Quantum applications; Quantum Computing; Quantum-classical; Runtime for quantum application; Runtimes; Software engineering of quantum application; Work-flows; Topology";English;Conference Paper;Primary Study;Proposal of solution;0;Software Architecture;O trabalho introduz o conceito de duas orquestrações em superposição: (i) a orquestração do fluxo de controle e dados via motores de workflow (como Camunda com BPMN) e (ii) a orquestração da infraestrutura de execução por meio de engines de provisão baseados em topologias (como OpenTOSCA usando TOSCA). Apresenta a estrutura de um Quantum Application Archive (QAA), contendo o workflow, topologia, programas e dados, e valida a arquitetura proposta com um protótipo funcional.;Os principais desafios incluem a necessidade de sincronizar duas orquestrações distintas, gerenciar a heterogeneidade e interdependência entre serviços clássicos e quânticos, reduzir latência e custos em ambientes cloud, automatizar o provisionamento sob demanda de ambientes híbridos e garantir a reprodutibilidade, escalabilidade e robustez da execução de aplicações quânticas em ambientes reais.;Reference architecture;Other technical limitation
SCP0256;"Jiménez-Navajas L.; Pérez-Castillo R.; Piattini M.";Code generation for classical-quantum software systems modeled in UML;2025;Software and Systems Modeling;Softw. Syst. Model.;0;0;0;Quantum computing is gaining an increasing interest since it can solve certain problems exponentially faster than classical computing. Thus, many organizations are researching and launching investments for integrating quantum software into their existing systems. Software modernization (as based on Model-Driven Engineering) has been proposed to migrate from/to the so-called hybrid software systems, which integrate classical and quantum software. In that process, both, reverse engineering and restructuring phases, have already been investigated. However, forward engineering phase for generating hybrid source code from high-level design models has not yet been addressed. Thus, this research proposes a quantum code generation technique from extended UML design models. It consists of a set of Model-to-Text transformations (defined through Epsilon Generation Language) to generate both Python and Qiskit code, which, respectively, integrate classical and quantum code. The transformation has been validated through a multi-case study with 7 hybrid software systems modeled in UML, which demonstrated that the transformation is effective and efficient. The implication of this work is that the software modernization process for hybrid software systems can be completed by tackling forward engineering phase, and that Model-Driven Engineering can therefore globally facilitate industry adoption of quantum software. © The Author(s) 2025.;"Code generation; EGL; MDE; Quantum software; UML";"Error correction; Problem oriented languages; Quantum electronics; Software design; Codegeneration; EGL; Engineering phase; Forward engineerings; Hybrid software systems; MDE; Model-driven Engineering; Quantum software; Software modernization; UML; Reverse engineering";English;Article;Primary Study;Evaluation research;0;Software Engineering Models and Methods;O trabalho introduz uma ferramenta que traduz automaticamente modelos UML de sistemas clássico-quânticos em código executável, promovendo a integração entre técnicas de engenharia de software clássica e computação quântica.;O principal desafio identificado é a integração efetiva entre componentes clássicos e quânticos, considerando as diferenças fundamentais entre os paradigmas computacionais, além da limitação de ferramentas existentes que ofereçam suporte ao desenvolvimento de sistemas híbridos.;"Tool support; Hybrid systems";Integration challenges
SCP0259;"Svore K.M.; Aho A.V.; Cross A.W.; Chuang I.; Markov I.L.";A layered software architecture for quantum computing design tools;2006;Computer;Computer;74;83;112;Compilers and computer-aided design tools are essential for fine-grained control of nanoscale quantum-mechanical systems. A proposed four-phase design flow assists with computations by transforming a quantum algorithm from a high-level language program into precisely scheduled physical actions. © 2006 IEEE.;;"Algorithms; Computer aided design; Error correction; Optimization; Program assemblers; Program compilers; Computer-aided design tools; Design flow; Nanoscale quantum-mechanical systems; Quantum algorithms; Quantum assembly programs; Software architecture; Computer architecture";English;Article;Primary Study;Proposal of solution;0;Software Architecture;O artigo apresenta um modelo estruturado de compilação para computação quântica, dividindo o processo em quatro fases: representação intermediária (QIR), linguagem de montagem (QASM), operações físicas (QPOL) e execução em hardware ou simuladores. A arquitetura permite modularidade, otimização, inserção de tolerância a falhas e simulação realista de algoritmos, e oferece diretrizes para o desenvolvimento de compiladores, simuladores, ferramentas de layout e linguagens de programação voltadas ao domínio quântico.;Os principais desafios incluem a inserção eficiente de técnicas de correção de erros em diferentes fases do compilador, a necessidade de abstrações que conciliem controle clássico e quântico, a dificuldade de adaptação a diferentes arquiteturas físicas, e a criação de linguagens de programação de alto nível que encapsulem princípios da mecânica quântica de forma compreensível para desenvolvedores e físicos.;"Process model; Tool support; Research agenda";Other technical limitation
SCP0260;"Fürntratt H.; Schnabl P.; Krebs F.; Unterberger R.; Zeiner H.";Towards Higher Abstraction Levels in Quantum Computing;2024;International Conference on Service-Oriented Computing;ICSOC;162;173;1;This work is a survey and a position paper towards a higher abstraction in quantum computing (QC) programming frameworks and software development kits (SDKs). Since in 2003, Peter Shor complained about the limited increase in the number of QC algorithms [19], we see an urgent need to bridge the gap between well-established classical physics and quantum physics so that approaches become more intuitive, and - hopefully - more quantum algorithms can be discovered. In service-based hybrid QC frameworks, where algorithms need to be partitioned into quantum and classical tasks, we look at the methods available and the abstractions used. For this paper we have investigated the various levels of abstraction in Silq, Qrisp, OpenQl, Qiskit, Cirq, IonQ, and Ocean, which are originated in the QC domain, as well as CUDA Quantum, rooted in the classical software domain. With the rise of Large Language Models (LLMs), we have also explored the capabilities of LLM-powered tools like GitHub Copilot, which currently represents the top level of abstraction. © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2024.;"Abstraction; Hybrid Systems; Quantum Computing; Software Engineering";"Abstracting; Quantum computers; Quantum optics; Software design; Abstraction; Abstraction level; Classical physics; Computing algorithms; Language model; Position papers; Programming framework; Programming software; Quantum Computing; Software development kit; Hybrid systems";English;Conference Paper;Primary Study;Opinion papers;0;Software Design;O trabalho apresenta um processo formalizado de desenvolvimento de software quântico por meio de transformações automáticas de modelos UML em código Qiskit, promovendo abstração, modularidade e automação. A abordagem é validada com um estudo de caso no qual um modelo UML é transformado em um circuito quântico funcional, demonstrando a viabilidade de integração entre práticas tradicionais de engenharia de software e tecnologias emergentes de computação quântica.;Os principais desafios incluem a complexidade de mapear conceitos clássicos da UML para construções quânticas, a ausência de suporte nos ambientes tradicionais de modelagem para semânticas quânticas, e a limitação das ferramentas de transformação de modelos na geração de circuitos otimizados e semanticamente corretos. Além disso, a aplicação prática em projetos maiores exigirá extensões do metamodelo e validações empíricas com arquiteturas quânticas reais.;"Process model; Empirical study";"Modeling difficulty; Skill gap"
SCP0261;"Jiménez-Navajas L.; Pérez-Del Castillo R.; Piattinia M.";A tool for quantum software evolution;2020;International Workshop on Quantum Software Engineering and Technology;QSET;38;44;0;Quantum computing has been growing drastically for the last year due to all the possible applications that this new paradigm brings as well as its incomparable computational power. Therefore, the new information systems that will be developed in a future might be influenced by this paradigm. However, discarding the legacy information systems is not an option if those systems embed mission-critical knowledge over time. Furthermore, quantumfy every business process does not make sense because the high cost that it requires. This is why, in a future, organizations will adapt their classical information systems with new quantum applications, evolving their legacy information systems into hybrid information system. To accomplish this evolution, this paper proposes a technique of software modernization using model-driven engineering based on the Knowledge Discovery Metamodel (KDM) standard. © 2020 Copyright for this paper by its authors.;"KDM; Q#; Quantum computing; Reengineering; Reverse engineering";"Information systems; Information use; Quantum computers; Software engineering; Classical information; Computational power; Hybrid information system; Legacy information systems; Model-driven Engineering; Quantum applications; Software Evolution; Software modernization; Legacy systems";English;Conference Paper;Primary Study;Proposal of solution;0;Software Maintenance;O artigo contribui ao propor um processo de reengenharia quântica baseado em três etapas—engenharia reversa, reestruturação e engenharia direta—para evoluir sistemas legados em direção a arquiteturas híbridas clássico-quânticas. A proposta utiliza o metamodelo KDM para abstrair e preservar o conhecimento de sistemas legados, promovendo a interoperabilidade entre ferramentas e suportando a geração automatizada de modelos UML e, futuramente, de código quântico. O trabalho ainda define três cenários principais de modernização: integração de algoritmos quânticos existentes, evolução de sistemas legados e desenvolvimento de novos componentes de negócio com suporte quântico.;Os principais desafios abordados incluem a inexistência de ferramentas capazes de gerar código quântico automaticamente a partir de modelos de alto nível, a complexidade de adaptar processos clássicos de reengenharia ao paradigma quântico, e a necessidade de garantir que o conhecimento crítico embutido em sistemas legados seja preservado na transição. Além disso, a integração entre componentes clássicos e quânticos demanda modelagem precisa de dependências, interoperabilidade entre linguagens e tecnologias, e a definição de boas práticas de engenharia ainda incipientes na área de software quântico.;"Process model; Tool support; Reference architecture";"Integration challenges; Modeling difficulty"
SCP0264;Murillo J.M.;Composable Quantum Oracles for Shifting Quantum Circuits Abstraction Level;2024;International Conference on Quantum Software;QSW;9;11;0;In this paper, the issue of the low abstraction level supported by quantum programming languages based on quantum gates is addressed. The author of this proposal is leading a research line in which quantum registers are considered as data type encoders. From this starting point, the development of efficient quantum oracles implementing operations on these types is proposed. If such oracles are reusable and composable, then programmers will have access to higher-level abstraction operations for conceptualizing and encoding their solutions. The objective of this work is to present this research direction, outline the results achieved thus far, and depict future work and how they can help achieve Quantum Utility by allowing developers to work at a higher abstraction level.  © 2024 IEEE.;"Quantum Computing; Quantum Software Engineering; Quantum Utility; Reusable Quantum Oracles";"Computer software reusability; Quantum efficiency; Quantum electronics; Quantum optics; Reusability; Signal encoding; Utility programs; Abstraction level; Composable; Quantum circuit; Quantum Computing; Quantum gates; Quantum programming languages; Quantum register; Quantum software engineering; Quantum utility; Reusable quantum oracle; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O trabalho contribui ao propor uma abordagem conceitual para tornar a programação quântica mais acessível, ao tratar registradores quânticos como abstrações de tipos de dados e desenvolver oráculos composáveis que realizam operações sobre esses dados, como comparação e múltiplos. A proposta permite que desenvolvedores componham essas operações para construir algoritmos mais expressivos, promovendo reutilização, modularidade e compreensibilidade. O artigo também demonstra a viabilidade e eficiência dos oráculos gerados automaticamente, reforçando seu potencial como blocos de construção para elevar o nível de abstração das linguagens quânticas.;Os principais desafios envolvem a necessidade de documentar e padronizar o reuso de oráculos quânticos, garantir sua eficiência em termos de profundidade e número de portas, e expandir essa abordagem para novos tipos de dados além de inteiros. Também é necessário equilibrar a generalidade e a eficiência dos oráculos, além de estabelecer um ecossistema de ferramentas que permita sua integração transparente em linguagens e frameworks quânticos já existentes. O desenvolvimento de mecanismos automatizados para geração, verificação e composição de oráculos ainda representa uma fronteira importante para a Engenharia de Software Quântica.;Process model;"Integration challenges; Quality assurance"
SCP0266;"Singh P.; Dasgupta R.; Singh A.; Pandey H.; Hassija V.; Chamola V.; Sikdar B.";A Survey on Available Tools and Technologies Enabling Quantum Computing;2024;IEEE Access;IEEE Access;57974;57991;10;In the contemporary era of scientific and technical innovations, we are witnessing remarkable progress in the realm of quantum computing. Today's phase is referred to as the second quantum revolution, characterized by ongoing research and progress in the hardware, software, and applications of quantum computers. While the theoretical foundations of quantum computing have been in place for decades, the practical tools and technologies that have emerged in recent years have catapulted this field from theory into reality. This paper provides a brief overview of the fundamental principles of quantum computing and explores the various technologies that support them. From quantum programming languages and simulators to quantum hardware platforms and software development kits, these tools have paved the way for groundbreaking research, experimentation, and the exploration of quantum's boundless potential. Furthermore, it addresses the current developments, existing challenges, ongoing improvements, and future prospects in this dynamic field.  © 2013 IEEE.;"error correction; quantum algorithm; Quantum computing; quantum gates; quantum programming language; quantum revolution; quantum simulators";"Application programs; Computation theory; Computer circuits; Error correction; Learning systems; Quantum computers; Quantum electronics; Quantum optics; Software design; Errors correction; Hardware; Machine-learning; Quantum algorithms; Quantum Computing; Quantum gates; Quantum programming languages; Quantum revolution; Quantum simulators; Logic gates";English;Article;Secondary Study;Philosophical papers;Survey;Software Construction;O artigo fornece uma visão abrangente e atualizada do ecossistema de ferramentas e tecnologias voltadas à computação quântica, incluindo linguagens, simuladores, plataformas e frameworks, organizando-as de forma sistemática para facilitar o entendimento por iniciantes e pesquisadores da área.;Os principais desafios identificados incluem a ausência de padronização nas linguagens e ferramentas, a necessidade de maior acessibilidade a ambientes de simulação e execução, além da limitação de recursos físicos quânticos para testes em larga escala.;"Conceptual framework; Tool support";"Lack of standardization; Quality assurance"
SCP0272;"Korenkov V.V.; Reshetnikov A.G.; Ulyanov S.V.";Quantum Software Engineering Supremacy in Intelligent Robotics;2020;International Science and Technology Conference “Modern Network Technologies”;"Int. Sci. Technol. Conf. ""Modern Netw. Technol. "", MoNeTeC - Proc.";0;0;1;A new approach to a circuit implementation design of quantum algorithmic gates for the realization of quantum massive parallel computing presented. The main attention focused on the development of design method of fast quantum algorithm operators as superposition, entanglement and interference which are in general time-consuming operations due to the number of products that have to be performed. SW&HW support toolkit of supercomputing accelerator of quantum algorithm simulation on classical computer described. The method for performing Grover's interference without product operations introduced. New quantum genetic and quantum fuzzy inference algorithm gate design for intelligent robotic control considered. Quantum software engineering supremacy on Benchmarks demonstrated. © 2020 IEEE.;"classical efficient simulation; hardware architecture; intelligent robotics; Quantum algorithm gate; reduced quantum operations";"Fuzzy inference; Genetic algorithms; Inference engines; Mathematical operators; Molybdenum compounds; Product design; Quantum entanglement; Robotics; Software engineering; Tellurium compounds; Circuit implementation; Design method; Gate design; Intelligent robotics; New approaches; Product operations; Quantum algorithms; Quantum fuzzy inference; Intelligent robots";English;Conference Paper;Primary Study;Proposal of solution;0;The Software Engineering in General;O artigo contribui com uma proposta inovadora de engenharia de software quântica voltada ao controle inteligente em robótica, ao combinar algoritmos de busca quântica (como Grover) com técnicas de inferência fuzzy e algoritmos genéticos quânticos. A introdução do conceito de Quantum Application Gate (QAG) permite realizar controle robusto em tempo real, mesmo diante de situações imprevisíveis. A aplicação prática é validada em experimentos com pêndulo invertido e manipuladores robóticos com sete graus de liberdade, evidenciando melhorias substanciais na precisão e estabilidade quando comparados a abordagens baseadas em computação clássica.;Os principais desafios envolvem a criação de arquiteturas de controle que aproveitem os efeitos quânticos — como superposição, entrelaçamento e inferência fuzzy quântica — de forma eficiente e compatível com os requisitos de robustez, estabilidade e adaptabilidade de sistemas robóticos. A implementação prática dessas abordagens requer integração entre simulação clássica e execução quântica, bem como o desenvolvimento de novas estruturas de controle capazes de extrair informações úteis a partir de estados clássicos imperfeitos, algo que as técnicas clássicas isoladas não conseguem alcançar. Além disso, a orquestração de múltiplos controladores fuzzy por meio de inferência quântica apresenta complexidade de coordenação e demanda otimização contínua dos parâmetros de controle em ambientes dinâmicos.;Empirical study;"Integration challenges; Classical-quantum separation"
SCP0279;"Khan A.A.; Akbar M.A.; Lahtinen V.; Paavola M.; Niazi M.; Alatawi M.N.; Alotaibi S.D.";Agile meets quantum: a novel genetic algorithm model for predicting the success of quantum software development project;2024;Automated Software Engineering;ASE Journal;0;0;0;Quantum software systems represent a new realm in software engineering, utilizing quantum bits (Qubits) and quantum gates (Qgates) to solve the complex problems more efficiently than classical counterparts. Agile software development approaches are considered to address many inherent challenges in quantum software development, but their effective integration remains unexplored. This study investigates key causes of challenges that could hinders the adoption of traditional agile approaches in quantum software projects and develop an Agile-Quantum Software Project Success Prediction Model (AQSSPM). Firstly, we identified 19 causes of challenging factors discussed in our previous study, which are potentially impacting agile-quantum project success. Secondly, a survey was conducted to collect expert opinions on these causes and applied Genetic Algorithm (GA) with Naive Bayes Classifier (NBC) and Logistic Regression (LR) to develop the AQSSPM. Utilizing GA with NBC, project success probability improved from 53.17 to 99.68%, with cost reductions from 0.463 to 0.403%. Similarly, GA with LR increased success rates from 55.52 to 98.99%, and costs decreased from 0.496 to 0.409% after 100 iterations. Both methods result showed a strong positive correlation (rs = 0.955) in causes ranking, with no significant difference between them (t = 1.195, p = 0.240 > 0.05). The AQSSPM highlights critical focus areas for efficiently and successfully implementing agile-quantum projects considering the cost factor of a particular project. © The Author(s) 2024.;"Agile approaches; Prediction model; Quantum software development";"Barium compounds; Cost reduction; Forecasting; Learning systems; Logistic regression; Quantum theory; Software design; Agile approaches; Algorithm model; Logistics regressions; Naive Bayes classifiers; Novel genetic algorithm; Prediction modelling; Project success; Quantum software development; Software development projects; Software project; Genetic algorithms";English;Article;Primary Study;Evaluation research;0;Software Engineering Management;O trabalho desenvolve o modelo AQSSPM (Agile-Quantum Software Project Success Prediction Model), que utiliza algoritmos genéticos combinados com classificadores Naive Bayes e Regressão Logística para prever a probabilidade de sucesso de projetos ágeis-quânticos com base em 19 causas de desafios previamente identificadas, fornecendo um framework empírico para tomada de decisão estratégica e alocação de recursos em projetos híbridos.;Os principais desafios identificados envolvem lacunas de conhecimento específico em computação quântica, dificuldades de integração entre áreas interdisciplinares, escassez de recursos e ferramentas apropriadas, interpretações divergentes das metodologias ágeis e a necessidade de adaptar práticas ágeis ao contexto técnico, social e organizacional do desenvolvimento de software quântico.;"Conceptual framework; Empirical study";"Integration challenges; Modeling difficulty"
SCP0280;"de Paiva B.D.; Esteves A.C.; de Mello R.M.; Travassos G.H.";"Initial results of a rapid review of the technologies supporting the engineering of quantum software systems; [Resultados Iniciais de uma Rapid Review sobre Tecnologias de Apoio à Engenharia de Sistemas de Software Quântico]";2024;Ibero-American Conference on Software Engineering;CIbSE;372;379;0;According to the SWEBOK, the engineering of software products concerns performing different processes, including requirements and programming, among others. Despite evolving the field's evidence-based technologies, contemporary software systems like quantum software systems usually demand further technologies to tackle their unique challenges. Therefore, this work presents the emerging results of a rapid review of the technologies supporting the engineering of quantum software under the perspective of SWEBOK. The initial sample suggests a significant gap and a lack of comprehensive research elements for creating robust technologies to support the engineering of quantum software systems. © 2024 27th Ibero-American Conference on Software Engineering, CIbSE 2024. All rights reserved.;;"Computer aided software engineering; Comprehensive research; Evidence-based; Robust technology; Software products; Software-systems; Requirements engineering";Portuguese;Conference Paper;Secondary Study;0;Rapid Review;The Software Engineering in General;O estudo contribui com um protocolo estruturado de revisão rápida e categorização baseada no SWEBOK para mapear tecnologias de apoio à engenharia de software quântico, revelando lacunas em múltiplas áreas e demonstrando a viabilidade da abordagem adotada, com destaque para a carência de fundamentos bem definidos nos estudos analisados.;Os principais desafios referem-se à complexidade dos sistemas quânticos, à escassez de profissionais especializados, e à ausência de padrões consolidados para a engenharia de software quântico, o que dificulta o desenvolvimento de tecnologias robustas baseadas em evidências.;Process model;System complexity
SCP0282;"Alyami H.; Nadeem M.; Alharbi A.; Alosaimi W.; Ansari M.T.J.; Pandey D.; Kumar R.; Khan R.A.";The evaluation of software security through quantum computing techniques: A durability perspective;2021;Applied Sciences (Switzerland);Applied Sciences (Switzerland);0;0;30;The primary goal of this research study, in the field of information technology (IT), is to improve the security and durability of software. A quantum computing-based security algorithm springs quite a lot of symmetrical approaches and procedures to ensure optimum software retreat. The accurate assessment of software’s durability and security is a dynamic aspect in assessing, administrating, and controlling security for strengthening the features of security. This paper essentially emphasises the demarcation and depiction of quantum computing from a software security perspective. At present, different symmetrical-based cryptography approaches or algorithms are being used to protect different government and non-government sectors, such as banks, healthcare sectors, defense, transport, automobiles, navigators, weather forecasting, etc., to ensure software durability and security. However, many crypto schemes are likely to collapse when a large qubit-based quantum computer is developed. In such a scenario, it is necessary to pay attention to the security alternatives based on quantum computing. Presently, the different factors of software durability are usability, dependability, trustworthiness, and human trust. In this study, we have also classified the durability level in the second stage. The intention of the evaluation of the impact on security over quantum duration is to estimate and assess the security durability of software. In this research investigation, we have followed the symmetrical hybrid technique of fuzzy analytic hierarchy process (FAHP) and fuzzy technique for order of preference by similarity to ideal solution (FTOPSIS). The obtained results, and the method used in this estimation, would make a significant contribution to future research for organising software security and durability (SSD) in the presence of a quantum computer. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.;"Fuzzy AHP; Fuzzy TOPSIS; Quantum computing; Software durability; Software security; Symmetrical technique";;English;Article;Primary Study;Evaluation research;0;Software Security;O artigo propõe um modelo de avaliação da durabilidade da segurança de software frente a ameaças da computação quântica, considerando fatores como confiança humana, usabilidade, confiabilidade e robustez, além de classificar técnicas criptográficas quânticas (como distribuição de chaves quânticas, criptografia baseada em redes, hash quântico e criptografia homomórfica) usando métodos de decisão multicritério para auxiliar no desenvolvimento de software mais resiliente.;Os principais desafios referem-se à ausência de metodologias robustas para quantificar a durabilidade da segurança de software em ambientes quânticos, à incerteza sobre o desempenho futuro de algoritmos clássicos sob ataques quânticos, e à dificuldade de integrar novas abordagens criptográficas em ciclos tradicionais de desenvolvimento de software sem comprometer usabilidade, confiabilidade e performance.;"Process model; Collaboration support";Modeling difficulty
SCP0284;"Mutiara A.B.; Refianti R.; Karamoy J.S.K.";On a testing and implementation of quantum gate and measurement emulator (QGAME);2013;International Journal of Engineering and Technology;Intern. J. Eng. Technol.;2186;2195;1;"Today, people are looking forward to get an awesome computational power. This kind of desire can be answered by quantum computing. By adopting quantum mechanics theory, it can generate a very fast computation result. As known, quantum mechanics can establish that particle can also become wave; it shows that electron can be in duality. Through this theory, even a human teleportation is issued can be really happened in the future. However, it needs a high requirement of hardware support to implement the real quantum computing. That is why it is difficult to bring quantum computing into reality. This research presents a study about quantum computing. Here it is studied, a specialty of quantum computing, like superposition, as if the classical computer can do it. Since there was a marvellous research about quantum computer simulation that runs on classical computer, this research provides an analysis about our testing and implementation of Quantum Gate and Measurement Emulator (QGAME). Our analysis, testing and implementation are based on a method that always use in the software engineering field.";"Quantum computation; Quantum computer simulation; Software engineering";;English;Article;Primary Study;Proposal of solution;0;Software Testing;O trabalho contribui com o desenvolvimento e análise do QGAME, um emulador que permite simular o comportamento de algoritmos quânticos baseados em portas, incluindo medições, superposição e uso de oráculos. A ferramenta oferece funcionalidades como execução condicionada a medições, inserção de diferentes algoritmos e avaliação estatística dos resultados, o que possibilita o entendimento do comportamento de programas quânticos em diferentes cenários. Além disso, o artigo estrutura uma análise de engenharia de software sobre requisitos, arquitetura, pontos de função, testes e diagramas de caso de uso, reforçando a aplicabilidade da simulação quântica dentro de práticas clássicas de desenvolvimento.;Os principais desafios identificados são a limitação de escalabilidade dos simuladores em ambientes clássicos, especialmente para múltiplos qubits e algoritmos complexos, além da ausência de interface gráfica e mecanismos visuais que facilitem a compreensão do funcionamento interno das simulações. O trabalho também ressalta a dificuldade de manter a fidelidade da simulação com algoritmos que envolvem oráculos e medições condicionais, exigindo aprimoramentos em desempenho, usabilidade e suporte a diferentes linguagens quânticas para tornar o ambiente mais acessível a iniciantes e pesquisadores da área.;"Tool support; Reference architecture; Requirements engineering";Other technical limitation
SCP0287;"Sepúlveda S.; Pérez-Castillo R.; Piattini M.";A software product line approach for developing hybrid software systems;2025;Information and Software Technology;INFSOF;0;0;0;Context: Quantum computing is rapidly emerging as a transformative force in technology. We will soon increasingly encounter hybrid systems that combine quantum technology with classical software. Software engineering techniques will be required to manage the complexity of designing such systems and their reuse. Objective: This paper introduces preliminary ideas concerning developing quantum–classical software using a Software Product Line approach. Method: This approach addresses the mentioned challenges and provides a feature model and a whole process to manage variability during the design and development of hybrid quantum–classical software. The usage of this approach is illustrated and discussed using an example in the logistics domain. Results: The preliminary insights show the feasibility and suitability of applying the proposed approach to develop complex quantum–classical software. Conclusions: The main implication of this research is that it can help to manage complexity, maximize the reuse of classical and quantum software components, and deal with the highly changing technological stack in the current quantum computing field. © 2024;"Feature modeling; Hybrid systems; Quantum computing; Software product lines; Variability";"Computer software reusability; Quantum electronics; Engineering techniques; Feature models; Hybrid software systems; Quantum Computing; Quantum technologies; Quantum-classical; Reuse; Software Product Line; Variability; Whole process; Quantum computers";English;Article;Primary Study;Proposal of solution;0;Software Design;O artigo contribui com uma arquitetura orientada a linha de produtos de software, denominada H-SPL, que permite a reutilização e customização de artefatos para desenvolvimento de sistemas híbridos quântico-clássicos, abordando também a variabilidade inerente a esse tipo de sistema e apresentando um estudo de caso que ilustra a aplicação prática da abordagem proposta.;O trabalho destaca como principal desafio o tratamento da variabilidade entre componentes quânticos e clássicos, exigindo soluções arquiteturais que garantam reutilização eficiente e integração transparente em um contexto onde as tecnologias estão em constante evolução.;"Empirical study; Reference architecture";Integration challenges
SCP0296;"Kaul M.; Küchler A.; Banse C.";A Uniform Representation of Classical and Quantum Source Code for Static Code Analysis;2023;International Conference on Quantum Computing and Engineering;QCE;1013;1019;3;The emergence of quantum computing raises the question of how to identify (security-relevant) programming errors during development. However, current static code analysis tools fail to model information specific to quantum computing. In this paper, we identify this information and propose to extend classical code analysis tools accordingly. Among such tools, we identify the Code Property Graph to be very well suited for this task as it can be easily extended with quantum computing specific information. For our proof of concept, we implemented a tool which includes information from the quantum world in the graph and demonstrate its ability to analyze source code written in Qiskit and OpenQASM. Our tool brings together the information from the classical and quantum world, enabling analysis across both domains. By combining all relevant information into a single detailed analysis, this powerful tool can facilitate tackling future quantum source code analysis challenges. © 2023 IEEE.;"quantum code property graph; quantum source code analysis; software security; static code analysis";"Quantum optics; Property; Quantum code property graph; Quantum codes; Quantum Computing; Quantum source code analyse; Quantum world; Software security; Source code analysis; Source codes; Static code analysis; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O artigo contribui ao estender o modelo Code Property Graph (CPG) para suportar a análise conjunta de código clássico e quântico, criando o Quantum Code Property Graph (QCPG). Essa nova estrutura permite representar operações, qubits, medições e controle clássico de forma integrada e independente da linguagem usada, como Qiskit e OpenQASM. O protótipo desenvolvido permite detectar padrões de erro, como operações supérfluas, bits constantes e condições determinísticas, além de calcular métricas de complexidade de circuitos. A abordagem facilita a aplicação de técnicas de análise estática à engenharia de software quântico, incluindo segurança e qualidade de código.;Os principais desafios incluem a modelagem precisa da interação entre partes clássicas e quânticas dos programas, a escassez de bases de dados com falhas reais em código quântico e a necessidade de escalabilidade à medida que circuitos e arquiteturas se tornam mais complexos. Além disso, a ausência de uma padronização nas linguagens e frameworks dificulta a generalização da abordagem, exigindo abstrações que mantenham flexibilidade sem perda de informações relevantes para a análise estática de software híbrido.;Process model;Lack of standardization
SCP0300;"Jhaveri S.; Krone-Martins A.; Lopes C.V.";Cloning and Beyond: A Quantum Solution to Duplicate Code;2023;International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software;Onward! - Proc. ACM SIGPLAN Int. Symp. New Ideas, New Paradigms, Reflections Program. Softw., Co-located: SPLASH;32;49;1;Quantum computers are becoming a reality. The advantage of quantum computing is that it has the potential to solve computationally complex problems in a fixed amount time, independent of the size of the problem. However, the kinds of problems for which these computers are a good fit, and the ways to express those problems, are substantially different from the kinds of problems and expressions used in classical computing. Quantum annealers, in particular, are currently the most promising and available quantum computing devices in the short term. However, they are also the most foreign compared to classical programs, as they require a different kind of computational thinking. In order to ease the transition into this new world of quantum computing, we present a novel quantum approach to a well-known software problem: code clone detection. We express code clone detection as a subgraph isomorphism problem that is mapped into a quadratic optimization problem, and solve it using a DWave quantum annealing computer. We developed a quantum annealing algorithm that compares Abstract Syntax Trees (AST) and reports an energy value that indicates how similar they are. The motivation behind this research goes well beyond code duplicate detection: our approach paves the way into how to express software engineering problems as optimization problems that can be solved by quantum annealers.  © 2023 Owner/Author.;"Quadratic Unconstrained Discrete Optimization (QUDO); Quantum Computing; Quantum-Based Code Clone Detection; Subgraph Isomorphism";"Annealing; Cloning; Quadratic programming; Set theory; Software engineering; Trees (mathematics); Code clone detection; Complex problems; Discrete optimization; Quadratic unconstrained discrete optimization; Quanta computers; Quantum annealing; Quantum Computing; Quantum-based code clone detection; Subgraph isomorphism; Time independents; Quantum computers";English;Conference Paper;Primary Study;Evaluation research;0;Software Engineering Models and Methods;O trabalho introduz uma forma inovadora de usar computação quântica — especificamente o algoritmo de Grover — para representar e identificar clones de código, demonstrando sua aplicabilidade por meio de três cenários distintos de duplicação de código e sugerindo um modelo promissor para o futuro da engenharia de software apoiada por tecnologias quânticas.;Os principais desafios envolvem a adaptação dos conceitos de clonagem de código para o modelo de computação quântica, o mapeamento adequado do código fonte para circuitos quânticos, e a necessidade de ambientes híbridos clássicos-quânticos para uma execução eficiente e interpretável.;Tool support;Modeling difficulty
SCP0307;"Wang C.; Chen J.; Ge J.; Wu X.; Qu Q.; Luo L.";Research on Quality Model for Quantum Simulator Software;2023;International Winter Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing;ACIS Int. Winter Conf. Softw. Eng., Artif. Intell., Netw. Parallel/Distrib. Comput., SNPD-Winter;134;140;1;In recent years, the demand for arithmetic power from all walks of life is growing, especially the increasing popularity of AIGC, which makes people realize that huge technological progress cannot be made without the support of large arithmetic power. Quantum computing may bring a leap in computing power and become a 'trigger' and 'catalyst' to accelerate the development of science and technology innovation, and its technical development trend and application prospects have become a hot issue of concern, and quantum simulators are a very important part of the development process. The development of quantum simulators is a very important part of the process. However, due to the lack of systematic evaluation theories and methods, it is difficult to quantify and analyze the quality of the increasing number of simulators on the market, which may hinder researchers from practicing their quantum algorithms objectively or developing quantum technologies. For these reasons, this paper proposes a quality model for quantum simulator software, which reflects the quality characteristics of simulators in seven aspects, such as functionality and performance efficiency, and selects some simulators for experimental validation of the proposed model to prove its rationality. © 2023 IEEE.;"Evaluation; Quantum Simulator; Software Quality";"Behavioral research; Computation theory; Computer software selection and evaluation; Computing power; Quantum computers; Computing power; Evaluation; Power; Quality modeling; Quantum Computing; Quantum simulators; Simulator software; Software Quality; Technological progress; ]+ catalyst; Quality control";English;Conference Paper;Primary Study;Proposal of solution;0;Software Quality;O trabalho contribui ao apresentar um modelo sistemático e detalhado para avaliação da qualidade de simuladores de computação quântica, com base em sete dimensões: adequação funcional, eficiência de desempenho, usabilidade, confiabilidade, segurança, manutenibilidade e documentação do usuário. O modelo é fundamentado nas normas ISO/IEC 25010 e 25051, mas adaptado às particularidades dos simuladores, como precisão de simulação e capacidade de previsão. A validação do modelo foi feita por meio da execução do algoritmo de Grover nas três ferramentas simuladoras mais conhecidas, resultando em uma análise comparativa entre elas que demonstra a eficácia do modelo proposto.;Os principais desafios destacados incluem a ausência de padrões consolidados para avaliar a qualidade de simuladores quânticos, a diversidade de propósitos e funcionalidades entre as ferramentas existentes, e a dificuldade de mensurar atributos como precisão de simulação e escalabilidade de forma objetiva. Outro desafio relevante é adaptar os critérios tradicionais de qualidade de software à natureza híbrida e científica desses simuladores, assegurando que os parâmetros avaliados sejam relevantes para aplicações reais e futuras na computação quântica. Além disso, o desenvolvimento de benchmarks confiáveis e a manutenção de um modelo flexível, capaz de acompanhar a evolução rápida da área, representam obstáculos metodológicos importantes.;Tool support;Modeling difficulty
SCP0310;"Marchesi L.; Marchesi M.; Tonelli R.";A survey on Cryptoagility and Agile Practices in the light of quantum resistance;2025;Information and Software Technology;INFSOF;0;0;0;"Context: Crypto-agility, a name that stems from agile methodologies for software development, means the ability to modify quickly and securely cryptographic algorithms in the event of a compromise. The advent of quantum computing poses existential threats to current cryptography, having the power to breach current cryptography systems. Objective: We investigated whether and to what extent agile practices for software development are suited to support crypto-agility, or not. In particular, we discuss their usefulness in the context of substituting current algorithms with quantum-resistant ones. Method: First, we analyzed the literature to define a subset of 15 agile practices potentially relevant to cryptographic software development. Then, we developed a questionnaire to assess the suitability of agile practices for obtaining crypto-agility. We performed a Web search of relevant documents about crypto-agility and quantum resistance and sent their authors the questionnaire. We also sent the questionnaire to cybersecurity officers of four Italian firms. We analyzed and discussed the responses to 32 valid questionnaires. Results: The respondents’ affiliations are evenly distributed between researchers and developers. Most of them are active, or somehow active, in quantum-resistant cryptography and use agile methods. Most of the agile practices are deemed to be quite useful, or very useful to get crypto-agility, the most effective being Continuous Integration and Coding Standards; the least appreciated is Self-organizing Team. Conclusion: According to researchers and developers working in the field, the safe transition of cryptographic algorithms to quantum-resistant ones can benefit from the adoption of many agile practices. Further software engineering research is needed to integrate agile practices in more formal cryptographic software development processes. © 2024 The Authors";"Agile methods; Cryptographic agility; Cryptographic algorithms; Quantum resistance";"Software design; 'current; Agile Methodologies; Agile methods; Agile practices; Cryptographic agility; Cryptographic algorithms; Cryptographic software; CryptoGraphics; Quantum Computing; Quantum resistance; Quantum cryptography";English;Article;Primary Study;Evaluation research;0;Software Security;O estudo contribui com uma análise crítica e integrativa sobre como práticas ágeis e o conceito de cryptoagilidade podem ser aplicados para responder aos desafios da criptografia resistente à computação quântica, propondo uma nova perspectiva para lidar com atualizações criptográficas frequentes e adaptativas no ciclo de vida de sistemas de software.;O principal desafio identificado está na necessidade de integrar abordagens de engenharia de software ágil com estratégias eficazes de cryptoagilidade, considerando a incerteza quanto ao impacto e cronograma da computação quântica, bem como a complexidade das atualizações contínuas de algoritmos criptográficos em sistemas de larga escala.;"Conceptual framework; Empirical study";System complexity
SCP0326;"Gheorghe-Pop I.-D.; Tcholtchev N.; Ritter T.; Hauswirth M.";Computer Scientist’s and Programmer’s View on Quantum Algorithms: Mapping Functions’ APIs and Inputs to Oracles;2022;Computing Conference;Computing Conference;188;203;2;Quantum Computing (QC) is a promising approach which is expected to boost the development of new services and applications. Specific addressable problems can be tackled through acceleration in computational time and advances with respect to the complexity of the problems, for which QC algorithms can support the solution search. However, QC currently remains a domain that is strongly dominated by a physics’ perspective. Indeed, in order to bring QC to industrial grade applications we need to consider multiple perspectives, especially the one of software engineering and software application/service programming. Following this line of thought, the current paper presents our computer scientist’s view on the aspect of black-box oracles, which are a key construct for the majority of currently available QC algorithms. Thereby, we observe the need for the input of API functions from the traditional world of software engineering and (web-)services to be mapped to the above mentioned black-box oracles. Hence, there is a clear requirement for automatically generating oracles for specific types of problems/algorithms based on the concrete input to the belonging APIs. In this paper, we discuss the above aspects and illustrate them on two QC algorithms, namely Deutsch-Jozsa and the Grover’s algorithm. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.;"API; Grover’s algorithm; Oracle; Quantum computing";;English;Conference Paper;Primary Study;Opinion papers;0;Software Design;O trabalho contribui ao evidenciar a importância dos oráculos quânticos como ponto de entrada para representar problemas clássicos em algoritmos quânticos. A partir de uma análise técnica detalhada, os autores propõem uma visão sistematizada para automatizar a geração de oráculos com base nas APIs clássicas, facilitando o desenvolvimento de software quântico. A abordagem promove a abstração do processo de construção dos oráculos, destacando a necessidade de ferramentas que façam a ponte entre problemas computacionais convencionais e suas contrapartes quânticas.;Os principais desafios envolvem a complexidade na geração de oráculos personalizados para diferentes problemas, a dificuldade de mapear APIs clássicas para circuitos quânticos, e as limitações da infraestrutura atual de hardware quântico, incluindo restrições de arquitetura e ruído. Além disso, o desenvolvimento de um processo automatizado e agnóstico a linguagem de programação para construção de oráculos ainda é incipiente e requer avanços teóricos e práticos para se tornar viável em larga escala.;"Process model; Tool support";Hardware limitations
SCP0342;"Wang X.; Muqeet A.; Yue T.; Ali S.; Arcaini P.";Test Case Minimization with Quantum Annealers;2024;Transactions on Software Engineering and Methodology;TOSEM;0;0;0;Quantum annealers are specialized quantum computers for solving combinatorial optimization problems with special quantum computing characteristics, e.g., superposition and entanglement. Theoretically, quantum annealers can outperform classic computers. However, current quantum annealers are constrained by a limited number of qubits and cannot demonstrate quantum advantages. Nonetheless, research is needed to develop novel mechanisms to formulate combinatorial optimization problems for quantum annealing (QA). However, QA applications in software engineering remain unexplored. Thus, we propose BootQA, the very first effort at solving test case minimization (TCM) problems on classical software with QA. We provide a novel TCM formulation for QA and utilize bootstrap sampling to optimize the qubit usage. We also implemented our TCM formulation in three other optimization processes: simulated annealing (SA), QA without problem decomposition, and QA with an existing D-Wave problem decomposition strategy, and conducted an empirical evaluation with three real-world TCM datasets. Results show that BootQA outperforms QA without problem decomposition and QA with the existing decomposition strategy regarding effectiveness. Moreover, BootQA's effectiveness is similar to SA. Finally, BootQA has higher efficiency in terms of time when solving large TCM problems than the other three optimization processes.  © 2024 Copyright held by the owner/author(s). Publication rights licensed to ACM.;"D-Wave; quantum annealer; quantum computing; test case minimization";"Application programs; Constrained optimization; Quantum electronics; Quantum entanglement; Seismic waves; Shear waves; Simulated annealing; Software testing; Combinatorial optimization problems; D-wave; Decomposition strategy; Minimization problems; Optimisations; Problem decomposition; Quantum annealer; Quantum annealing; Quantum Computing; Test-case minimizations; Qubits";English;Article;Primary Study;Evaluation research;0;Software Testing;O trabalho apresenta uma abordagem inovadora baseada em quantum annealing para o problema de minimização de casos de teste, formulando-o como QUBO e demonstrando que soluções próximas do ótimo podem ser obtidas em menor tempo em comparação com algoritmos clássicos.;O principal desafio reside em mapear eficientemente problemas de engenharia de software, como minimização de testes, em modelos QUBO que possam ser resolvidos por computadores quânticos, considerando suas limitações atuais de hardware e ruído.;Process model;"Modeling difficulty; Quality assurance; Hardware limitations"
SCP0343;"Hans J.; Groppe S.";Silq2Qiskit - Developing a quantum language source-to-source translator;2022;International Conference on Computer Science and Software Engineering;CSSE;581;590;2;Quantum Computers are quickly becoming capable of solving certain tasks substantially faster than classical computers and the promise of quantum-driven advancements in research and economy continues to accelerate the development of quantum technology. However, most software development for quantum computers relies on the tedious manual implementation of quantum circuits on a very low level of abstraction, with tools such as the prominent IBM Qiskit SDK. In 2020, Silq, a quantum language to enable more intuitive and robust quantum development, was presented. While it substantially simplifies the write- and readability of quantum programs, Silq Code can only be run through its simulator on classical hardware. In comparison, Qiskit and its close integration with IBM's Quantum Experience even enable users to run and evaluate quantum programs on physical quantum hardware. This paper proposes an automatic source-to-source translator for basic Silq Code and the extension of Qiskit by core concepts of Silq's abstraction layers, such as Quantum Indexing and Quantum Control Flow. © 2022 ACM.;"Quantum Language; Source-to-Source translation";"Abstracting; Computer hardware; Program translators; Qubits; Translation (languages); Abstraction layer; Close integration; Control-flow; Quanta computers; Quantum circuit; Quantum control; Quantum language; Quantum technologies; Source-to-source translations; Source-to-source translators; Software design";English;Conference Paper;Primary Study;Evaluation research;0;Software Engineering Models and Methods;O estudo apresenta uma arquitetura híbrida de três camadas que integra algoritmos de aprendizado de máquina quântico (QBoost no D-Wave e VQC no IBM Qiskit) para classificar e detectar ameaças em tempo real em dados de Cidades Inteligentes. A arquitetura é composta por uma interface de dashboard, uma aplicação principal com pipeline de detecção de intrusos, um banco de dados PostgreSQL e serviços em nuvem quântica. A pesquisa demonstra, com base no uso do conjunto de dados TON-IoT, que o algoritmo QBoost se destaca em desempenho e tempo, promovendo o uso de computação quântica como serviço para reforçar a segurança urbana.;Os desafios enfrentados envolvem o balanceamento de dados desequilibrados, limitação de recursos computacionais em dispositivos quânticos reais, restrições de tempo e qualidade na execução de algoritmos em simuladores, e a integração segura entre os sistemas convencionais e os serviços quânticos. Além disso, a aplicabilidade generalizada de algoritmos quânticos ainda precisa ser validada em diferentes domínios de dados de cidades inteligentes, como saúde, governança e energia, considerando também a escalabilidade e manutenção desses sistemas em tempo real.;Reference architecture;Integration challenges
SCP0347;"Lehka L.V.; Shokaliuk S.V.";"Quantum programming is a promising direction of IT development; [Квантове програмування – перспективний напрямок розвитку ІТ]";2018;Student Workshop on Computer Science and Software Engineering;CS&SE@SW;76;82;11;The purpose of this study is to substantiate the prospects of using quantum computers for the needs of modern society. So, in the article is given the interpretation of the basic concepts of quantum mechanics, are noted the main disadvantages and certain advantages of the using of quantum computers for ultrafast solutions of public important problems. In addition, is given the general information about the successful attempts to the development of quantum computers, in particular, by IBM, Intel, Google, Microsoft, and the openness of cloud access to them. As a further direction of research is considered the development of a methodology of quantum programming trainings for high-school students. © 2018 CEUR-WS. All Rights Reserved.;"Quantum computer; Quantum computing; Quantum programming; Qubit";"Quantum computers; Quantum theory; Software engineering; Students; Basic concepts; General information; High school students; It development; Quantum Computing; Quantum programming; Qubit; Ultra-fast; Computer programming";Ukrainian;Conference Paper;Primary Study;Opinion papers;0;Computing Foundations;O artigo contribui ao apresentar uma introdução conceitual aos princípios da computação quântica — como qubits, superposição e entrelaçamento — e destaca o papel de empresas como IBM, Intel, Google e Microsoft no desenvolvimento de computadores quânticos. Além disso, propõe a inclusão da programação quântica no ensino médio como forma de preparar futuras gerações para as exigências da revolução tecnológica iminente.;Os desafios apontados giram em torno da viabilidade prática da programação quântica e do ensino dessa tecnologia, dado que sua aplicação exige conhecimento avançado de física quântica, familiaridade com algoritmos específicos e domínio de ferramentas ainda pouco difundidas. Também há dificuldades técnicas na construção e operação dos computadores quânticos, exigindo condições ambientais extremas e infraestrutura altamente especializada.;"Role definition; Education and training";"Tool support gap; Infrastructure limitations"
SCP0350;"Romero-Álvarez J.; Alvarado-Valiente J.; Moguel E.; Garcia-Alonso J.; Murillo J.M.";Quantum Services: A Tutorial on the Technology and the Process;2024;International Conference on Service-Oriented Computing;ICSOC;335;342;1;The emergence of quantum computing has introduced a new paradigm in the realm of computer science and software engineering, expanding the frontiers of computer applications designed for problem-solving. The transformation of quantum algorithms into services is a promising avenue to address this new paradigm, as it allows them to be integrated into conventional distributed applications. This tutorial provides an overview of the process of transforming quantum algorithms into quantum services. It explains how these quantum services can be effectively deployed, specifically using the Amazon Braket platform for quantum computing, and how they can be invoked through classical service endpoints. This tutorial not only presents the step-by-step methodology but also provides insight into best practices for successful implementation through a development process. It highlights the use of an extended version of the OpenAPI Specification and the automation capabilities offered by GitHub Actions, which play a key role in improving efficiency throughout the development and deployment phases. © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2024.;"Continuous Deployment; OpenAPI; Quantum Computing; Quantum Programming; Service-Oriented Computing";"Problem solving; Quantum computers; Quantum theory; Best practices; Computer science and software engineerings; Continuous deployment; Distributed applications; OpenAPI; Problem-solving; Quantum algorithms; Quantum Computing; Quantum programming; Service oriented computing; Application programs";English;Conference Paper;Primary Study;Opinion papers;0;Software Architecture;O artigo contribui ao estabelecer o conceito de “Quantum Services” como blocos modulares de funcionalidade quântica que podem ser utilizados por aplicações clássicas, promovendo reuso, encapsulamento e separação de preocupações. A proposta inclui uma arquitetura orientada a serviços, com camadas bem definidas para integração, orquestração e execução de componentes quânticos e clássicos, apoiando o desenvolvimento sustentável de aplicações híbridas e sua integração com plataformas de computação em nuvem.;Os principais desafios envolvem a heterogeneidade dos ambientes de execução, a ausência de padrões consolidados para especificação e interoperabilidade de serviços quânticos, e a dificuldade de encapsular corretamente os efeitos quânticos (como entrelaçamento e superposição) em interfaces reutilizáveis. Além disso, a integração entre fluxos de controle clássico e operações quânticas exige arquiteturas robustas, mecanismos de segurança e estratégias para lidar com limitações de acesso a dispositivos quânticos reais.;"Tool support; Reference architecture; Hybrid systems";Integration challenges
SCP0353;"Souravlas S.; Orfanaki M.; Girousi E.";An Oracle-Based Framework for Implementing a Quantum Parallel Decoder/Multiplexer;2023;IEEE Access;IEEE Access;141112;141126;6;Quantum computers excel at solving complex computational problems more efficiently than conventional supercomputers. However, a significant challenge in quantum computing is implementing key operations of conventional computers, such as arithmetic operations and decoding, using quantum hardware (quantum gates). The absence of quantum gates directly implementing fundamental Boolean operations poses a hurdle. This paper introduces an oracle-based approach for implementing quantum decoding and multiplexing in a joint circuit, where oracles function as pre-programmed black boxes determining data flow. The parallel operation of oracles distinguishes this approach from sequential circuits, improving overall performance. The study validates the design using the Qiskit open-source software development kit through extensive simulations.  © 2023 The Authors.;"decoding; multiplexing; Quantum computing";"Computation theory; Computer circuits; Decoding; Open source software; Open systems; Quantum computers; Quantum electronics; Quantum optics; Software design; Supercomputers; Timing circuits; Computational problem; Decoding; High potential; Parallel decoder; Quanta computers; Quantum circuit; Quantum Computing; Quantum gates; Logic gates";English;Article;Primary Study;Evaluation research;0;Software Architecture;O estudo apresenta uma solução inovadora para a construção de circuitos quânticos que integram funções de decodificação e multiplexação utilizando oráculos programáveis, demonstrando que é possível reduzir significativamente o tempo de execução por meio de paralelismo, sem comprometer a eficiência funcional, além de validar o framework com o uso do Qiskit.;O principal desafio enfrentado foi a criação de um circuito quântico eficiente que implementasse operações complexas típicas de computadores clássicos, como decodificação e multiplexação, sem uso de operações booleanas convencionais, respeitando a reversibilidade dos circuitos quânticos e minimizando a geração de saídas inúteis.;Conceptual framework;Other technical limitation
SCP0354;"Nguyen T.; McCaskey A.J.";Extending Python for Quantum-classical Computing via Quantum Just-in-time Compilation;2022;Transactions on Quantum Computing;TQC;0;0;1;Python is a popular programming language known for its flexibility, usability, readability, and focus on developer productivity. The quantum software community has adopted Python on a number of large-scale efforts due to these characteristics, as well as the remote nature of near-term quantum processors. The use of Python has enabled quick prototyping for quantum code that directly benefits pertinent research and development efforts in quantum scientific computing. However, this rapid prototyping ability comes at the cost of future performant integration for tightly coupled CPU-QPU architectures with fast-feedback. Here, we present a language extension to Python that enables heterogeneous quantum-classical computing via a robust C++ infrastructure for quantum just-in-time (QJIT) compilation. Our work builds off the QCOR C++ language extension and compiler infrastructure to enable a single-source, quantum hardware-agnostic approach to quantum-classical computing that retains the performance required for tightly coupled CPU-QPU compute models. We detail this Python extension, its programming model and underlying software architecture, and provide a robust set of examples to demonstrate the utility of our approach. © 2022 Association for Computing Machinery.;"compilers; domain specific languages; Quantum computing; quantum programming";"C++ (programming language); Closed loop control systems; Problem oriented languages; Program compilers; Quantum computers; Quantum optics; Classical computing; Compiler; Domains specific languages; Just-in-time compilation; Language extensions; Quantum Computing; Quantum programming; Quantum-classical; Software community; Tightly-coupled; Python";English;Article;Primary Study;Proposal of solution;0;Software Construction;O artigo introduz um compilador just-in-time (QJIT) para Python baseado na infraestrutura QCOR e LLVM, permitindo que programadores escrevam código híbrido clássico-quântico em um único script Python com suporte a sintaxe de alto nível, abstração de kernels, passagem de funções, composição modular e execução retargetable em diversos backends, além de integrar bibliotecas como NumPy, Scipy, OpenFermion e HPC simulators como o TNQVM.;Os principais desafios incluem a necessidade de traduzir código Python dinamicamente para C++ com tipagem estática, manter compatibilidade entre runtime JIT e linguagens interpretadas, garantir a portabilidade e escalabilidade para execução em ambientes com HPC e QPUs reais, e oferecer ferramentas de depuração e análise para um modelo híbrido cada vez mais complexo.;Tool support;Modeling difficulty
SCP0355;"Aparicio-Morales Á.M.; Haghparast M.; Mäkitalo N.; Garcia-Alonso J.; Berrocal J.; Stirbu V.; Mikkonen T.; Murillo J.M.";Liquifying Quantum-Classical Software-Intensive System of Systems;2024;International Conference on Software Analysis, Evolution and Reengineering ;SANER;159;166;0;Software-Intensive Systems are applications that use a high amount of computational resources for the execution of complex tasks in which a constant flow of information is needed. In the current conception of the computing continuum, such computational resources are spread in the infrastructure from the Cloud to the Edge and the tasks are mapped on resources following placing and replacing strategies. In this scope, this paper puts together two emergent paradigms. On the one hand, the emergence of the Quantum Computation paradigm will allow these intensive systems to incorporate specific tasks that are unaffordable by classic computers. On the other hand, the liquid software model proposes a fluid movement of the software and information from one device to another. Therefore, in this paper, we present a broad overview of software-intensive systems from a liquid software perspective and support quantum functionalities in their processes. To provide a better understanding of how these systems can take form, we explore a case study based on weather forecasts. ©2024 IEEE.;"Computing Continuum; Liquid software; Quantum computing; Quantum Software Engineering; Software-Intensive Systems of Systems";"Application programs; Computer software selection and evaluation; Quantum electronics; Complex task; Computational resources; Computing continuum; Liquid software; Quantum Computing; Quantum software engineering; Quantum-classical; Software intensive systems; Software-intensive system of system; System-of-systems; Quantum computers";English;Conference Paper;Primary Study;Opinion papers;0;Software Architecture;O trabalho contribui ao introduzir o conceito de “Liquifying Quantum-Classical Software-Intensive System of Systems”, que propõe a integração fluida de componentes clássicos e quânticos em sistemas complexos e distribuídos. A proposta é apoiada por uma arquitetura baseada em middleware que avalia dinamicamente parâmetros de execução quântica (QEES) para selecionar e orquestrar tarefas em ambientes híbridos. Essa abordagem permite a execução adaptativa e eficiente de aplicações intensivas em software, com destaque para a previsão meteorológica, considerando os desafios de latência, sincronização e distribuição entre Edge, Fog e Cloud. O artigo também discute aspectos de segurança, privacidade e escalabilidade na construção desses sistemas liquefeitos.;Os principais desafios envolvem a sincronização de dados e estados entre múltiplos dispositivos e ambientes computacionais, a orquestração eficiente de tarefas quânticas em meio a restrições de acesso, desempenho e custo, e a viabilidade de construir sistemas com comportamento fluido — ou seja, capazes de se adaptar automaticamente a diferentes recursos computacionais. Há também barreiras técnicas significativas relacionadas à escassez de infraestrutura quântica disponível, à limitação de abstrações e ferramentas para desenvolvimento de software quântico e à necessidade de desenvolver middleware robusto que seja compatível com arquiteturas heterogêneas e que consiga atender aos requisitos de sistemas intensivos em software em tempo real.;"Tool support; Reference architecture; Hybrid systems";"Tool support gap; Infrastructure limitations"
SCP0357;"Exman I.; Nechaev A.";Quantum Software Models: Software Density Matrix is a Perfect Direct Sum of Module Matrices;2022;International Conference on Software Engineering and Knowledge Engineering  ;SEKE;434;439;2;Quantum Software Models is a theoretical framework to systematically design and analyze any software system - be it quantum, classical or hybrid - representing it by a design Density Matrix. Recently, we have demonstrated a top-down approach, to decompose a whole software system Density Matrix into modules, using basis vector projectors of the Matrix. However, it would be even more natural to have a systematic bottom-up procedure, to compose a whole software system Density Matrix, given a set of well-designed software module matrices, taken as sub-systems. This is exactly the paper's purpose. The result obtained: the whole software system Density Matrix is a perfect Direct Sum of module density matrices. This result yields clear software design benefits: it is bidirectional, one can traverse the software system hierarchy top-down or bottom-up, in particular, gradually building up the whole system from verified correct modules, assured by spectral decoupling techniques. The claim is formally validated and is illustrated by software system studies. © 2022 Knowledge Systems Institute Graduate School. All rights reserved.;"Direct Sum; Modularity; Module Density Matrix; Quantum Software; Software Density Matrix; Software Design";"Computer software; Knowledge engineering; Density matrix; Direct sum; matrix; Modularity; Module density matrix; Quantum software; Software density matrix; Software modeling; Software-systems; Software design";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O artigo contribui com a formalização da matriz de densidade como representação completa e modular de sistemas de software, propondo que a matriz do sistema completo pode ser obtida como uma soma direta perfeita das matrizes dos módulos. A abordagem permite projetar software de maneira top-down ou bottom-up com garantias formais de integridade conceitual, modularidade e completude da informação, ilustrando o uso da técnica tanto em sistemas clássicos (como o padrão Command) quanto em sistemas quânticos (como o algoritmo de Grover).;Os principais desafios envolvem a construção de módulos de software que sejam algebraicamente bem projetados — ou seja, com independência linear, ortogonalidade e coerência estrutural — e a manipulação adequada de conceitos sobrepostos e acoplamentos espúrios entre módulos. Outro desafio é garantir que essas representações possam ser aplicadas a sistemas híbridos em larga escala, mantendo a escalabilidade da composição por soma direta e a fidelidade da modelagem, especialmente em ambientes computacionais com recursos quânticos limitados.;Education and training;Lack of modeling standards
SCP0369;"Barletta V.S.; Caivano D.; Lako A.; Pal A.";Quantum as a Service Architecture for Security in a Smart City;2023;Communications in Computer and Information Science;Commun. Comput. Info. Sci.;76;89;6;Smart Cities are becoming a reality now with ample interest and investment from both government and private entities. As the number of Smart Cities increases, so does the sheer size and variety of data, the major part of which comes from Internet of Things (IoT) sensors embedded in devices. Millions of intelligent devices may be vulnerable to cyberattacks or threats, potentially harming one or more connected devices or exposing sensitive data. Therefore, Smart Cities have Intelligent Operations Centers (IOC), using different machine learning (ML) algorithms to monitor the data and take necessary actions to protect or contain any security incident. The advent of Quantum Computing (QC) has led to many initiatives for using QC in various applications of a Smart City but using Quantum Computing as a service is not yet fully contemplated in this context. In this work, we propose an architecture for Smart City security using Quantum as a Service (QaaS) for analyzing and classifying Smart City data. The proposed architecture uses two different Quantum Classifiers, implemented in the D-Wave Leap Quantum Cloud (QBoost) and IBM Quantum Services (Variational Quantum Classifier), for real-time classification of data and displays security incidents on a conveniently designed dashboard for further actions by the Security Operations Center (SOC) specialist. Further experiments have shown that D-Wave Leap Quantum Cloud-based QBoost performed the best among the quantum classifiers both regarding quality and time. © 2023, The Author(s), under exclusive license to Springer Nature Switzerland AG.;"Quantum as a service; Quantum Computing; Smart City; Software Engineering";"Internet of things; Machine learning; Sensitive data; Smart city; Software engineering; Cyber-attacks; Intelligent devices; Intelligent operations; Operation center; Quantum as a service; Quantum Computing; Security incident; Sensitive datas; Services Architectures; Sheer size; Classification (of information)";English;Conference Paper;Primary Study;Proposal of solution;0;Software Architecture;O estudo desenvolve e apresenta o Silq2Qiskit, um tradutor fonte-a-fonte capaz de converter automaticamente programas em Silq, uma linguagem de programação quântica de alto nível, para Qiskit, integrando funcionalidades como controle de fluxo quântico e indexação quântica. A solução inclui uma biblioteca customizada que estende o Qiskit com os recursos semânticos da linguagem Silq, proporcionando execução prática em simuladores e hardwares reais da IBM. Os resultados demonstram a viabilidade da tradução com testes empíricos baseados em algoritmos conhecidos (Deutsch, Grover, W State), avaliando complexidade cognitiva e ciclomática, e validando os circuitos gerados fisicamente.;Os desafios enfrentados envolvem as discrepâncias semânticas entre linguagens de programação quântica de alto e baixo nível, como o mapeamento de conceitos avançados de Silq (ex: indexação quântica e uncomputation automática) para instruções elementares do Qiskit. Além disso, a necessidade de criar transformações intermediárias e bibliotecas auxiliares para preservar a semântica do código original impõe complexidade à manutenção e expansão da ferramenta, dificultando a escalabilidade para programas mais sofisticados com estruturas ainda não suportadas.;Empirical study;"Tool support gap; System complexity"
SCP0374;"Weber T.; Riebisch M.; Borras K.; Jansen K.; Krucker D.";Modelling for Quantum Error Mitigation;2021;International Conference on Software Architecture Companion;ICSA;102;105;2;While we expect quantum computers to surpass their classical counterparts in the future, current devices are prone to high error rates and techniques to minimise the impact of these errors are indispensable. There already exists a variety of error mitigation methods addressing this quantum noise that differ in effectiveness, and scalability. But for a more systematic and comprehensible approach we propose the introduction of modelling, in particular for representing cause-effect relations as well as for evaluating methods or combinations thereof with respect to a selection of relevant criteria.  © 2021 IEEE.;"cause-effect relationships; error mitigation; evaluation; metric; modelling; quantum computing; quantum noise";"Quantum computers; Quantum noise; Software architecture; Cause-effect; Classical counterpart; Error mitigation; Error rate; Evaluating method; Quantum error; Errors";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O trabalho contribui ao introduzir uma perspectiva sistemática sobre mitigação de erros quânticos por meio do uso de modelagem conceitual, com destaque para diagramas de Ishikawa e critérios avaliativos (grau de melhoria, esforço computacional e escalabilidade). Essa abordagem visa melhorar a compreensão das relações de causa e efeito no ruído quântico, apoiar decisões arquiteturais no desenvolvimento de software quântico e fomentar a criação de métricas padronizadas para avaliar e combinar técnicas de mitigação. O artigo também destaca o potencial dos modelos como instrumentos de comunicação entre áreas interdisciplinares envolvidas em computação quântica.;Os principais desafios incluem a ausência de padronização na avaliação de métodos de mitigação de erros, a dificuldade de representar com precisão as interações complexas entre diferentes fontes de ruído, e a necessidade de desenvolver modelos que considerem tanto a relevância quanto as interdependências entre causas. Além disso, combinar diferentes métodos de mitigação de forma eficaz requer uma compreensão aprofundada de suas interações e impacto cumulativo, algo que ainda é pouco explorado e carece de ferramentas formais para orientar decisões em ambientes híbridos e ruidosos como os sistemas NISQ.;Reference architecture;"Lack of standardization; Modeling difficulty"
SCP0386;"Jiménez-Fernández S.; Cruz-Lemus J.A.; Piattini M.";A Systematic Mapping Study on Quantum Circuits Design Patterns;2023;International Conference on Enterprise Information Systems;International Conference on Enterprise Information Systems, ICEIS - Proceedings;109;116;4;Introduction. In order to study quantum software’s quality, the use of patterns for designing quantum circuits is quite an unexplored field whereas a promising one too. Method. This work aims to discover the current state of the art of quantum circuits design patterns by searching the literature via a Systematic Mapping Study. Results. The search space was formed by 1327 studies in three different databases for a final result of 15 primary studies. Conclusions. These studies include a taxonomy for different design patterns over quantum circuits. Copyright © 2023 by SCITEPRESS – Science and Technology Publications, Lda. Under CC license (CC BY-NC-ND 4.0);"Patterns; Quantum Circuits; SMS";"Mapping; 'current; Design Patterns; Pattern; Quantum circuit; Quantum circuit design; Search spaces; SMS; State of the art; Systematic mapping studies; Timing circuits";English;Conference Paper;Secondary Study;0;Mapping Study;Software Design;O estudo fornece um mapeamento sistemático sobre padrões de design para circuitos quânticos, identificando os principais tópicos de pesquisa, como padrões de medição no modelo One-Way Quantum Computing (1WQC) e abordagens para a detecção e definição de padrões em circuitos quânticos. Além disso, propõe uma taxonomia inicial de padrões de design e destaca a importância da aplicação desses padrões para melhorar a qualidade do software quântico.;Desafios: A pesquisa em padrões de design para circuitos quânticos ainda é incipiente, com um número limitado de estudos e falta de uma taxonomia consolidada. Além disso, há desafios na integração desses padrões no desenvolvimento de software quântico, na criação de ferramentas para identificação automatizada de padrões e na validação empírica das abordagens propostas, dificultando sua adoção generalizada.;Conceptual framework;"Integration challenges; Quality assurance"
SCP0387;"Weps B.; LÃ¼dtke D.; Franz T.; Maibaum O.; Wendrich T.; MÃ¼ntinga H.; Gerndt A.";A model-driven software architecture for ultra-cold gas experiments in space;2018;International Astronautical Congress;Proc. Int. Astronaut. Congr., IAC;0;0;6;Developing software for large and complex experiments is a challenging task. It must incorporate many requirements from different domains, all with their own conceptions about the overall systems. An additional level of complexity is added if the experiment is conducted autonomously during a sounding rocket flight. Without a proper software architecture and development techniques, achieving and maintaining a high code quality is a very cumbersome task. This paper describes the architecture and the model-driven development approach we used to implement the control software of the experiments in the MAIUS-1 mission (matter-wave interferometry in microgravity). In this mission, the software had to handle around 150 experiments in six minutes autonomously and adapt to changes in the control flow according to real-time data from the experiment. The MAIUS-1 mission was the first mission to create Bose-Einstein condensates in space and conduct other experiments with ultra-cold gases on a sounding rocket. Besides the scientific goals in the area of quantum-optics, other important objectives of the mission were the miniaturization and further development of laser systems, vacuum components, optical sensors, and other related technologies. To fulfil these goals, new experimental hardware has been created which had to be integrated and tested with the software of the experiment computer. The custom-made hardware and the considerable number of domains involved brought up many challenges for the software engineering. To face all these challenges of developing software with this high complexity, we chose to follow a model-driven software development approach. Several domain-specific languages (DSLs) accompanied with specialized tools were created to allow the physicists and electronic engineers to describe system components and the experiments in a domain-specific way. These descriptions were then automatically transformed in C++ code for the flight software. This way we could actively incorporate all the domains involved in conducting the experiment directly in building the flight software without compromising the software quality. We created a versatile software platform not only for the MAIUS-1 mission but also for upcoming missions with similar experiments and hardware. With our approach we were able to generate around 84% of the source code for the final flight software from the domain-specific models. Besides the improvement of the development process, the code generation made a significant contribution to the overall software quality as almost all manual coding of error-prone boilerplate code could be mitigated. © 2018 International Astronautical Federation, IAF. All rights reserved.;"Code generation; Experiment control; Model-driven development; Software engineering; Sounding rocket";"Bose-Einstein condensation; Computer hardware; Computer software selection and evaluation; Problem oriented languages; Quantum optics; Software architecture; Software design; Software engineering; Software quality; Software testing; Sounding rockets; Space flight; Statistical mechanics; Bose-Einstein condensates; Code Generation; Domain specific languages; Improvement of the development process; Model driven development; Model driven development approaches; Model-Driven Software Development; Sounding rocket flights; C++ (programming language)";English;Conference Paper;Primary Study;Proposal of solution;0;Software Architecture;O estudo apresenta uma abordagem inovadora baseada em engenharia de software orientada a modelos (MDE) aplicada ao controle de experimentos espaciais com gases ultra-frios. Foram desenvolvidas linguagens específicas de domínio (DSLs) para representar hardware, sequências experimentais e lógica de execução, permitindo que especialistas de diferentes áreas contribuam diretamente para a geração automática do software embarcado. Essa abordagem resultou na geração de 84% do código final em C++, reduzindo significativamente a ocorrência de erros e facilitando a integração de requisitos de múltiplos domínios, promovendo flexibilidade, reutilização e maior qualidade do software.;Os principais desafios envolveram a conciliação de diferentes perspectivas e requisitos vindos de áreas como eletrônica, física e desenvolvimento de software, além da necessidade de executar experimentos de forma totalmente autônoma em um ambiente de tempo restrito e comunicação limitada. Também foram enfrentadas dificuldades associadas à criação de linguagens formais que capturassem com precisão os requisitos de cada domínio, à sincronização de alterações entre os modelos e ao balanceamento entre flexibilidade e confiabilidade exigida em missões espaciais.;Requirements engineering;Modeling difficulty
SCP0390;"De Vincentiis M.; Cassano F.; Pagano A.; Piccinno A.";QAI4ASE: Quantum artificial intelligence for automotive software engineering;2022;International Workshop on Quantum Programming for Software Engineering;QP4SE;19;21;10;Nowadays, the size and complexity of the automotive development life-cycle increase the possibility of cyber-attacks. In this context, team developers play a primary role in managing cyber security, risk assessment, and all phases of software application development (concept phases, product development, cyber security validation, production, operations, and maintenance). Currently, only generic standards exist and they are difficult to put into operation due to the lack of the required skills and knowledge. Therefore, this paper presents a vision model based on Quantum Artificial Intelligence that supports developers' decisions to integrate concrete design methods in the automotive development life-cycle. Organizations need to develop their process for developing vehicle components that comply with the new automotive standards. We suggest the usage of existing data sources (e.g., existing taxonomies) on Quantum Artificial Intelligence algorithms to suggest the best way, or the correct steps, to follow time by time to achieve user solutions.  © 2022 ACM.;"Artificial Intelligence; Quantum Computing; Software Engineering";"Application programs; Artificial intelligence; Life cycle; Network security; Quantum computers; Risk assessment; All phase; Application development; Assessment phase; Automotive development; Automotive software; Cyber security; Cyber-attacks; Quantum Computing; Security risk assessments; Software applications; Cybersecurity";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O artigo apresenta o modelo QAI4ASE como uma abordagem para integrar técnicas de inteligência artificial quântica (como QML e QNN) no ciclo de vida do desenvolvimento de software automotivo, oferecendo sugestões em tempo real aos desenvolvedores com base em um treinamento prévio sobre taxonomias e conformidades de segurança, visando facilitar a adoção da norma ISO/SAE 21434.;Os principais desafios incluem a dificuldade de interpretar e operacionalizar normas de segurança como a ISO/SAE 21434, a complexidade de treinar modelos de IA quântica com dados sensíveis e específicos do domínio automotivo, e as limitações práticas na integração de soluções quânticas com ferramentas e processos tradicionais em engenharia de software.;Conceptual framework;"Integration challenges; Modeling difficulty"
SCP0394;"Jaradat Y.; Alia M.; Masoud M.; Mansrah A.; Jannoud I.; Alheyasat O.";Roadmap for Simulating Quantum Circuits Utilising IBM’s Qiskit Library: Programming Approach;2023;Eurasia Proceedings of Science, Technology, Engineering and Mathematics;Eurasia. Proc. Sci. Technol. Eng. Math.;624;632;2;This paper explains the roadmap for running quantum circuit programs based on the Qiskit library in quantum simulators as well as real cloud-based IBM quantum computers. Qiskit is a free and open-source software development platform based on the Python programming language that is used in quantum programming. Qiskit acts as a link between quantum computing’s theoretical foundations and the practical aspects of programming and experimentation. It also allows users to experiment with and develop quantum algorithms, as well as simulate and execute them on simulators and real-world cloud-based quantum devices. It also simplifies the quantum programming process and allows a diverse range of people to participate in the exciting world of quantum computing. The paper, on the other hand, provides the mathematical foundation for analyzing quantum circuits and algorithms using linear algebra principles, as they provide the tools needed to describe and manipulate quantum states and operations. Furthermore, the paper shows quantum circuit design and implementation using real Qiskit codes. © 2023 Published by ISRES Publishing: www.isres.org.;"Entanglement; IBM; Qiskit; Quantum algorithm; Quantum circuit";;English;Conference Paper;Primary Study;Proposal of solution;0;Software Construction;O trabalho contribui ao fornecer um guia estruturado e acessível para o uso da biblioteca Qiskit, detalhando como construir, simular e executar circuitos quânticos, incluindo visualização, medição de probabilidades e uso de plataformas reais da IBM. O artigo também discute os fundamentos teóricos necessários, como álgebra linear e portas quânticas unitárias, promovendo um aprendizado progressivo desde a simulação até a execução real.;Os principais desafios incluem a necessidade de compreender conceitos abstratos como superposição, entrelaçamento e reversibilidade dos circuitos, além das limitações práticas do uso de hardware quântico real, como ruído, filas de execução e variação probabilística nos resultados. O artigo também aborda a importância de executar múltiplas vezes os experimentos para mitigar os efeitos do ruído e reforça a necessidade de familiaridade com conceitos computacionais e matemáticos para uma implementação eficaz.;Tool support;Hardware limitations
SCP0398;"Singhal K.; Hietala K.; Marshall S.; Rand R.";Q# as a Quantum Algorithmic Language;2023;Electronic Proceedings in Theoretical Computer Science;Electron. Proc. Theor. Comput. Sci., EPTCS;170;191;0;Q# is a standalone domain-specific programming language from Microsoft for writing and running quantum programs. Like most industrial languages, it was designed without a formal specification, which can naturally lead to ambiguity in its interpretation. We aim to provide a formal language definition for Q#, placing the language on a solid mathematical foundation and enabling further evolution of its design and type system. This paper presents λQ#, an idealized version of Q# that illustrates how we may view Q# as a quantum ALGOL (algorithmic language). We show the safety properties enforced by λQ#'s type system and present its equational semantics based on a fully complete algebraic theory by Staton. © K. Singhal, K. Hietala, S. Marshall, and R. Rand This work is licensed under the Creative Commons Attribution License.;;"Problem oriented languages; Semantics; Algebraic theories; Design systems; Domain-specific programming languages; Equational semantics; Mathematical foundations; MicroSoft; Safety property; Type systems; Algorithmic languages";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O trabalho introduz a linguagem Q# como uma proposta formal e prática para programação quântica, explicando sua integração com o .NET, seu modelo de tipos, conceitos fundamentais (como operações e funções), e apresentando exemplos concretos de algoritmos como Grover e Shor, oferecendo aos desenvolvedores uma ferramenta robusta para explorar e implementar algoritmos quânticos.;O principal desafio identificado é a necessidade de abstrair e modularizar os conceitos complexos da computação quântica em estruturas que possam ser compreendidas e manipuladas por desenvolvedores tradicionais, além de facilitar a integração entre computação clássica e quântica por meio de linguagens como a Q#.;Tool support;Integration challenges
SCP0405;"Dahlberg A.; Wehner S.";SimulaQron - A simulator for developing quantum internet software;2019;Quantum Science and Technology;QST;0;0;70;We introduce a simulator of a quantum internet with the specific goal to support software development. A quantum internet consists of local quantum processors, which are interconnected by quantum communication channels that enable the transmission of qubits between the different processors. While many simulators exist for local quantum processors, there is presently no simulator for a quantum internet tailored towards software development. Quantum internet protocols require both classical as well as quantum information to be exchanged between the network nodes, next to the execution of gates and measurements on a local quantum processor. This requires quantum internet software to integrate classical communication programming practises with novel quantum ones. SimulaQron is built to enable application development and explore software engineering practises for a quantum internet. SimulaQron can be run on one or more classical computers to simulate local quantum processors, which are transparently connected in the background to enable the transmission of qubits or the generation of entanglement between remote processors. Application software can access the simulated local quantum processors to execute local quantum instructions and measurements, but also to transmit qubits to remote nodes in the network. SimulaQron features a modular design that performs a distributed simulation based on any existing simulation of a quantum computer capable of integrating with Python. Programming libraries for Python and C are provided to facilitate application development. © 2018 IOP Publishing Ltd.;"quantum internet; quantum network; simulator; software development";"Application programs; C (programming language); Quantum communication; Quantum optics; Qubits; Simulators; Software design; Software engineering; Application development; Classical communication; Distributed simulations; Programming library; Quantum Information; Quantum network; Quantum processors; Remote processors; Quantum entanglement";English;Article;Primary Study;Proposal of solution;0;Software Architecture;O trabalho apresenta uma arquitetura modular e distribuída que simula processadores quânticos interconectados, permitindo o desenvolvimento de aplicações de internet quântica sem a necessidade de hardware real, contribuindo para a preparação de software e protocolos que futuramente operarão em redes quânticas reais.;O principal desafio identificado está na simulação eficiente de entrelaçamento entre nós remotos, o que requer técnicas específicas de sincronização e gerenciamento de registros, além da ausência de um stack completo para redes quânticas, dificultando a padronização do desenvolvimento.;"Reference architecture; Collaboration support";Lack of standardization
SCP0414;"Tafliovich A.; Hehner E.C.R.";Quantum predicative programming;2006;International Conference on Mathematics of Program Construction;MPC;433;454;8;The subject of this work is quantum predicative programming -the development of programs intended for execution on a quantum computer. We look at programming in the context of formal methods of program development, or programming methodology. Our work is based on probabilistic predicative programming, a recent generalisation of the well-established predicative programming. It supports the style of program development in which each programming step is proven correct as it is made. We inherit the advantages of the theory, such as its generality, simple treatment of recursive programs, time and space complexity, and communication, Our theory of quantum programming provides tools to write both classical and quantum specifications, develop quantum programs that implement these specifications, and reason about their comparative time and space complexity all in the same framework. © Springer-Verlag Berlin Heidelberg 2006.;;"Artificial intelligence; Computational complexity; Computer science; Probabilistic logics; Recursive functions; Software engineering; Programming methodology; Quantum computers; Quantum predicative programming; Space complexity; Computer programming";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O trabalho introduz o conceito de “Quantum Predicative Programming”, estendendo a programação predicativa probabilística para o contexto quântico, permitindo especificar, desenvolver e analisar algoritmos quânticos e suas complexidades de forma rigorosa e unificada.;Os principais desafios envolvem a formalização e verificação de algoritmos quânticos complexos, especialmente os distribuídos e criptográficos, exigindo novas formas de raciocínio sobre paralelismo, comunicação e estados mistos dentro de um arcabouço lógico-matemático unificado.;Tool support;Quality assurance
SCP0421;"Hussein H.; Younes A.; Abdelmoez W.";Quantum algorithm for solving the test suite minimization problem;2021;Cogent Engineering;Cogent Eng.;0;0;4;Test-suite minimization problem is an essential problem in software engineering as its application helps to improve the software quality. This paper proposes a quantum algorithm to solve the test-suite minimization problem with high probability in (Formula presented.), where (Formula presented.) is the number of test cases. It generates an incomplete superposition to find the best solution. It also handles the non-uniform amplitudes’ distribution case for the system with multisolutions. The proposed algorithm uses amplitude amplification techniques to search for the minimum number of test cases required to test all the requirements. The proposed algorithm employs two quantum search algorithms, Younes et al. algorithm for quantum searching via entanglement and partial diffusion to prepare incomplete superpositions that represent different search spaces such that the number of test cases is incremented in each search space, and updated Arima’s algorithm to handle the multisolutions case. The updated Arima’s algorithm searches for a quantum state that satisfies an oracle that represent the instance of the test-suite minimization problem. © 2021 The Author(s). This open access article is distributed under a Creative Commons Attribution (CC-BY) 4.0 license.;"Quantum Algorithm; Quantum Search; Superposition Preparation; Test-Suite Minimization";;English;Article;Primary Study;Proposal of solution;0;Software Testing;O artigo introduz um algoritmo quântico que combina técnicas de amplificação de amplitude com algoritmos de busca quântica para encontrar subconjuntos mínimos de casos de teste que satisfaçam todos os requisitos, oferecendo ganhos teóricos em termos de tempo e recursos computacionais.;Entre os principais desafios estão a modelagem eficiente de problemas de engenharia de software para execução em ambientes quânticos e a preparação de superposições incompletas adequadas para buscas em espaços de soluções com restrições combinatórias.;Requirements engineering;Lack of modeling standards
SCP0482;"Berganza Gomez R.; O'Meara C.; Cortiana G.; Mendl C.B.; Bernabe-Moreno J.";Towards AutoQML: A Cloud-Based Automated Circuit Architecture Search Framework;2022;International Conference on Software Architecture Companion;ICSA;129;136;4;The learning process of classical machine learning algorithms is tuned by hyperparameters that need to be customized to best learn and generalize from an input dataset. In recent years, Quantum Machine Learning (QML) has been gaining traction as a possible application of quantum computing which may provide quantum advantage in the future. However, quantum versions of classical machine learning algorithms introduce a plethora of additional parameters and circuit variations that have their own intricacies in being tuned.In this work, we take the first steps towards Automated Quantum Machine Learning (AutoQML). We propose a concrete description of the problem, and then develop a classical-quantum hybrid cloud architecture that allows for parallelized hyperparameter exploration and model training.As an application use-case, we train a quantum Generative Adversarial neural Network (qGAN) to generate energy prices that follow a known historic data distribution. Such a QML model can be used for various applications in the energy economics sector.  © 2022 IEEE.;"cloud computing; parametrized quantum circuit; quantum machine learning; quantum neural network; software architecture";"Cloud computing architecture; Computer architecture; Economics; Generative adversarial networks; Learning algorithms; Learning systems; Network architecture; Quantum computers; Cloud-based; Cloud-computing; Hyper-parameter; Machine learning algorithms; Machine-learning; Parametrized quantum circuit; Quantum circuit; Quantum machine learning; Quantum machines; Quantum neural networks; Timing circuits";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O artigo introduz o AutoQML, uma arquitetura híbrida clássica-quântica em nuvem que permite executar em paralelo treinamentos de modelos QML com diferentes configurações de hiperparâmetros, como tipo de Ansatz, número de qubits, inicialização e discriminadores. A arquitetura é validada por meio do treinamento automatizado de qGANs para modelar distribuições históricas de preços de energia, usando métricas como entropia relativa e Kolmogorov–Smirnov.;Os desafios incluem a seleção eficiente de hiperparâmetros em espaços de busca grandes e não triviais, a integração robusta com backends quânticos reais, a escassez de técnicas avançadas de otimização automatizada para circuitos quânticos, e a necessidade de lidar com limitações de recursos como tempo de execução, conectividade de qubits e ruído em dispositivos NISQ.;Reference architecture;Integration challenges
SCP0485;"Wu N.; Song F.; Li X.";Study of a Quantum Framework for Search Based Software Engineering;2013;International Journal of Theoretical Physics;Int. J. Theor. Phys.;2181;2186;2;The Search Based Software Engineering (SBSE) is widely used in the software engineering to identify optimal solutions. The traditional methods and algorithms used in SBSE are criticized due to their high costs. In this paper, we propose a rapid modified-Grover quantum searching method for SBSE, and theoretically this method can be applied to any search-space structure and any type of searching problems. © 2013 Springer Science+Business Media New York.;"Complex structure; Grover algorithm; Quantum algorithm; Searching; Software engineering";;English;Article;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O artigo contribui ao adaptar o paradigma de SBSE para a computação quântica, propondo a tradução de problemas de engenharia de software em espaços de busca quânticos e sugerindo a aplicação do algoritmo de Grover e sua versão com aprofundamento iterativo (IDGS) como ferramenta de otimização. O framework também define representações quânticas para candidatos a solução, funções de avaliação baseadas em distância de traço e operadores universais para oráculos, constituindo uma proposta teórica sólida para integrar computação quântica à engenharia de software.;Os principais desafios incluem a tradução precisa de problemas de engenharia de software para representações em estados quânticos (em especial para estados base em Hilbert space), a definição de funções de avaliação compatíveis com medidas quânticas, e a limitação da aplicabilidade do algoritmo de Grover para buscas com múltiplos alvos ou onde não se conhece o número de soluções. Além disso, a implementação prática do framework depende da evolução do hardware quântico e de ferramentas de modelagem adequadas para representar problemas complexos de forma compatível com comput;"Conceptual framework; Tool support";Hardware limitations
SCP0494;"Fitzjohn J.; Winckles A.; Wilson G.; Vicinanza D.";A Software Development Kit and Translation Layer for Executing Intel 8080 Assembler on a Quantum Computer (August 2022);2022;Transactions on Quantum Engineering;IEEE. Trans. Quantum. Eng.;0;0;3;One of the major obstacles to the adoption of quantum computing is the requirement to define quantum circuits at the quantum gate level. Many programmers are familiar with high-level or low-level programming languages but not quantum gates nor the low-level quantum logic required to derive useful results from quantum computers. The steep learning curve involved when progressing from quantum gates to complex simulations such as Shor's algorithm has proven too much for many developers. The purpose of this article and the software presented within addresses this challenge by providing a Software Development Kit (SDK), translation layer, emulator, and a framework of techniques for executing Intel 8080/Z80 assembler on a quantum computer, i.e., all salient points of CPU execution, logic, arithmetic, and bitwise manipulation will be executed on the quantum computer using quantum circuits. This provides a novel means of displaying the equivalency and interoperability of quantum and classical computers. Developers and researchers can use the SDK to write code in Intel 8080/Z80 assembler which is executed locally via traditional emulation and remotely on a quantum computer in parallel. The emulator features side-by-side code execution with visibility of the running quantum circuit and reusable/overridable methods. This enables programmers to learn, reuse, and contrast techniques for performing any traditional CPU-based technique/instruction on a quantum computer, e.g., a programmer may know how to multiply and perform checks on a classical CPU but is not able to perform the same tasks in a quantum implementation, and this SDK allows the programmer to pick and choose the methods they would like to use to fulfil their requirements. The SDK makes use of open-source software, specifically Python and Qiskit for the emulation, translation, API calls, and execution of user-supplied code or binaries.  © 2020 IEEE.;"Emulation; macro and assembly languages; processors; Qiskit; quantum computing; quantum gates; translation";"Application programs; Computation theory; Computer circuits; High level languages; Logic circuits; Logic gates; Open source software; Open systems; Quantum computers; Software design; Technology transfer; Timing circuits; Code; Emulation; Macro and assembly languages; Processor; Qiskit; Quantum circuit; Quantum Computing; Quantum gates; Random access memory; Translation; Program processors";English;Article;Primary Study;Evaluation research;0;Software Construction;O trabalho propõe um SDK completo que emula CPUs clássicas em computadores quânticos, provendo circuitos reutilizáveis para lógica, aritmética e manipulação de bits, com potencial educativo e transicional entre paradigmas computacionais.;A principal limitação está na lentidão inerente ao modelo quântico atual para emular lógica clássica, além da necessidade de múltiplas execuções (shots) para obter resultados confiáveis, o que ressalta a complexidade e o custo computacional dos sistemas quânticos atuais.;Tool support;Modeling difficulty
SCP0525;"Zhang X.; Wen Q.; Zhu F.";Object-oriented quantum cryptography simulation model;2007;International Conference on Natural Computation  ;Proc Int Conf Natural Comput, ICNC;599;602;6;Quantum computation simulation has been a hot research topic recently and a few softwares used in research have been developed. Compared with these existed softwares and their approaches, this paper proposes an object oriented quantum cryptography simulation model. Furthermore, we also firstly integrate classical cryptography algorithms into this model. Finally, the advantages and disadvantages of this model over other simulation approaches are given. © 2007 IEEE.;;"Computer simulation; Mathematical models; Quantum cryptography; Software engineering; Classical cryptography algorithms; Simulation models; Object oriented programming";English;Conference Paper;Primary Study;Proposal of solution;0;Software Construction;O artigo apresenta uma ferramenta educacional que simula o protocolo de distribuição de chaves BB84 por meio de conceitos de orientação a objetos, facilitando o aprendizado de criptografia quântica. O modelo implementado permite representar a transmissão de bits, aplicação de portas quânticas, medições e comparação de bases, tudo com apoio visual e interativo, servindo como ponte entre teoria e prática para alunos e pesquisadores iniciantes.;Os principais desafios incluem a limitação da simulação à perspectiva didática, sem validação experimental com dispositivos quânticos reais, além da abstração de alguns aspectos físicos do protocolo BB84, como ruído e ataques ativos. Há também o desafio de escalar a ferramenta para simular protocolos mais complexos e ambientes mais próximos de cenários reais de segurança quântica.;Tool support;"Modeling difficulty; Quality assurance"
SCP0609;"Wang X.; Ali S.; Yue T.; Arcaini P.";Quantum Approximate Optimization Algorithm for Test Case Optimization;2024;Transactions on Software Engineering;TOSE;3249;3264;1;Test case optimization (TCO) reduces the software testing cost while preserving its effectiveness. However, to solve TCO problems for large-scale and complex software systems, substantial computational resources are required. Quantum approximate optimization algorithms (QAOAs) are promising combinatorial optimization algorithms that rely on quantum computational resources, with the potential to offer increased efficiency compared to classical approaches. Several proof-of-concept applications of QAOAs for solving combinatorial problems, such as portfolio optimization, energy optimization in power systems, and job scheduling, have been proposed. Given the lack of investigation into QAOA's application for TCO problems, and motivated by the computational challenges of TCO problems and the potential of QAOAs, we present IGDec-QAOA to formulate a TCO problem as a QAOA problem and solve it on both ideal and noisy quantum computer simulators, as well as on a real quantum computer. To solve bigger TCO problems that require many qubits, which are unavailable these days, we integrate a problem decomposition strategy with the QAOA. We performed an empirical evaluation with five TCO problems and four publicly available industrial datasets from ABB, Google, and Orona to compare various configurations of IGDec-QAOA, assess its decomposition strategy of handling large datasets, and compare its performance with classical algorithms (i.e., Genetic Algorithm (GA) and Random Search). Based on the evaluation results achieved on an ideal simulator, we recommend the best configuration of our approach for TCO problems. Also, we demonstrate that our approach can reach the same effectiveness as GA and outperform GA in two out of five test case optimization problems we conducted. In addition, we observe that, on the noisy simulator, IGDec-QAOA achieved similar performance to that from the ideal simulator. Finally, we also demonstrate the feasibility of IGDec-QAOA on a real quantum computer in the presence of noise.  © 1976-2012 IEEE.;"QAOA; quantum computing; search-based software engineering; test case optimization";"Application programs; Combinatorial optimization; Computer software selection and evaluation; Cost engineering; Cost reduction; Investments; Job shop scheduling; Optimization algorithms; Quantum efficiency; Quantum electronics; Qubits; Scheduling algorithms; Approximate optimization; Optimisations; Optimization algorithms; Optimization problems; Quantum approximate optimization algorithm; Quantum Computing; Search-based; Search-based software engineering; Test case; Test case optimization; Software testing";English;Article;Primary Study;Evaluation research;0;Software Testing;O artigo apresenta uma formulação do problema de otimização de casos de teste como um problema QUBO, permitindo sua resolução por meio do algoritmo QAOA. A proposta é avaliada com experimentos que demonstram que o QAOA consegue selecionar subconjuntos de testes representativos com redução significativa no volume de execução e sem perda de cobertura, destacando o potencial da computação quântica como ferramenta prática para engenharia de software orientada a qualidade e eficiência.;Os desafios enfrentados incluem a modelagem adequada do problema de teste como QUBO, a limitação do número de qubits e profundidade dos circuitos nos dispositivos quânticos atuais, e a dificuldade de generalizar os resultados para sistemas maiores e conjuntos de testes mais complexos. Além disso, integrar soluções quânticas em pipelines tradicionais de testes requer adaptações arquiteturais e conhecimento técnico especializado.;Tool support;Quality assurance
SCP0656;"Baldassarre M.T.; De Vincentiis M.; Pal A.; Scalera M.";Quantum Artificial Intelligence for Cyber Security Education in Software Engineering;2023;﻿International Symposium on End-User Development;IS-EUD;0;0;1;The impact of Cyber Security is global, requiring immediate attention for protecting, conserving, and maintaining the integrity of any data. The need for cyber security is of utmost importance in Industry or Academics. To address this, all stakeholders should have substantial knowledge about cyber security and how to implement it. The use of published generic standards and guidelines does not describe the technologies or solutions that can be used. Currently, machine learning-based applications, serious games, or remote training can be used to bridge this gap. This paper proposes a vision model based on Quantum Artificial Intelligence (QAI) that generates secure software development (SSD) rules to educate and train developers and testers during different phases of the Software Development Life Cycle (SDLC). The proposed model trains QAI algorithms on data from industry standards, vulnerability information, and proprietary and historical data to create security rules that developers and testers can quickly adapt. Consequently, a case study about the automotive industry SSD discusses the application of the vision model. © 2022 Copyright for this paper by its authors. Use permitted under Creative Commons License Attribution 4.0 International (CC BY 4.0).;"Cyber Security Education; Industry Education; Quantum Artificial Intelligence";"Artificial intelligence; Automotive industry; Engineering education; Life cycle; Serious games; Software design; Cyber security; Cyber-security educations; Industry education; Machine-learning; Quantum artificial intelligence; Remote training; Secure software development; Software development life-cycle; Standards and guidelines; Vision model-based; Cybersecurity";English;Conference Paper;Primary Study;Proposal of solution;0;Software Security;O trabalho contribui ao destacar o papel da inteligência artificial quântica como elemento inovador no ensino de segurança cibernética, propondo sua adoção em currículos de engenharia de software para despertar o interesse dos alunos por temas emergentes, como criptografia quântica e defesa contra ataques baseados em computação quântica. O artigo defende o uso de tecnologias quânticas como ferramenta de ensino, não apenas como conteúdo teórico, e sugere que experiências educacionais práticas podem preparar melhor os alunos para os desafios futuros da cibersegurança.;Os principais desafios incluem a escassez de recursos educacionais acessíveis sobre inteligência artificial quântica, a necessidade de preparar docentes para abordar esses temas de forma eficaz, e a falta de ferramentas práticas adaptadas ao contexto educacional. Além disso, integrar tópicos de QAI em currículos tradicionais de engenharia de software exige alinhamento com diretrizes pedagógicas, atualização de competências docentes e superação de barreiras técnicas e cognitivas para alunos sem formação prévia em computação quântica.;"Tool support; Role definition; Education and training";Skill gap
SCP0659;"Shoran P.; Sinha A.; Mahmood H.R.; Sharma V.; Jha P.; Kumar B.; Alkhayyat A.";Enhancing Software Cost Estimation using COCOMO Cost Driver Features with Battle Royale Optimization and Quantum Ensemble Meta-Regression Technique;2023;International Conference on Computing Communication and Networking Technologies;Int. Conf. Comput. Commun. Netw. Technol., ICCCNT;0;0;2;This research suggests a unique method for improving software cost estimates by combining Battle Royale Optimisation (BRO) and Quantum Ensemble Meta-Regression Technique (QEMRT) with COCOMO cost driver characteristics. The strengths of these three strategies are combined in the suggested strategy to increase the accuracy of software cost estimation. The COCOMO model is a popular software cost-estimating methodology that considers several cost factors. BRO is a metaheuristic algorithm that mimics the process of the fittest people being selected naturally and was inspired by the Battle Royale video game. The benefits of quantum computing and ensemble learning are combined in the machine learning approach known as QEMRT. Using a correlation-based feature selection technique, we first identified the most important COCOMO cost drivers in our study. To get the best-fit model, we then used BRO to optimize the weights of these cost drivers. To further increase the estimation's accuracy, QEMRT was utilized to meta-regress the optimized model. The suggested method was tested on two datasets for software cost estimating that are available to the public, and the outcomes were compared with other cutting-edge approaches. The experimental findings demonstrated that our suggested strategy beat the other approaches in terms of accuracy, robustness, and stability. In conclusion, the suggested method offers a viable strategy for improving the accuracy of software cost estimation, which might help software development organizations by improving project planning and resource allocation. © 2023 IEEE.;"Battle Royale Optimization; BRO; COCOMO model; cost drivers; cost estimation; machine learning; QEMRT; Quantum Ensemble Meta-Regression Technique; software";"Cost benefit analysis; Cost estimating; Learning systems; Machine learning; Quantum computers; Software design; Software testing; Battle royale optimization; COCOMO model; Cost drivers; Cost estimations; Machine-learning; Optimisations; Quantum ensemble meta-regression technique; Regression techniques; Software; Optimization";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Economics;O artigo apresenta um modelo híbrido que aplica algoritmos genéticos quânticos à estimativa de esforço e custo de software, superando métodos tradicionais como COCOMO e redes neurais. Utilizando o conjunto de dados ISBSG, o modelo QGA demonstrou melhor desempenho em termos de erro médio relativo (MRE) e precisão, evidenciando seu potencial como técnica evolutiva baseada em princípios da computação quântica para auxiliar gestores em decisões mais confiáveis e eficientes na engenharia de software.;Os principais desafios envolvem a adaptação dos operadores genéticos clássicos ao contexto quântico, a validação de resultados em datasets com variabilidade alta, e a necessidade de ajustar hiperparâmetros quânticos (como ângulos de rotação) para obter convergência eficaz. Além disso, há barreiras práticas relacionadas à compreensão técnica desses algoritmos por profissionais de software, e à integração de tais modelos em ferramentas existentes de estimativa de custo.;"Process model; Collaboration support";"Integration challenges; Modeling difficulty; Quality assurance"
SCP0967;"El Koutbi S.; Idri A.";A quantum-based approach to error in software development effort estimation;2017;International Conference on Control, Decision and Information Technologies;Int. Conf. Control, Decision Information Technologies, CoDIT;248;253;2;Error in Software Development Effort Estimation is often investigated in order to adjust effort estimation technique results. The aim of this paper is to propose a quantum-based approach in order to deal with model error whatever the effort estimation technique used. To achieve this objective, we explored the Quantum Theory and proposed a model based on an analogy with the infinite potential well problem. In order to evaluate the performance of our approach, we assess the Classical Analogy based effort estimation technique on the COCOMO'81 dataset. The main findings are: (1) the proposed approach confidence intervals are close to the theoretical ones and (2) the Sine-squared distribution of effort represents an interesting alternative to the widely used Gaussian distribution since both distributions are statically comparable. These results give an interesting track for further researches and investigations. © 2017 IEEE.;"Deviation; Infinite potential well; Model Error; Quantum Theory; Software effort estimation";"Errors; Quantum theory; Confidence interval; Deviation; Distribution of efforts; Effort Estimation; Model errors; Potential wells; Software development effort; Software effort estimation; Software design";English;Conference Paper;Primary Study;Proposal of solution;0;Software Quality;O trabalho introduz uma abordagem inovadora baseada na equação de Schrödinger para descrever o crescimento da confiabilidade do software durante o teste, apresentando um modelo SRGM quântico e comparando seu desempenho com modelos clássicos. O modelo proposto demonstrou maior precisão estatística em termos de taxa de erro, especialmente na fase inicial do processo de testes, e fornece uma nova perspectiva para a modelagem matemática de falhas em software, aproximando-a dos fenômenos de probabilidade e evolução temporal da mecânica quântica.;Os principais desafios incluem a validação prática da abordagem em ambientes reais de teste de software, a interpretação física dos parâmetros quânticos usados na modelagem, e a integração da formulação com ferramentas e métricas tradicionais de confiabilidade. Além disso, a adoção da modelagem quântica exige entendimento interdisciplinar entre engenharia de software e mecânica quântica, o que representa uma barreira para a sua aplicação ampla no setor industrial.;Process model;"Integration challenges; Quality assurance"
SCP0983;"Ou C.-H.; Li Y.-H.; Chen C.-Y.; Wu C.-H.; Tsai Y.-C.; Yan Z.-Y.; Chang C.-R.";Quantum-Inspired Optimization for Task Scheduling in Software Development Projects;2023;International Conference on Quantum Computing and Engineering;QCE;348;349;1;Software project development, characterized by numerous tasks and several engineers, necessitates effective project scheduling and personnel allocation for successful and timely completion. Tackling the inherent complexities of Software Project Scheduling (SPS) including personnel quality requirements and capability constraints is of paramount importance for software companies. This study aims to engineer robust project scheduling to enhance task completion efficiency, reduce resource waste, and ensure the punctual delivery of project milestones. Our proposed solution models the problem as a Software Project Scheduling Problem (SPSP), subsequently transformed into a Quadratic Unconstrained Binary Optimization (QUBO) model using quantum-inspired techniques. This model is then solved using a digital annealing device. We examine our proposed quantum-inspired method's effectiveness in solving SPSP through this experimental implementation, comparing its performance with the Simulated Annealing (SA) algorithm. The experimental findings reveal that the objective function, encapsulating the weighted sum of all job personnel costs and job end times, produced superior outcomes under the Digital Annealing (DA) algorithm compared to the SA algorithm. Moreover, the DA algorithm demonstrated greater stability and reduced runtime as the volume of input data expanded.  © 2023 IEEE.;"Digital annealing; Quantum application; Quantum inspired optimization; QUBO; Software project scheduling";"Annealing; Application programs; Personnel; Software design; Annealing algorithm; Binary optimization; Digital annealing; Optimisations; Project scheduling; Project scheduling problem; Quadratic unconstrained binary optimization; Quantum applications; Quantum inspired optimization; Software Project Scheduling; Simulated annealing";English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Management;O estudo contribui ao aplicar um algoritmo de otimização inspirado na computação quântica (QIEA – Quantum-Inspired Evolutionary Algorithm) para resolver o problema de escalonamento de projetos de software com múltiplas tarefas, recursos e restrições. Os resultados obtidos com dados sintéticos demonstraram que o QIEA supera algoritmos genéticos tradicionais em termos de qualidade da solução e convergência, promovendo uma alternativa viável e mais eficaz para gerenciamento de cronogramas em engenharia de software.;Os principais desafios incluem a modelagem precisa de problemas de escalonamento com múltiplas restrições reais, a adaptação de representações binárias quânticas a domínios contínuos e complexos, e a necessidade de testes com dados reais de projetos industriais para validar o desempenho em contextos práticos. Além disso, o uso de algoritmos quântico-inspirados exige conhecimento técnico especializado e ainda carece de ferramentas amplamente difundidas para sua adoção em ambientes corporativos.;Tool support;Quality assurance
WOS0011;"Luo, JJ; Zhao, PZ; Miao, ZT; Lan, SH; Zhao, JJ";A Comprehensive Study of Bug Fixes in Quantum Programs;2022;International Conference on Software Analysis, Evolution and Reengineering ;SANER;1239;1246;9;As quantum programming evolves, more and more quantum programming languages are being developed. As a result, debugging and testing quantum programs have become increasingly important. While bug fixing in classical programs has come a long way, there is a lack of research in quantum programs. To this end, this paper presents a comprehensive study on bug fixing in quantum programs. We collect and investigate 96 real-world bugs and their fixes from four popular quantum programming languages (Qiskit, Cirq, Q#, and ProjectQ). Our study shows that a high proportion of bugs in quantum programs are quantum-specific bugs (over 80%), which requires further research in the bug fixing domain. We also summarize and extend the bug patterns in quantum programs and subdivide the most critical part, math-related bugs, to make it more applicable to the study of quantum programs. Our findings summarize the characteristics of bugs in quantum programs and provide a basis for studying testing and debugging quantum programs.;"Bug fixing; quantum software testing; quantum program debugging; empirical study";;English;Conference Paper;Primary Study;Evaluation research;0;Software Maintenance;O artigo oferece uma análise detalhada de 96 bugs reais corrigidos em programas quânticos, revelando que mais de 80% são específicos ao paradigma quântico, propõe uma taxonomia de padrões de bugs adaptada à computação quântica, identifica que a maioria dos bugs pode ser corrigida com poucas linhas de código, e destaca que bugs mais complexos (níveis C3 e C4) estão fortemente relacionados à forma de implementação e à matemática envolvida nos algoritmos.;Os principais desafios envolvem a escassez de métodos automáticos eficazes para correção de bugs específicos de programas quânticos, a falta de proficiência dos programadores nas linguagens quânticas, a dificuldade de compreender as nuances de operações como medições, estado inicial e lógica de portas quânticas, bem como a necessidade de novas ferramentas e técnicas para detecção, classificação e correção sistemática de falhas no ecossistema da engenharia de software quântico.;Conceptual framework;"Tool support gap; Modeling difficulty"
WOS0017;"Ying, MS; Feng, Y";A Flowchart Language for Quantum Programming;2011;Transactions on Software Engineering;TOSE;466;485;20;Several high-level quantum programming languages have been proposed in the previous research. In this paper, we define a low-level flowchart language for quantum programming, which can be used in implementation of high-level quantum languages and in design of quantum compilers. The formal semantics of the flowchart language is given, and the notion of correctness for programs written in this language is introduced. A structured quantum programming theorem is presented, which provides a technique of translating quantum flowchart programs into programs written in a high-level language, namely, a quantum extension of the while-language.;"Quantum programming; flowchart language; while-language; structured programming";"ARCHITECTURE; LOGIC";English;Article;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O artigo define uma linguagem de programação baseada em fluxogramas com suporte a variáveis clássicas e quânticas, comandos de transformação unitária e medição, e formaliza sua semântica operacional e denotacional. Apresenta ainda definições de correção parcial e total, precondições mais fracas e uma demonstração teórica de que qualquer programa escrito nessa linguagem pode ser traduzido para uma linguagem estruturada baseada no modelo while, unificando níveis de abstração e promovendo a programação estruturada quântica.;Os desafios centrais incluem a ausência de técnicas estabelecidas para verificação de programas quânticos com laços, a complexidade da definição de correção em ambientes probabilísticos e não determinísticos, a dificuldade de traduzir programas de baixo nível com instruções goto para estilos estruturados de programação, e a necessidade de integrar semânticas formais que possam lidar com falhas, não determinação e entrelaçamento em programas reais executados em hardware quântico.;Education and training;"Quality assurance; Hardware limitations"
WOS0019;"Ohki, M; Kambayashi, Y";A formalization of the design pattern derivation by applying quantum field concepts;2002;Knowledge-based Software Engineering;KBSE;66;71;0;It is widely known that the analysts and the designers of software need to have some criteria applicable for extracting software elements (attributes, methods, and classes) during OOAD. Such criteria should be accurate and easy to understand. Considering such a need in the circumstance of OOAD application, the authors have developed a methodology that derives several criteria for extracting software elements from software characteristics. This methodology is analogous to the quantum field theory. This paper describes the basic concepts of the software field and the derivation of the element-extracting operations and configuration constraints under several hypotheses. In the later part of the paper describes that it is possible to derive typical design patterns by applying those operations to the software field.;;;English;Conference Paper;Primary Study;Proposal of solution;0;Software Design;O artigo introduz o conceito de “campo de software”, analogamente ao campo quântico, como base para formalizar operações de extração de elementos (atributos, métodos e classes) e configuração de padrões de projeto. Ele demonstra como os padrões Adapter, Bridge e Composite podem ser derivados a partir da aplicação de operações quantificadoras sobre esse campo, organizando os elementos em um espaço de situação e identificador e estabelecendo níveis hierárquicos similares a estados estacionários em sistemas físicos.;Os principais desafios incluem a formalização matemática da modelagem de software como campo dinâmico, a representação da evolução do software em termos de estados estáveis (eigenstates), a tradução de abstrações físicas para construtos de engenharia de software, e a implementação prática de ferramentas que operacionalizem essa abordagem para automatizar ou guiar decisões estruturais em projetos orientados a objetos.;Process model;"Lack of modeling standards; Tool support gap"
WOS0072;"Huang, LZ; Pei, HY; Li, YC; Yin, BB; Cai, KY";A Strategy of Dynamic Random Testing with Hybrid Distance Metrics for Quantum Programs;2024;International Conference on Software Quality, Reability and Security;QRS;1;12;1;Quantum Computing (QC) leverages quantum mechanics to manipulate quantum information, holding greater potential than classical computing. To fully exploit QC's potential, it is crucial to ensure the reliability and quality of quantum programs. Research on quantum program testing is still at its early stage, in which some distinctive features of quantum programs, e.g., superposition and entanglement, may be overlooked, and the fault detection capability and testing effectiveness are rather limited. Besides, the input space of quantum programs may exponentially grow when the number of qubits increases, posing great challenges to testing quantum programs. It is imperative to develop a proper testing strategy to effectively select the potential failure-causing test cases and detect faults faster. In this paper, test cases with both basis states and superposition ones are considered and generated to cover more input space. A hybrid distance measurement method based on quantum fidelity and Hamming distance is presented for measuring the similarity among quantum test cases. Furthermore, a Dynamic Random Testing strategy based on Hybrid distance metrics (DRT-H) for quantum programs is proposed, which combines the hybrid distance metrics and the feedback mechanism of the classical Dynamic Random Testing (DRT) strategy to adjust the testing profile and guide the test case selection. Experimental studies demonstrate that the proposed DRT-H strategy outperforms the baseline testing strategies in most cases.;"Dynamic random testing; quantum program testing; hybrid distance metrics; superposition; software cybernetics; S-ADA";;English;Conference Paper;Primary Study;Evaluation research;0;Software Testing;O trabalho introduz uma estratégia inovadora de testes baseada em randomização dinâmica com métricas híbridas de distância (fidelidade quântica e distância de Hamming), capaz de detectar falhas com maior eficácia e menor custo computacional em comparação a métodos clássicos como RT, ART e DRT, demonstrando sua superioridade em experimentos com programas reais escritos em OpenQASM.;Os desafios incluem a dificuldade de gerar casos de teste representativos para estados de superposição, a combinação adequada de métricas de distância para refletir similaridade entre entradas quânticas, o tratamento da natureza probabilística dos programas quânticos, e a limitação na disponibilidade de benchmarks e ferramentas que capturem a complexidade dos sistemas testados.;Process model;Quality assurance
WOS0121;"de Guzman, IGR; Monje, MR; Velthuis, MP; Quintana, MTM";An Adaptation of the UML Testing Profile for Quantum Software Testing;2024;Memoria Investigaciones en Ingeniería;MII;266;284;0;This study explores how Classical Software Engineering, especially model-driven engineering in testing, can contribute to the improvement of Quantum Software Engineering (QSE). Adopting principles of agnosticism, it seeks to develop software engineering processes that are independent of any specific language or platform for quantum software. Currently, quantum software testing is considered an emerging area with multiple proposals focused on particular languages or platforms. This work proposes an extension of the UML Testing Profile 2.0 to model quantum software testing, allowing (i) the exploration of new concepts needed to specify these tests, (ii) the modelling of different types of tests during quantum software design, and (iii) the specification of tests independent of the execution language or platform. This approach aims to establish a more flexible and extensible basis for testing in QSE.;"Quantum Software Engineering; Quantum Software Testing; UML Testing Profile; Software Testing";;Spanish;Article;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O artigo contribui com a proposta de novos estereótipos no perfil UML Testing Profile 2.0 adaptados à realidade do software quântico, como QuantumTestSuite, QuantumDeterministicTestCase e QuantumNondeterministicTestCase, permitindo a modelagem de artefatos de teste independentes de linguagem e plataforma, além de fomentar a padronização de práticas de testes desde as fases iniciais do ciclo de vida de desenvolvimento quântico.;Os principais desafios envolvem a inexistência de conceitos padronizados para testes quânticos, a dificuldade de modelar testes para circuitos com comportamento estocástico, a necessidade de abstrações que contemplem múltiplas plataformas e linguagens, e a urgência de integrar práticas de engenharia de software maduras ao contexto disruptivo e ainda imaturo da computação quântica.;Tool support;Quality assurance
WOS0127;"Imran, M; Cortellessa, V; Di Ruscio, D; Rubei, R; Traini, L";An Empirical Study on Code Coverage of Performance Testing;2024;International Conference on Evaluation and Assessment in Software Engineering  ;EASE;48;57;2;Performance testing aims to ensure the operational efficiency of software systems. However, many factors influencing the efficacy and adoption of performance tests in practice are not yet fully understood. For instance, while code coverage is widely regarded as a key quality metric for evaluating the efficacy of functional testing suites, there is limited knowledge about the types and levels of coverage that performance tests specifically achieve. Another important factor, often perceived as a barrier to the broader adoption of performance tests yet remaining relatively unexplored, is their extended execution time. In this paper, we analyze the performance testing suites of 28 open-source systems to study (i) the magnitude of their code coverage, and (ii) their execution time. Our analysis shows that performance tests achieve significantly lower code coverage than functional tests, as expected, and it highlights a significant trade-off between coverage and execution time. Our results also suggest, in perspective, that automated test generation methods might not ensure affordable performance testing due to the associated time cost. This finding poses new challenges in the field of performance test generation.;"Performance Testing; Code Coverage; JMH; Microbenchmarking";;English;Conference Paper;Primary Study;Evaluation research;0;Software Testing;O artigo apresenta a primeira análise abrangente da cobertura de código em testes de desempenho, utilizando microbenchmarks JMH em 28 sistemas Java. Mostra que esses testes cobrem em média apenas 8,8% dos métodos, contra 41,3% nos testes JUnit, e que o tempo de execução dos testes de desempenho é 62 vezes maior. Além disso, fornece um pacote de replicação com os dados e scripts usados na análise.;Os principais desafios abordados incluem a limitada cobertura de código alcançada por testes de desempenho, a alta redundância entre benchmarks, o custo elevado de execução e a ausência de ferramentas adequadas para mensurar cobertura em testes de performance, o que dificulta a ampliação e adoção prática desses testes em ciclos ágeis de desenvolvimento.;Process model;Quality assurance
WOS0157;"Wang, XY; Arcaini, P; Yue, T; Ali, S";Application of Combinatorial Testing to Quantum Programs;2021;International Conference on Software Quality, Reability and Security;QRS;179;188;17;The capability of Quantum Computing (QC) in solving complex problems has been increasingly recognized. However, similar to classical computing, to fully exploit QC's potential, it is important to ensure the correctness of quantum programs. Doing so via software testing is, however, very challenging because of QC's inherent properties: superposition and entanglement. Towards the direction of ensuring the correctness of quantum programs, we propose an approach called QuCAT (QUantum CombinAtorial Testing) for systematic and automated testing of quantum programs by benefiting from combinatorial testing, which has been proven to be cost-effective in testing classical programs. QuCAT supports two combinatorial test suite generation scenarios, i.e., generating combinatorial test suites of a given strength, and incrementally generating and executing combinatorial test suites of increasing strength until a fault is found. The approach employs two types of test oracles to assess test results. We performed an empirical study with 18 faulty versions of quantum programs to evaluate QuCAT with strengths of two, three, and four in the two test generation scenarios. We compare the cost-effectiveness of combinatorial testing of various strengths and random testing (taken as baseline approach). Results show that combinatorial testing always performs better than random testing with the same cost and finds faults more quickly (in terms of required number of test cases). In addition, in most cases, combinatorial testing with a higher strength outperforms the lower strength in terms of effectiveness.;"quantum programs; quantum software testing; combinatorial testing";;English;Conference Paper;Primary Study;Evaluation research;0;Software Testing;O artigo introduz o QuCAT, uma ferramenta que aplica testes combinatórios com diferentes forças (par a par, 3-wise, 4-wise) para identificar falhas em programas quânticos escritos em Qiskit. A abordagem permite geração de testes com força fixa ou incremental até detectar uma falha, utilizando oráculos específicos para programas quânticos. Um experimento com 18 programas com falhas mostrou que o QuCAT supera significativamente testes aleatórios em eficácia e rapidez na detecção de falhas.;Os principais desafios envolvem a geração de testes com distribuição estatística suficiente para inferir falhas com significância, adaptação dos princípios de teste combinatório ao comportamento probabilístico de programas quânticos, ausência de repositórios públicos de bugs reais em software quântico e a necessidade de ferramentas que equilibrem custo de geração com poder de detecção.;Tool support;Quality assurance
WOS0204;"Zhao, PZ; Zhao, JJ; Miao, ZT; Lan, SH";Bugs4Q: A Benchmark of Real Bugs for Quantum Programs;2021;International Conference on Automated Software Engineering;ASE;1373;1376;25;Realistic benchmarks of reproducible bugs and fixes are vital to good experimental evaluation of debugging and testing approaches. However, there is no suitable benchmark suite that can systematically evaluate the debugging and testing methods of quantum programs until now. This paper proposes Bugs4Q, a benchmark of thirty-six real, manually validated Qiskit bugs from four popular Qiskit elements (Terra, Aer, Ignis, and Aqua), supplemented with the test cases for reproducing buggy behaviors. Bugs4Q also provides interfaces for accessing the buggy and fixed versions of the Qiskit programs and executing the corresponding test cases, facilitating the reproducible empirical studies and comparisons of Qiskit program debugging and testing tools. Bugs4Q is publicly available at https://github.com/z-928/Bugs4Q;"Quantum software testing; quantum program debugging; benchmark suite; Qiskit; Bugs4Q";;English;Conference Paper;Primary Study;Proposal of solution;0;Software Testing;O artigo apresenta o Bugs4Q, uma suíte de benchmark com 36 bugs reais e reproduzíveis de programas Qiskit (Terra, Aer, Ignis, Aqua), cada um acompanhado por seu teste e versão corrigida. O trabalho inclui uma taxonomia de tipos de bugs, scripts para restauração de versões, ambiente de teste isolado e interface para execução automatizada dos casos, oferecendo uma base sólida para validação empírica de ferramentas de teste e depuração de software quântico.;Os principais desafios envolvem a escassez de benchmarks reais e reproduzíveis para software quântico, a dificuldade em isolar correções em um ecossistema ainda imaturo, a natureza probabilística que afeta a reprodutibilidade dos erros, e a ausência de infraestrutura para avaliação comparativa de ferramentas em diferentes versões do Qiskit, limitando o avanço de pesquisas em engenharia de software quântico voltadas à qualidade e confiabilidade.;"Conceptual framework; Tool support";"Tool support gap; Infrastructure limitations"
WOS0223;"Arismendi, A; Mott, SP";Challenges in Quantum Software Engineering;2023;Memoria Investigaciones en Ingeniería;MII;90;106;0;This analysis examines the field of quantum computing and the development of quantum software based on a selection of relevant articles. The research reveals that quantum computing has evolved from a theoretical concept to a practical reality, with quantum computers now accessible to everyone through cloud services or simulations. The articles discuss various aspects related to quantum computing, including technologies, methodologies, and practical guidance for developers venturing into quantum software projects. An emerging trend identified is the need for quantum software engineering, as the field lacks established models, standards, and methods for system creation and migration. A comparison and synthesis of the articles highlight the advancements and challenges in the field, as well as gaps and areas for future research. Overall, this analysis emphasizes the growing importance of quantum computing and provides critical insights into its development and potential impact on industry and society.;"Quantum computing; Quantum software development; Quantum technologies; Quantum software engineering; Impact of quantum computing";;Spanish;Article;Primary Study;Proposal of solution;0;The Software Engineering in General;O artigo estabelece uma base conceitual para a Engenharia de Software Quântica, destacando a importância de adaptar processos, métodos e ferramentas da engenharia de software clássica ao novo paradigma quântico. São discutidas a necessidade de abstrações apropriadas, de uma taxonomia de práticas, e de uma agenda de pesquisa colaborativa. A proposta visa orientar o desenvolvimento de software quântico com maior sistematicidade, escalabilidade e qualidade.;Os principais desafios incluem a escassez de ferramentas de apoio, a dificuldade de aplicar boas práticas em contextos quânticos ainda experimentais, e a ausência de abstrações e modelos formais apropriados para representar algoritmos, requisitos e estruturas de software no domínio quântico. Além disso, destaca-se a necessidade de formar profissionais multidisciplinares e de consolidar uma comunidade científica capaz de amadurecer a área com base empírica.;"Conceptual framework; Process model; Tool support";"Modeling difficulty; Lack of community consolidation"
WOS0348;"Yamaguchi, M; Yoshioka, N";Design by Contract Framework for Quantum Software;2023;International Workshop on Quantum Software Engineering;QSE;24;25;0;To realize reliable quantum software, techniques to automatically ensure the quantum software's correctness have recently been investigated. However, they primarily focus on fixed quantum circuits rather than the procedure of building quantum circuits. Despite being a common approach, the correctness of building circuits using different parameters following the same procedure is not guaranteed. To this end, we propose a designby-contract framework for quantum software. Our framework provides a python-embedded language to write assertions on the input and output states of all quantum circuits built by certain procedures. Additionally, it provides a method to write assertions about the statistical processing of measurement results to ensure the procedure's correctness for obtaining the final result. These assertions are automatically checked using a quantum computer simulator. For evaluation, we implemented our framework and wrote assertions for some widely used quantum algorithms. Consequently, we found that our framework has sufficient expressive power to verify the whole procedure of quantum software.;"Programming by contract; Testing and Debugging; quantum computing";;English;Conference Paper;Primary Study;Proposal of solution;0;Software Design;O trabalho apresenta um framework embutido em Python que permite especificar e verificar condições de pré e pós-execução em circuitos quânticos, utilizando simulação para validar tanto a construção dos circuitos quanto o pós-processamento estatístico dos resultados, com suporte modular para composição de sistemas maiores a partir de componentes testados.;Os principais desafios abordados envolvem a verificação de procedimentos de construção de circuitos parametrizados, a limitação dos testes atuais a circuitos fixos, a dificuldade de incorporar medições intermediárias no fluxo de execução, e a necessidade de suportar verificações em tempo de execução de forma escalável e acessível a desenvolvedores com pouca experiência em mecânica quântica.;Conceptual framework;Quality assurance
WOS0523;"Barletta, VS; Caivano, D; Pal, A; Scalera, M; Martin, MAS";Enabling Quantum Privacy and Security by Design: Imperatives for Contemporary State-of-the-Art in Quantum Software Engineering;2025;Journal of Software: Evolution and Process;Journal of Software: Evolution and Process;;;0;With the advent of Quantum Computing and its exponential research endeavors in the past couple of decades, we are looking at a Golden Era of Quantum Computing. We are transitioning into an age of Hybrid Classical-Quantum Computers, where the quantum computational resources are selectively harnessed for resource-intensive tasks. On the one hand, Quantum Computing promises immense future computational innovation, and it also comes with privacy and security challenges. To date, Privacy by Design (PbD) and Security by Design (SbD) frameworks and guidelines in the Quantum Software Engineering (QSE) domain are still nebulous, and there are no comprehensive studies on the same. In this study, therefore, we identify the current state-of-the-art in the relevant literature and investigate the principles of PbD and SbD in the domain of QSE. This is the first study to identify state-of-the-art Quantum PbD and Quantum SbD in QSE. Furthermore, we also identified the gaps in the current literature, which were extended into action points for a robust literature for Quantum PbD and SbD. We recognize the crucial role of researchers, academics, and professionals in the field of Quantum Computing and Software Engineering in conducting more empirical studies and shaping the future of PbD and SbD principles in QSE.;"cybersecurity; privacy by design; quantum software engineering; security by design";"KEY DISTRIBUTION; NETWORK; PROTECTION; SERVICE";English;Article;Secondary Study;0;Systematic review;Software Security;O artigo contribui significativamente ao identificar lacunas nos paradigmas tradicionais de engenharia de software quando aplicados a sistemas quânticos, propondo um framework de imperativos de design para garantir segurança e privacidade, e delineando estratégias para seu tratamento antecipado no ciclo de vida do desenvolvimento quântico.;O trabalho ressalta como desafio a necessidade urgente de adaptar ou criar abordagens de engenharia de software que considerem as peculiaridades dos sistemas quânticos, especialmente no que se refere à implementação de segurança e privacidade desde o design, diante da evolução ainda incipiente de ferramentas e metodologias voltadas a esse novo paradigma.;Conceptual framework;Modeling difficulty
WOS0888;"Evans, A; Omonije, S; Soulé, R; Rand, R";MCBeth: A Measurement-based Quantum Programming Language;2023;International Workshop on Quantum Software Engineering;QSE;1;8;0;This work introduces MCBeth, a quantum programming language that bridges the gap between near-term and nonnear-term languages. MCBeth allows users to directly program and simulate measurement-based computation by building upon the measurement calculus. While MCBeth programs are meant to be executed directly on hardware, to take advantage of current machines we also provide a compiler to gate-based instruction sets. We argue that MCBeth is more natural to use than common low-level languages, which are based upon the quantum circuit model, but still easily runnable in practice.;"quantum computing; programming languages; measurement-based quantum computing; one-way quantum computer; distributed computing";;English;Conference Paper;Primary Study;Proposal of solution;0;Software Construction;O artigo introduz a linguagem MCBeth, a primeira baseada em cálculo de medições para programação quântica prática, com suporte a simulação fraca e forte, transformação automática de programas para outras linguagens (como QASM via Cirq), suporte a programação distribuída e definição formal de comandos primitivos e compostos. A abordagem permite a criação de algoritmos intuitivos e distribuídos com maior clareza sobre o papel da entrelaçamento e da medição no processamento quântico.;Os principais desafios envolvem a escassez de ferramentas para computação baseada em medições, a necessidade de padronização e integração com arquiteturas quânticas reais, a complexidade da simulação com estados densos e a dificuldade de compilar programas de alto nível para dispositivos físicos em grande escala, especialmente em cenários distribuídos com qubits entrelaçados em múltiplos nós de uma rede.;"Role definition; Education and training";"Lack of standardization; Integration challenges"
WOS0916;"Muqeet, A; Yue, T; Ali, S; Arcaini, P";Mitigating Noise in Quantum Software Testing Using Machine Learning;2024;Transactions on Software Engineering;TOSE;2947;2961;0;Quantum Computing (QC) promises computational speedup over classic computing. However, noise exists in near-term quantum computers. Quantum software testing (for gaining confidence in quantum software's correctness) is inevitably impacted by noise, i.e., it is impossible to know if a test case failed due to noise or real faults. Existing testing techniques test quantum programs without considering noise, i.e., by executing tests on ideal quantum computer simulators. Consequently, they are not directly applicable to test quantum software on real quantum computers or noisy simulators. Thus, we propose a noise-aware approach (named $\mathit{QOIN}$QOIN) to alleviate the noise effect on test results of quantum programs. $\mathit{QOIN}$QOIN employs machine learning techniques (e.g., transfer learning) to learn the noise effect of a quantum computer and filter it from a program's outputs. Such filtered outputs are then used as the input to perform test case assessments (determining the passing or failing of a test case execution against a test oracle). We evaluated $\mathit{QOIN}$QOIN on IBM's 23 noise models, Google's two available noise models, and Rigetti's Quantum Virtual Machine, with six real-world and 800 artificial programs. We also generated faulty versions of these programs to check if a failing test case execution can be determined under noise. Results show that $\mathit{QOIN}$QOIN can reduce the noise effect by more than $80\%$80% on most noise models. We used an existing test oracle to evaluate $\mathit{QOIN}$QOIN's effectiveness in quantum software testing. The results showed that $\mathit{QOIN}$QOIN attained scores of $99\%$99%, $75\%$75%, and $86\%$86% for precision, recall, and F1-score, respectively, for the test oracle across six real-world programs. For artificial programs, $\mathit{QOIN}$QOIN achieved scores of $93\%$93%, $79\%$79%, and $86\%$86% for precision, recall, and F1-score respectively. This highlights $\mathit{QOIN}$QOIN's effectiveness in learning noise patterns for noise-aware quantum software testing.;"Noise; Quantum computing; Qubit; Computers; Software testing; Logic gates; Computational modeling; Software testing and debugging; computing methodologies; quantum computing; and machine learning";;English;Article;Primary Study;Evaluation research;0;Software Testing;O artigo introduz o QOIN, uma abordagem modular de aprendizado de máquina composta por treinamento de modelos base e ajustes por transferência de aprendizado, que permite realizar testes de software quântico diretamente em backends ruidosos. A solução foi avaliada em 26 modelos de ruído de diferentes plataformas (IBM, Google e Rigetti), utilizando seis circuitos reais e 800 artificiais, com ganhos médios de mais de 80% na mitigação do ruído, alcançando F1-score de até 86% na avaliação de testes.;O trabalho identifica como desafios principais a variabilidade e imprevisibilidade dos efeitos de ruído entre diferentes backends e circuitos, a limitação de dados para treinar modelos eficazes por circuito, e a necessidade de adaptar abordagens clássicas de ML ao contexto probabilístico e não-linear da mecânica quântica, além de lidar com o fenômeno de “data drift” pela recalibração frequente dos backends quânticos.;Tool support;Modeling difficulty
WOS0931;"Bibbo, LM; Fernandez, A; Suarez, JM; Pastor, O";Modelling Quantum Software: An Annotated Bibliography;2024;Memoria Investigaciones en Ingeniería;MII;285;301;0;This annotated bibliography delves into the field of quantum computing, focusing specifically on the resources used throughout the software life cycle. It examines several published works that analyze quantum software modelling in the context of the various phases of the life cycle, from analysis/requirements to testing and maintenance. Each annotation provides an analysis of software engineering resources applicable to quantum software development and their applicability to different phases of the software development process. By synthesizing these diverse perspectives, this bibliography illuminates the evolving landscape of quantum software development and underscores the critical role of modelling in the context of software engineering. The result provides a valuable starting point for researchers and practitioners who wish to deepen the interplay between quantum computing and software engineering, fostering innovation and advances in this evolving field.;"Quantum Software Engineering; Quantum Computing; Quantum Modelling; Quantum Design";;Spanish;Article;Secondary Study;0;Annotated Bibliography;Software Engineering Models and Methods;O trabalho compila e analisa criticamente 30 artigos sobre modelagem de software quântico, categorizando-os com base em estratégias de design (como modelos conceituais, orientados a grafos, workflows, otimização e taxonomias) e em sua aplicabilidade nas diferentes fases do ciclo de vida do desenvolvimento de software quântico, fornecendo uma visão consolidada do estado da arte e abrindo caminhos para futuras revisões sistemáticas e propostas metodológicas.;O estudo destaca a escassez de técnicas consolidadas de modelagem para software quântico, a baixa cobertura das fases de observabilidade e análise de resultados no ciclo de vida, a carência de ferramentas de model-to-code robustas e a necessidade de linguagens e abstrações que permitam integrar elementos clássicos e quânticos de forma coesa e reutilizável.;Conceptual framework;"Lack of modeling standards; Tool support gap"
WOS0956;"Mendiluze, E; Ali, S; Arcaini, P; Yue, T";Muskit: A Mutation Analysis Tool for Quantum Software Testing;2021;International Conference on Automated Software Engineering;ASE;1266;1270;32;Given that quantum software testing is a new area of research, there is a lack of benchmark programs and bugs repositories to assess the effectiveness of testing techniques. To this end, quantum mutation analysis focuses on systematically generating faulty versions of Quantum Programs (QPs), called mutants, using mutation operators. Such mutants can be used as benchmarks to assess the quality of test cases in a test suite. Thus, we present Muskit - a quantum mutation analysis tool for QPs coded in IBM's Qiskit language. Muskit defines mutation operators on gates of QPs and selection criteria to reduce the number of mutants to generate. Moreover, it allows for the execution of test cases on mutants and generation of results for test analyses. Muskit is provided as command line interface, GUI, and web application. We validated Muskit by using it to generate and execute mutants for four QPs.;"quantum programs; software testing; mutation analysis; quantum circuits";;English;Conference Paper;Primary Study;Proposal of solution;0;Software Testing;O artigo introduz a ferramenta Muskit, que permite realizar testes de mutação em programas quânticos ao aplicar operadores de adição, remoção e substituição de portas quânticas em circuitos implementados com Qiskit. Muskit oferece suporte via linha de comando, GUI e aplicação web, possibilita execução automática de testes em mutantes, e fornece resultados detalhados com base em oráculos como Wrong Output e Output Probability, sendo validada com quatro programas reais (IQFT, QRAM, BV e CE).;Os principais desafios incluem a ausência de repositórios de bugs e benchmarks para programas quânticos, a dificuldade de identificação de mutantes equivalentes, a limitação na abrangência dos oráculos para certos tipos de falhas, e a necessidade de extensões para novos operadores e linguagens além do Qiskit, além da complexidade inerente à avaliação estatística de saídas probabilísticas em testes de software quântico.;Tool support;Quality assurance
WOS1152;"Sabzevari, MT; Esposito, M; Taibi, D; Khan, AA";QCSHQD: Quantum Computing as a Service for Hybrid Classical-Quantum Software Development: A Vision;2024;International Workshop on Quantum Software Engineering: The Next Evolution;QSE-NE;7;10;1;Quantum Computing (QC) is transitioning from theoretical frameworks to an indispensable powerhouse of computational capability, resulting in extensive adoption across both industrial and academic domains. QC presents exceptional advantages, including unparalleled processing speed and the potential to solve complex problems beyond the capabilities of classical computers. Nevertheless, academic researchers and industry practitioners encounter various challenges in harnessing the benefits of this technology. The limited accessibility of QC resources for classical developers, and a general lack of domain knowledge and expertise, represent insurmountable barrier, hence to address these challenges, we introduce a framework-Quantum Computing as a Service for Hybrid Classical-Quantum Software Development (QCSHQD), which leverages service-oriented strategies. Our framework comprises three principal components: an Integrated Development Environment (IDE) for user interaction, an abstraction layer dedicated to orchestrating quantum services, and a service provider responsible for executing services on quantum computer. This study presents a blueprint for QCSHQD, designed to democratize access to QC resources for classical developers who want to seamless harness QC power. The vision of QCSHQD paves the way for groundbreaking innovations by addressing key challenges of hybridization between classical and quantum computers.;"Quantum Computing; Quantum Services; Hybrid Quantum Computing; Framework";;English;Conference Paper;Primary Study;Proposal of solution;0;Software Architecture;O trabalho introduz um middleware baseado em princípios de arquitetura orientada a serviços, que abstrai as complexidades da computação quântica e permite que desenvolvedores clássicos acessem e utilizem serviços quânticos por meio de um IDE local, com uma camada intermediária responsável por traduzir, gerenciar e orquestrar os serviços em diferentes infraestruturas quânticas, incluindo simulações e hardwares reais.;Os principais desafios abordados incluem a falta de acessibilidade a recursos quânticos, a complexidade da mecânica quântica para desenvolvedores tradicionais, a escassez de ferramentas padronizadas para integração de serviços quânticos, e a necessidade de soluções que permitam desenvolvimento ágil e confiável sem exigir profundo conhecimento técnico da infraestrutura quântica.;Reference architecture;Integration challenges
WOS1153;"Wang, JY; Zhang, Q; Xu, GH; Kim, M";QDiff: Differential Testing of Quantum Software Stacks;2021;International Conference on Automated Software Engineering;ASE;692;704;19;Over the past few years, several quantum software stacks (QSS) have been developed in response to rapid hardware advances in quantum computing. A QSS includes a quantum programming language, an optimizing compiler that translates a quantum algorithm written in a high-level language into quantum gate instructions, a quantum simulator that emulates these instructions on a classical device, and a software controller that sends analog signals to a very expensive quantum hardware based on quantum circuits. In comparison to traditional compilers and architecture simulators, QSSes are difficult to tests due to the probabilistic nature of results, the lack of clear hardware specifications, and quantum programming complexity. This work devises a novel differential testing approach for QSSes, named QDIFF with three major innovations: (1) We generate input programs to be tested via semantics-preserving, source to source transformation to explore program variants. (2) We speed up differential testing by filtering out quantum circuits that are not worthwhile to execute on quantum hardware by analyzing static characteristics such as a circuit depth, 2-gate operations, gate error rates, and T1 relaxation time. (3) We design an extensible equivalence checking mechanism via distribution comparison functions such as Kolmogorov-Smirnov test and cross entropy. We evaluate QDIFF with three widely-used open source QSSes: Qiskit from IBM, Cirq from Google, and Pyquil from Rigetti. By running QDIFF on both real hardware and quantum simulators, we found several critical bugs revealing potential instabilities in these platforms. QDIFF's source transformation is effective in producing semantically equivalent yet not-identical circuits (i.e., 34% of trials), and its filtering mechanism can speed up differential testing by 66%.;;;English;Conference Paper;Primary Study;Evaluation research;0;Software Testing;O artigo apresenta o QDiff, o primeiro framework de teste diferencial para stacks de software quântico, que gera variantes semanticamente equivalentes de programas, aplica técnicas de filtragem baseadas em métricas de circuitos (como profundidade e número de portas de 2 qubits), e compara distribuições de saída usando testes estatísticos como Kolmogorov–Smirnov e entropia cruzada. O QDiff identificou bugs críticos e divergências além do ruído esperado em Qiskit, Cirq e Pyquil, e alcançou uma redução de 66% na necessidade de execução em hardware quântico ou simuladores ruidosos.;Os desafios principais incluem a geração de variantes logicamente equivalentes, a filtragem eficaz de circuitos que não contribuem para a detecção de bugs, a necessidade de métodos robustos de comparação de distribuições probabilísticas, e a limitação de recursos computacionais e de hardware real para execução de grandes volumes de testes em ambientes quânticos.;Conceptual framework;"Quality assurance; Hardware limitations"
WOS1155;"Kashif, M; Al-Kuwari, S";Qiskit As a Simulation Platform for Measurement-based Quantum Computation;2022;International Conference on Software Architecture Companion;ICSA;152;159;3;Universal quantum computation is anticipated to provide solutions to classically intractable problems. Measurement-based quantum computation (MBQC) is one of the leading candidates to achieve universal quantum computation. In MBQC, the development of the underlying quantum algorithms is governed by single-qubit measurements on a highly entangled cluster state of qubits. Recent advances in MBQC mainly explore the physical aspects of MBQC (i.e. Physical development of cluster states) and as most of the simulators that exist today are for the gate-based model of quantum computation, and to date, there is no MBQC-dedicated simulator for MBQC-based algorithmic development. This paper exploits a well-maintained, and popular gate-based simulation framework developed by IBM called Qiskit to design MBQC-based quantum algorithms. We implement various gates, including Hadamard, and CNOT gates, to demonstrate the universality of MBQC in Qiskit. We also demonstrate MBCQ-based algorithm development in Qiskit by implementing MBQC-based teleportation protocol and Grover's algorithm. The objective of this exercise is to demonstrate that the existing gate-based simulators can be used for developing MBQC-based quantum designs, which would help the research community in exploring the advantages that MBQC can offer compared to other quantum computation models.;"Quantum computing; Measurement-based quantum computation; one-way quantum computer; Qiskit; Qubit measurements; Quantum gates; Grover's algorithm";STATE;English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;O artigo apresenta a implementação de portas quânticas universais (Hadamard, CNOT, fase π/2, NOT) no modelo 1WQC utilizando o Qiskit, além da aplicação desses elementos na construção de protocolos de teletransporte e do algoritmo de Grover. A abordagem mostra que é possível empregar plataformas baseadas em circuitos, como o Qiskit, para experimentar e validar algoritmos MBQC de forma prática, o que contribui para a acessibilidade e avanço da área.;Os desafios abordados incluem a ausência de simuladores dedicados a MBQC, a necessidade de representar estados altamente entrelaçados em ambientes limitados, a dificuldade de projetar algoritmos eficientes em topologias fixas de qubits, e a adaptação de estruturas como medições em bases não computacionais usando portas elementares disponíveis nas bibliotecas gate-based.;Tool support;Other technical limitation
WOS1192;"Eddin, SK; Salloum, H; Shahin, MN; Salloum, B; Mazzara, M; Bahrami, MR";Quantum Microservices: Transforming Software Architecture with Quantum Computing;2024;International Conference on Advanced Information Networking and Applications;AINA;227;237;0;This paper conducts an exhaustive exploration of the evolutionary journey of microservices within the domain of software architecture. It meticulously traces the historical trajectory, current status, and potential future pathways of microservices in software design. Additionally, this study introduces a pioneering concept known as Quantum Microservices. Quantum Microservices represent a novel approach aimed at augmenting software design by leveraging concepts from quantum computing. In this paper, we will delve into defining their architecture, core features, challenges, and future prospects. This study envisions their pivotal role in reshaping the landscape of software development by offering enhanced efficiency and innovation opportunities.;"Microservices; Software Architecture; Distributed Systems; Quantum Computing";;English;Conference Paper;Primary Study;Proposal of solution;0;Software Architecture;O trabalho introduz o conceito arquitetural de microserviços quânticos, definindo seus componentes estruturais — como camada de integração de algoritmos quânticos, módulos de manipulação de dados e integração com infraestrutura quântica — além de destacar sua modularidade, compatibilidade com DevOps e potencial para aplicações em áreas como otimização, IA e criptografia.;Os principais desafios apontam para a ausência de padrões de comunicação, ferramentas para especificação de APIs e mecanismos de geração de código independentes de linguagem, além das limitações nas plataformas atuais de execução quântica, dificultando o controle e a padronização no uso de microserviços quânticos em cenários reais.;Reference architecture;Lack of standardization
WOS1207;"Moguel, E; Rojo, J; Valencia, D; Berrocal, J; Garcia-Alonso, J; Murillo, JM";Quantum service-oriented computing: current landscape and challenges;2022;Software Quality Journal;Software Quality Journal;983;1002;28;The development that quantum computing technologies are achieving is beginning to attract the interest of companies that could potentially be users of quantum software. Thus, it is perfectly feasible that during the next few years hybrid systems will start to appear integrating both the classical software systems of companies and new quantum ones providing solutions to problems that still remain unmanageable today. A natural way to support such integration is Service-Oriented Computing. While conceptually the invocation of a quantum software service is similar to that of a classical one, technically there are many differences and technological limitations, which refer to platform independence, decoupling, scalability, etc. To highlight these differences and the difficulties to develop quality quantum services, this paper takes a well-known problem to which a quantum solution can be provided, integer factorization, making use of the Amazon Braket quantum service platform. The exercise of trying to provide the factorization as a quantum service is carried out following the best practices, design patterns and standards existing in the implementation of classical services. This case study is used to highlight the rough edges and limitations that arise in the integration of classical-quantum hybrid systems using service-oriented computing. The conclusion of the study allows us to point out directions in which to focus research efforts in order to achieve effective quantum service-oriented computing.;"Quantum services; Classical services; Hybrid classical-quantum software; Quality";;English;Article;Primary Study;Proposal of solution;0;Software Architecture;O artigo apresenta uma análise detalhada sobre como os princípios da computação orientada a serviços podem ser aplicados ao desenvolvimento de software quântico, demonstrando por meio do caso de fatoração de inteiros no Amazon Braket que a integração entre serviços clássicos e quânticos ainda carece de padronização, ferramentas de monitoramento, mecanismos de escalabilidade e definição de APIs independentes de plataforma, além de discutir soluções embrionárias como gateways quânticos e modelos híbridos de orquestração.;Os principais desafios incluem a ausência de especificações formais e ferramentas para definição e monitoramento de serviços quânticos, dificuldade de comunicação entre serviços clássicos e quânticos, falta de mecanismos de acoplamento e desacoplamento padrão, inexistência de infraestrutura de escalabilidade e balanceamento de carga para serviços quânticos, além da necessidade de novas estratégias de design, orquestração e confiabilidade adaptadas à natureza probabilística e dependente de hardware da computação quântica.;"Tool support; Hybrid systems";"Lack of standardization; Hardware limitations"
WOS1215;"Mandal, AK; Nadim, M; Roy, CK; Roy, B; Schneider, KA";Quantum software engineering and potential of quantum computing in software engineering research: a review;2025;Automated Software Engineering;ASE Journal;;;0;Research in software engineering is essential for improving software development practices, leading to reliable and secure software. Leveraging the principles of quantum physics, quantum computing has emerged as a new computational paradigm that offers significant advantages over classical computing. As quantum computing progresses rapidly, its potential applications across various fields are becoming apparent. In software engineering, many tasks involve complex computations where quantum computers can greatly speed up the development process, leading to faster and more efficient solutions. With the growing use of quantum-based applications in different fields, Quantum Software Engineering (QSE) has emerged as a discipline focused on designing, developing, and optimizing quantum software for diverse applications. This paper aims to review the role of quantum computing in software engineering research and the latest developments in QSE. To our knowledge, this is the first comprehensive review on this topic. We begin by introducing quantum computing, exploring its fundamental concepts, and discussing its potential applications in software engineering. We also examine various QSE techniques that expedite software development. Finally, we discuss the opportunities and challenges in quantum-driven software engineering and QSE. Our study reveals that quantum machine learning and quantum optimization have substantial potential to address classical software engineering tasks, though this area is still limited. Current QSE tools and techniques lack robustness and maturity, indicating a need for more focus. One of the main challenges is that quantum computing has yet to reach its full potential.;"Software engineering; Quantum computing; Quantum software engineering; Quantum machine learning; Quantum algorithms";;English;Article;Secondary Study;0;Systematic Review;The Software Engineering in General;O artigo contribui ao estabelecer os fundamentos da Engenharia de Software Quântica como área de pesquisa independente, definindo objetivos, características e uma agenda de pesquisa. Ele propõe uma adaptação das práticas clássicas de engenharia de software ao contexto quântico, com foco em abstrações adequadas, processos sistemáticos, ferramentas de apoio, qualidade de software e métodos formais. O trabalho destaca ainda o papel da interdisciplinaridade como chave para o avanço do campo.;Entre os principais desafios estão a ausência de processos bem definidos para desenvolvimento quântico, a necessidade de linguagens e abstrações mais adequadas ao paradigma quântico, e a escassez de ferramentas e técnicas de verificação e validação adaptadas à natureza probabilística dos algoritmos quânticos. Também é desafiador formar equipes com competências em computação quântica e engenharia de software simultaneamente, exigindo novas estratégias de educação e colaboração interdisciplinar.;"Process model; Tool support; Role definition";"Skill gap; Quality assurance"
WOS1249;"Wang, XY; Arcaini, P; Yue, T; Ali, S";QuCAT: A Combinatorial Testing Tool for Quantum Software;2023;International Conference on Automated Software Engineering;ASE;2066;2069;4;With the increased developments in quantum computing, the availability of systematic and automatic testing approaches for quantum programs is becoming increasingly essential. To this end, we present the quantum software testing tool QuCAT for combinatorial testing of quantum programs. QuCAT provides two functionalities of use. With the first functionality, the tool generates a test suite of a given strength (e.g., pair-wise). With the second functionality, it generates test suites with increasing strength until a failure is triggered or a maximum strength is reached. QuCAT uses two test oracles to check the correctness of test outputs. We assess the cost and effectiveness of QuCAT with 3 faulty versions of 5 quantum programs. Results show that combinatorial test suites with a low strength can find faults with limited cost, while a higher strength performs better to trigger some difficult faults with relatively higher cost. Repository: https://github.com/Simula- COMPLEX/qucat- tool Video: https://youtu.be/UsqgOudKLio;"quantum programs; software testing; combinatorial testing";;English;Conference Paper;Primary Study;Proposal of solution;0;Software Testing;O artigo propõe e valida a ferramenta QuCAT, que realiza testes combinatórios em programas quânticos escritos em Qiskit, gerando suítes de teste com diferentes forças (pairwise, 3-wise, etc.), avaliando automaticamente os resultados por meio de oráculos de teste e detectando falhas de saída inesperada e distribuição incorreta. A ferramenta foi avaliada com sucesso em versões defeituosas de cinco programas quânticos clássicos, demonstrando eficácia mesmo com força de teste reduzida.;Os principais desafios abordados incluem a dificuldade de identificar combinações específicas de entradas que provocam falhas em programas quânticos, a necessidade de múltiplas execuções devido à natureza probabilística do software quântico, e a escassez de ferramentas automatizadas que combinem geração de testes, execução e avaliação com métricas estatísticas robustas como o teste qui-quadrado.;Tool support;Quality assurance
WOS1251;"Wang, XY; Arcaini, P; Yue, T; Ali, S";Quito: a Coverage-Guided Test Generator for Quantum Programs;2021;International Conference on Automated Software Engineering;ASE;1237;1241;21;Automation in quantum software testing is essential to support systematic and cost-effective testing. Towards this direction, we present a quantum software testing tool called Quito that can automatically generate test suites covering three coverage criteria defined on inputs and outputs of a quantum program coded in Qiskit, i.e., input coverage, output coverage, and input-output coverage. Quito also implements two types of test oracles based on program specifications, i.e., checking whether a quantum program produced a wrong output or checking a probabilistic test oracle with statistical test. We describe the architecture and methodology of the tool. We also validated the tool with one quantum program and one faulty version of it. Results indicate that Quito can generate test suites and perform test assessments that detect faults, and produce test results with a good time performance.;"quantum programs; software testing; coverage criteria; test generation; test assessment";;English;Conference Paper;Primary Study;Proposal of solution;0;Software Testing;O artigo propõe a ferramenta Quito, que automatiza a geração de suítes de teste para programas quânticos com base em critérios específicos de cobertura (entrada, saída, entrada-saída), e implementa dois oráculos de teste: um baseado em verificação de saída inválida e outro baseado em teste estatístico (Wilcoxon). A ferramenta foi validada com sucesso em programas reais como o QRAM, detectando falhas e demonstrando viabilidade prática.;Os principais desafios incluem a elevada complexidade e custo computacional das simulações quânticas, a necessidade de integração com múltiplas linguagens além do Qiskit, a limitação de oráculos estatísticos disponíveis, e a dificuldade em definir critérios de cobertura e especificações completas que capturem adequadamente o comportamento probabilístico dos programas quânticos.;Tool support;Integration challenges
WOS1255;"Ye, JM; Xia, SZ; Zhang, FY; Arcaini, P; Ma, L; Zhao, JJ; Ishikawa, F";QuraTest: Integrating Quantum Specific Features in Quantum Program Testing;2023;International Conference on Automated Software Engineering;ASE;1149;1161;6;The recent fast development of quantum computers breaks several computation limitations that are difficult for conventional computers. Up to the present, although many approaches and tools have been proposed to test quantum programs, the fundamental features of quantum programs, i.e., magnitude, phase, and entanglement, have been largely overlooked, leading to limited fault detection capability and reduced testing effectiveness. To address this problem, we propose an automated testing framework named QURATEST, equipped with three test case generators (including two newly proposed techniques, UCNOT and IQFT in this paper, as well as one based on Random techniques) to test quantum programs. Overall, the proposed generators enable the generation of diverse test inputs by considering the quantum features of quantum programs. In the experiments, we perform an in-depth evaluation of QURATEST from three aspects: generated test case diversity, output coverage of the program under test, and fault detection capability. The results demonstrate the potential of our newly proposed techniques in that IQFT can generate the most diverse test cases regarding magnitude, phase, and entanglement, with 66% cell coverage. Comparatively, the Random approach only has 10% cell coverage. Regarding the evaluations of the output coverage, IQFT can achieve the highest output coverage in 70.2% (33 out of 47) of all quantum programs. In terms of fault detection, UCNOT outperforms the other two techniques. Specifically, the test cases generated by UCNOT have the best mutation score in 88.4% (23 out of 26) quantum programs.;"Quantum program; test case generation; magnitude; phase; entanglement";;English;Conference Paper;Primary Study;Evaluation research;0;Software Testing;O trabalho propõe e valida o QuraTest, um framework de testes que introduz dois novos geradores de casos de teste (UCNOT e IQFT) sensíveis a características quânticas como magnitude, fase e entrelaçamento, demonstrando superioridade em diversidade de entrada, cobertura de saída e detecção de falhas em comparação a abordagens aleatórias, com ganhos como cobertura de células de até 66% (IQFT) e pontuação de mutação de até 91,7%.;Os principais desafios incluem a complexidade em gerar entradas que incorporem propriedades intrínsecas da mecânica quântica, a ausência de ferramentas que explorem magnitude, fase e entrelaçamento de forma automatizada, e a dificuldade em estimar a suficiência de amostragens e mensurações em programas com muitos qubits, o que afeta diretamente a confiabilidade da avaliação de testes em sistemas quânticos reais.;Conceptual framework;Quality assurance
WOS1314;"Jiménez-Navajas, L; Pérez-Castillo, R; Piattini, M";Reverse Engineering of OpenQASM3 Quantum Programs to KDM Models;2023;International Conference on Evaluation of Novel Approaches to Software Engineering  ;ENASE;513;520;0;The development of quantum computing is following a substantial growth. This leads us closer to the implementation of practical solutions based on quantum software that address problems that are not computable by classical software in a practical timeframe. Hence, some companies will need to adapt their development practices and, so, their information systems to take advantage of quantum computing. Unfortunately, there is still a lack of tools, frameworks, and processes to support the evolution of current systems towards the combination of the quantum and classical paradigms into information systems. Hence, this paper presents a reverse engineering technique to generate abstract models based on the Knowledge Discovery Metamodel (KDM) by analyzing quantum software written in OpenQASM3. The main implication is that KDM models represent, in a technology-agnostic way, the different components and interrelationships of quantum software. These models then can be used to restructure and redesign the target hybrid information system.;"Reverse Engineering; Quantum Computing; OpenQASM3; KDM";;English;Conference Paper;Primary Study;Proposal of solution;0;Software Engineering Models and Methods;"O trabalho estende o metamodelo KDM para representar elementos quânticos como qubits, operações, medidas e gates, propondo um parser baseado em ANTLRv4 para gerar árvores sintáticas de programas em OpenQASM3 e convertê-las em modelos KDM; a solução foi integrada na ferramenta QRev e avaliada com 13 programas reais, atingindo média de 72,2% de recall e 100% de precisão.";Os principais desafios incluem a representação adequada de estruturas como funções e oráculos, a padronização de modelos híbridos para apoiar a modernização de sistemas legados com partes quânticas, e a criação de ferramentas que permitam evolução, reengenharia e integração contínua de softwares clássicos e quânticos em ambientes corporativos.;Tool support;"Lack of standardization; Integration challenges; Modeling difficulty"
WOS1366;"Gabor, T; Rosenfeld, ML; Linnhoff-Popien, C";Simple Quantum State Encodings for Hybrid Programming of Quantum Simulators;2022;International Conference on Software Architecture Companion;ICSA;170;173;0;Especially sparse quantum states can be efficiently encoded with simple classical data structures. We show the admissibility of using a classical database to encode quantum states for a few practical examples and argue in favor of further optimizations for quantum simulation targeting simpler, only semi-quantum circuits.;"quantum computing; quantum algorithms; quantum state";;English;Conference Paper;Primary Study;Proposal of solution;0;Software Construction;O artigo propõe e avalia quatro formas de codificar estados quânticos para simulação: arrays Numpy, banco de dados SQLite, simulador padrão do Qiskit e um método híbrido que alterna entre eles com base na densidade de portas Hadamard. Os resultados mostram que, para circuitos com poucos qubits não-determinísticos, as abordagens baseadas em banco de dados são mais eficientes que o Qiskit, possibilitando um novo paradigma de programação híbrida com algoritmos parcialmente clássicos e parcialmente quânticos.;Os principais desafios incluem a falta de simuladores que adaptem automaticamente a simulação com base na complexidade do circuito, o custo computacional crescente em circuitos densos em entrelaçamento, a dificuldade de balancear tempo de simulação e fidelidade usando técnicas como “state drop”, e a necessidade de plataformas genéricas que combinem múltiplas codificações para suportar fluxos de trabalho híbridos realistas.;Process model;System complexity
WOS1388;"Guo, JZ; Ying, MS";Software Pipelining for Quantum Loop Programs;2023;Transactions on Software Engineering;TOSE;2815;2828;2;We propose a method for performing software pipelining on quantum for-loop programs to exploit parallelism in and across iterations. We redefined concepts useful in program optimization, including array aliasing, instruction dependency, and resource conflict required in optimizing quantum programs. Using these concepts, we present a software pipelining framework exploiting instruction-level parallelism in quantum loop programs. This method is further enhanced with several improvements to reduce total gate count and program depth. The optimization method is then evaluated on some popular quantum algorithms like Grover and QAOA, and compared under different configurations and with several baseline compilers. The evaluation results show that our approach can schedule loop programs with depth close to the depth of the entire loop unrolling while generating smaller code sizes and consuming much less time. This is the first step towards optimization of a quantum program with such loop control flow, as far as we know.;"Quantum program scheduling; quantum program compilation";;English;Article;Primary Study;Evaluation research;0;Software Construction;O artigo introduz uma abordagem inédita de pipelining de software para programas quânticos com laços, redefinindo conceitos como dependência de instrução e conflitos de recursos no contexto quântico, além de apresentar um algoritmo que combina unrolling parcial, rotação de laços e agendamento modular para reduzir a profundidade dos circuitos e o tamanho do código, mantendo a equivalência semântico-operacional entre versões otimizadas e originais, com experimentos demonstrando resultados superiores a métodos baseados apenas em ASAP ou unrolling total.;Os principais desafios enfrentados incluem a resolução de aliasing entre qubits dentro e entre iterações, a identificação de oportunidades seguras de fusão de portas e cancelamento de operações, a definição de dependências de instrução sob novas regras de comutatividade quântica, o manejo eficiente de conflitos de recursos sob paralelismo qubit-level, e a necessidade de tornar a técnica compatível com arquiteturas reais que impõem restrições sobre topologia de qubits, sets de instruções e suporte ao controle clássico.;"Process model; Collaboration support";Other technical limitation
WOS1453;"Aparicio-Morales, AM; Moguel, E; Garcia-Alonso, J; Fernandez, A; Bibbo, LM; Murillo, JM";Supply and Demand in the Training of Quantum Software Engineering Workforce;2024;Memoria Investigaciones en Ingeniería;MII;248;256;0;Quantum Technologies are experiencing significant growth due to substantial investments made by governments worldwide. These investments aim to enhance global competitiveness in this field and position countries as key players. However, facing the changes of this new paradigm requires an increment in the workforce with specialized expertise in Quantum Technologies, particularly in the area of Quantum Computing. In this paper, we present a concise overview of the current quantum computing education offers and an outline of the current job offer landscape. We highlight essential elements for individuals interested in building a career profile in quantum software engineering, including understanding the professional requirements that experts and companies have established. The main goal of this paper is to offer an overview of the current educational and professional landscape in the quantum software engineering field, empowering the next generation of software engineers to thrive in a quantum technology driven future that will profoundly impact human lives.;"Quantum Computing; Quantum Software Engineering; Education and Training; Competence Framework";;English;Article;Primary Study;Opinion papers;0;Software Architecture;O artigo contribui ao propor um modelo arquitetural modular e em camadas para o desenvolvimento de sistemas de computação quântica, facilitando a separação de responsabilidades, reutilização de componentes e evolução da infraestrutura. A proposta fornece uma base teórica para orientar o design de sistemas híbridos clássico-quânticos, abordando desafios específicos como orquestração de tarefas, interface com hardware e abstração de complexidade algorítmica.;Os principais desafios incluem a definição de interfaces padronizadas entre componentes clássicos e quânticos, a escalabilidade da arquitetura diante de diferentes tipos de algoritmos e dispositivos, e a falta de ferramentas e frameworks consolidados que deem suporte à implementação prática dessas arquiteturas em ambientes reais.;Reference architecture;Tool support gap
WOS1516;"Long, PX; Zhao, JJ";Testing Multi-Subroutine Quantum Programs: From Unit Testing to Integration Testing;2024;Transactions on Software Engineering and Methodology;TOSEM;;;5;Quantum computing has emerged as a promising field with the potential to revolutionize various domains by harnessing the principles of quantum mechanics. As quantum hardware and algorithms continue to advance, developing high-quality quantum software has become crucial. However, testing quantum programs poses unique challenges due to the distinctive characteristics of quantum systems and the complexity of multi-subroutine programs. This article addresses the specific testing requirements of multi-subroutine quantum programs. We begin by investigating critical properties by surveying existing quantum libraries and providing insights into the challenges of testing these programs. Building upon this understanding, we focus on testing criteria and techniques based on the whole testing process perspective, spanning from unit testing to integration testing. We delve into various aspects, including IO analysis, quantum relation checking, structural testing, behavior testing, integration of subroutine pairs, and test case generation. We also introduce novel testing principles and criteria to guide the testing process. We conduct comprehensive testing on typical quantum subroutines, including diverse mutants and randomized inputs, to evaluate our proposed approach. The analysis of failures provides valuable insights into the effectiveness of our testing methodology. Additionally, we present case studies on representative multi-subroutine quantum programs, demonstrating the practical application and effectiveness of our proposed testing principles and criteria.;"Quantum computing; software testing; unit testing; integration testing";;English;Article;Primary Study;Evaluation research;0;Software Testing;O trabalho introduz um novo framework de teste, denominado QMutPy, que permite testar de forma estruturada programas quânticos compostos, aplicando testes unitários em sub-rotinas individuais e testes de integração para validar o comportamento coletivo do sistema. Além disso, fornece exemplos práticos para demonstrar a aplicabilidade da abordagem.;Um dos principais desafios abordados é a dificuldade em testar programas quânticos complexos compostos por múltiplas sub-rotinas, especialmente pela natureza probabilística da computação quântica e pela escassez de ferramentas adequadas para realizar testes de integração nesse contexto.;Conceptual framework;"Integration challenges; Quality assurance"